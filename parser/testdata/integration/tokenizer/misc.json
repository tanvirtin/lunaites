[
  {
    "source": "\"",
    "result": "[1:2] unfinished string near '\"'"
  },
  {
    "source": "\"'",
    "result": "[1:3] unfinished string near '\"''"
  },
  {
    "source": "'\"",
    "result": "[1:3] unfinished string near ''\"'"
  },
  {
    "source": "'",
    "result": "[1:2] unfinished string near '''"
  },
  {
    "source": "'\n",
    "result": "[2:1] unfinished string near ''\n'"
  },
  {
    "source": "\"bar",
    "result": "[1:5] unfinished string near '\"bar'"
  },
  {
    "source": "'bar'",
    "result": [
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          5
        ],
        "type": "StringLiteral",
        "value": "'bar'"
      },
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          5,
          5
        ],
        "type": "EOF",
        "value": "<eof>"
      }
    ]
  },
  {
    "source": "\"bar\"",
    "result": [
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          5
        ],
        "type": "StringLiteral",
        "value": "\"bar\""
      },
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          5,
          5
        ],
        "type": "EOF",
        "value": "<eof>"
      }
    ]
  },
  {
    "source": "0x333pe",
    "result": "[1:7] malformed number near '0x333p'"
  },
  {
    "source": "local 3 true ",
    "result": [
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          5
        ],
        "type": "Local",
        "value": "local"
      },
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          6,
          7
        ],
        "type": "NumericLiteral",
        "value": "3"
      },
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          8,
          12
        ],
        "type": "BooleanLiteral",
        "value": "true"
      },
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          13,
          13
        ],
        "type": "EOF",
        "value": "<eof>"
      }
    ]
  }
]
