[
  {
    "source": "-- comment",
    "result": [
      {
        "type": "CommentLiteral",
        "value": "-- comment",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          10
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          10,
          10
        ]
      }
    ]
  },
  {
    "source": "-- comment\n-- comment",
    "result": [
      {
        "type": "CommentLiteral",
        "value": "-- comment",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          10
        ]
      },
      {
        "type": "CommentLiteral",
        "value": "-- comment",
        "lnum": 2,
        "lnumStartIndex": 11,
        "range": [
          11,
          21
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 2,
        "lnumStartIndex": 11,
        "range": [
          21,
          21
        ]
      }
    ]
  },
  {
    "source": "--coment",
    "result": [
      {
        "type": "CommentLiteral",
        "value": "--coment",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          8
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          8,
          8
        ]
      }
    ]
  },
  {
    "source": "-- comment\nreturn",
    "result": [
      {
        "type": "CommentLiteral",
        "value": "-- comment",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          10
        ]
      },
      {
        "type": "Return",
        "value": "return",
        "lnum": 2,
        "lnumStartIndex": 11,
        "range": [
          11,
          17
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 2,
        "lnumStartIndex": 11,
        "range": [
          17,
          17
        ]
      }
    ]
  },
  {
    "source": "return --comment \n",
    "result": [
      {
        "type": "Return",
        "value": "return",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          6
        ]
      },
      {
        "type": "CommentLiteral",
        "value": "--comment ",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          7,
          17
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 2,
        "lnumStartIndex": 18,
        "range": [
          18,
          18
        ]
      }
    ]
  },
  {
    "source": "--[[comment]]",
    "result": [
      {
        "type": "CommentLiteral",
        "value": "--[[comment]]",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          13
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          13,
          13
        ]
      }
    ]
  },
  {
    "source": "if true--[[comment]]then end",
    "result": [
      {
        "type": "If",
        "value": "if",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          2
        ]
      },
      {
        "type": "BooleanLiteral",
        "value": "true",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          3,
          7
        ]
      },
      {
        "type": "CommentLiteral",
        "value": "--[[comment]]",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          7,
          20
        ]
      },
      {
        "type": "Then",
        "value": "then",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          20,
          24
        ]
      },
      {
        "type": "End",
        "value": "end",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          25,
          28
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          28,
          28
        ]
      }
    ]
  },
  {
    "source": "--[=[comment]=] return",
    "result": [
      {
        "type": "CommentLiteral",
        "value": "--[=[comment]=]",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          15
        ]
      },
      {
        "type": "Return",
        "value": "return",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          16,
          22
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          22,
          22
        ]
      }
    ]
  },
  {
    "source": "--[===[comment\n--[=[sub]=]--\n]===]return",
    "result": [
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          34
        ],
        "type": "CommentLiteral",
        "value": "--[===[comment\n--[=[sub]=]--\n]===]"
      },
      {
        "type": "Return",
        "value": "return",
        "lnum": 3,
        "lnumStartIndex": 29,
        "range": [
          34,
          40
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 3,
        "lnumStartIndex": 29,
        "range": [
          40,
          40
        ]
      }
    ]
  },
  {
    "source": "--[[comment\nline two]]",
    "result": [
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          22
        ],
        "type": "CommentLiteral",
        "value": "--[[comment\nline two]]"
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 2,
        "lnumStartIndex": 12,
        "range": [
          22,
          22
        ]
      }
    ]
  },
  {
    "source": "--[[\ncomment\nline two\n]]",
    "result": [
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          24
        ],
        "type": "CommentLiteral",
        "value": "--[[\ncomment\nline two\n]]"
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 4,
        "lnumStartIndex": 22,
        "range": [
          24,
          24
        ]
      }
    ]
  },
  {
    "source": "--[==\nreturn --]]",
    "result": [
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          5
        ],
        "type": "CommentLiteral",
        "value": "--[=="
      },
      {
        "type": "Return",
        "value": "return",
        "lnum": 2,
        "lnumStartIndex": 6,
        "range": [
          6,
          12
        ]
      },
      {
        "lnum": 2,
        "lnumStartIndex": 6,
        "range": [
          13,
          17
        ],
        "type": "CommentLiteral",
        "value": "--]]"
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 2,
        "lnumStartIndex": 6,
        "range": [
          17,
          17
        ]
      }
    ]
  },
  {
    "source": "if true -- comment\nthen end",
    "result": [
      {
        "type": "If",
        "value": "if",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          0,
          2
        ]
      },
      {
        "type": "BooleanLiteral",
        "value": "true",
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          3,
          7
        ]
      },
      {
        "lnum": 1,
        "lnumStartIndex": 0,
        "range": [
          8,
          18
        ],
        "type": "CommentLiteral",
        "value": "-- comment"
      },
      {
        "type": "Then",
        "value": "then",
        "lnum": 2,
        "lnumStartIndex": 19,
        "range": [
          19,
          23
        ]
      },
      {
        "type": "End",
        "value": "end",
        "lnum": 2,
        "lnumStartIndex": 19,
        "range": [
          24,
          27
        ]
      },
      {
        "type": "EOF",
        "value": "<eof>",
        "lnum": 2,
        "lnumStartIndex": 19,
        "range": [
          27,
          27
        ]
      }
    ]
  },
  {
    "source": "--[=[x]x",
    "result": "[1:9] unfinished long comment (starting at line 1) near '--[=[x]x'"
  }
]
