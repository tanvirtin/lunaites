export const snapshot = {};

snapshot[`5.1_constructs 1`] = `
Chunk {
  block: Block {
    statements: [
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 1,
                lnumStartIndex: 0,
                range: [
                  6,
                  22,
                ],
                type: "StringLiteral",
                value: '"testing syntax"',
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 1,
              lnumStartIndex: 0,
              range: [
                0,
                5,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 5,
                      lnumStartIndex: 47,
                      range: [
                        54,
                        55,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 5,
                    lnumStartIndex: 47,
                    range: [
                      56,
                      57,
                    ],
                    type: "Carrot",
                    value: "^",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 5,
                      lnumStartIndex: 47,
                      range: [
                        58,
                        59,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 5,
                  lnumStartIndex: 47,
                  range: [
                    60,
                    61,
                  ],
                  type: "Carrot",
                  value: "^",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 5,
                    lnumStartIndex: 47,
                    range: [
                      62,
                      63,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 5,
                lnumStartIndex: 47,
                range: [
                  64,
                  66,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 5,
                    lnumStartIndex: 47,
                    range: [
                      67,
                      68,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 5,
                  lnumStartIndex: 47,
                  range: [
                    69,
                    70,
                  ],
                  type: "Carrot",
                  value: "^",
                },
                right: GroupingExpression {
                  expression: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 5,
                        lnumStartIndex: 47,
                        range: [
                          72,
                          73,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 5,
                      lnumStartIndex: 47,
                      range: [
                        74,
                        75,
                      ],
                      type: "Carrot",
                      value: "^",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 5,
                        lnumStartIndex: 47,
                        range: [
                          76,
                          77,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 5,
              lnumStartIndex: 47,
              range: [
                47,
                53,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 6,
                      lnumStartIndex: 81,
                      range: [
                        88,
                        89,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 6,
                    lnumStartIndex: 81,
                    range: [
                      90,
                      91,
                    ],
                    type: "Carrot",
                    value: "^",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 6,
                      lnumStartIndex: 81,
                      range: [
                        92,
                        93,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 6,
                  lnumStartIndex: 81,
                  range: [
                    94,
                    95,
                  ],
                  type: "Star",
                  value: "*",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 6,
                    lnumStartIndex: 81,
                    range: [
                      96,
                      97,
                    ],
                    type: "NumericLiteral",
                    value: "4",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 6,
                lnumStartIndex: 81,
                range: [
                  98,
                  100,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 6,
                        lnumStartIndex: 81,
                        range: [
                          102,
                          103,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 6,
                      lnumStartIndex: 81,
                      range: [
                        104,
                        105,
                      ],
                      type: "Carrot",
                      value: "^",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 6,
                        lnumStartIndex: 81,
                        range: [
                          106,
                          107,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 6,
                  lnumStartIndex: 81,
                  range: [
                    109,
                    110,
                  ],
                  type: "Star",
                  value: "*",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 6,
                    lnumStartIndex: 81,
                    range: [
                      111,
                      112,
                    ],
                    type: "NumericLiteral",
                    value: "4",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 6,
              lnumStartIndex: 81,
              range: [
                81,
                87,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 7,
                      lnumStartIndex: 115,
                      range: [
                        122,
                        123,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 7,
                    lnumStartIndex: 115,
                    range: [
                      124,
                      125,
                    ],
                    type: "Carrot",
                    value: "^",
                  },
                  right: UnaryExpression {
                    argument: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 7,
                        lnumStartIndex: 115,
                        range: [
                          127,
                          128,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 7,
                      lnumStartIndex: 115,
                      range: [
                        126,
                        127,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 7,
                  lnumStartIndex: 115,
                  range: [
                    129,
                    131,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 7,
                      lnumStartIndex: 115,
                      range: [
                        132,
                        133,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 7,
                    lnumStartIndex: 115,
                    range: [
                      134,
                      135,
                    ],
                    type: "Divide",
                    value: "/",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 7,
                      lnumStartIndex: 115,
                      range: [
                        136,
                        137,
                      ],
                      type: "NumericLiteral",
                      value: "4",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 7,
                lnumStartIndex: 115,
                range: [
                  138,
                  141,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: UnaryExpression {
                  argument: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 7,
                        lnumStartIndex: 115,
                        range: [
                          143,
                          144,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 7,
                      lnumStartIndex: 115,
                      range: [
                        145,
                        146,
                      ],
                      type: "Carrot",
                      value: "^",
                    },
                    right: UnaryExpression {
                      argument: UnaryExpression {
                        argument: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 7,
                            lnumStartIndex: 115,
                            range: [
                              150,
                              151,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 7,
                          lnumStartIndex: 115,
                          range: [
                            149,
                            150,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 7,
                        lnumStartIndex: 115,
                        range: [
                          147,
                          148,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 7,
                    lnumStartIndex: 115,
                    range: [
                      142,
                      143,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 7,
                  lnumStartIndex: 115,
                  range: [
                    152,
                    154,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: UnaryExpression {
                  argument: UnaryExpression {
                    argument: UnaryExpression {
                      argument: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 7,
                          lnumStartIndex: 115,
                          range: [
                            160,
                            161,
                          ],
                          type: "NumericLiteral",
                          value: "4",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 7,
                        lnumStartIndex: 115,
                        range: [
                          159,
                          160,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 7,
                      lnumStartIndex: 115,
                      range: [
                        157,
                        158,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 7,
                    lnumStartIndex: 115,
                    range: [
                      155,
                      156,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 7,
              lnumStartIndex: 115,
              range: [
                115,
                121,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: UnaryExpression {
                  argument: NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 8,
                      lnumStartIndex: 164,
                      range: [
                        175,
                        178,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 8,
                    lnumStartIndex: 164,
                    range: [
                      171,
                      174,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 8,
                  lnumStartIndex: 164,
                  range: [
                    179,
                    182,
                  ],
                  type: "And",
                  value: "and",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 8,
                    lnumStartIndex: 164,
                    range: [
                      183,
                      184,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 8,
                lnumStartIndex: 164,
                range: [
                  185,
                  188,
                ],
                type: "And",
                value: "and",
              },
              right: UnaryExpression {
                argument: GroupingExpression {
                  expression: BinaryExpression {
                    left: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 164,
                          range: [
                            194,
                            195,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 8,
                        lnumStartIndex: 164,
                        range: [
                          196,
                          197,
                        ],
                        type: "GreaterThan",
                        value: ">",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 164,
                          range: [
                            198,
                            199,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 8,
                      lnumStartIndex: 164,
                      range: [
                        200,
                        202,
                      ],
                      type: "Or",
                      value: "or",
                    },
                    right: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 164,
                          range: [
                            203,
                            204,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 8,
                        lnumStartIndex: 164,
                        range: [
                          205,
                          206,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 164,
                          range: [
                            207,
                            208,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 8,
                  lnumStartIndex: 164,
                  range: [
                    189,
                    192,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 8,
              lnumStartIndex: 164,
              range: [
                164,
                170,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: UnaryExpression {
                    argument: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 9,
                        lnumStartIndex: 212,
                        range: [
                          220,
                          221,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 9,
                      lnumStartIndex: 212,
                      range: [
                        219,
                        220,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 9,
                    lnumStartIndex: 212,
                    range: [
                      222,
                      223,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 9,
                      lnumStartIndex: 212,
                      range: [
                        224,
                        225,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 9,
                  lnumStartIndex: 212,
                  range: [
                    226,
                    227,
                  ],
                  type: "Minus",
                  value: "-",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 9,
                    lnumStartIndex: 212,
                    range: [
                      228,
                      229,
                    ],
                    type: "NumericLiteral",
                    value: "5",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 9,
                lnumStartIndex: 212,
                range: [
                  230,
                  232,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 9,
                      lnumStartIndex: 212,
                      range: [
                        233,
                        234,
                      ],
                      type: "NumericLiteral",
                      value: "0",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 9,
                    lnumStartIndex: 212,
                    range: [
                      235,
                      236,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 9,
                      lnumStartIndex: 212,
                      range: [
                        237,
                        238,
                      ],
                      type: "NumericLiteral",
                      value: "0",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 9,
                  lnumStartIndex: 212,
                  range: [
                    239,
                    240,
                  ],
                  type: "Minus",
                  value: "-",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 9,
                    lnumStartIndex: 212,
                    range: [
                      241,
                      242,
                    ],
                    type: "NumericLiteral",
                    value: "9",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 9,
              lnumStartIndex: 212,
              range: [
                212,
                218,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: UnaryExpression {
                    argument: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 10,
                          lnumStartIndex: 245,
                          range: [
                            253,
                            254,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 10,
                        lnumStartIndex: 245,
                        range: [
                          255,
                          256,
                        ],
                        type: "Carrot",
                        value: "^",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 10,
                          lnumStartIndex: 245,
                          range: [
                            257,
                            258,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 10,
                      lnumStartIndex: 245,
                      range: [
                        252,
                        253,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 10,
                    lnumStartIndex: 245,
                    range: [
                      259,
                      261,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: UnaryExpression {
                    argument: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 10,
                        lnumStartIndex: 245,
                        range: [
                          263,
                          264,
                        ],
                        type: "NumericLiteral",
                        value: "4",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 10,
                      lnumStartIndex: 245,
                      range: [
                        262,
                        263,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 10,
                  lnumStartIndex: 245,
                  range: [
                    265,
                    268,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: BinaryExpression {
                    left: GroupingExpression {
                      expression: UnaryExpression {
                        argument: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 10,
                            lnumStartIndex: 245,
                            range: [
                              271,
                              272,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 10,
                          lnumStartIndex: 245,
                          range: [
                            270,
                            271,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 10,
                      lnumStartIndex: 245,
                      range: [
                        274,
                        275,
                      ],
                      type: "Carrot",
                      value: "^",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 10,
                        lnumStartIndex: 245,
                        range: [
                          276,
                          277,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 10,
                    lnumStartIndex: 245,
                    range: [
                      278,
                      280,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 10,
                      lnumStartIndex: 245,
                      range: [
                        281,
                        282,
                      ],
                      type: "NumericLiteral",
                      value: "4",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 10,
                lnumStartIndex: 245,
                range: [
                  283,
                  286,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 10,
                          lnumStartIndex: 245,
                          range: [
                            287,
                            288,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 10,
                        lnumStartIndex: 245,
                        range: [
                          289,
                          290,
                        ],
                        type: "Star",
                        value: "*",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 10,
                          lnumStartIndex: 245,
                          range: [
                            291,
                            292,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 10,
                      lnumStartIndex: 245,
                      range: [
                        293,
                        294,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 10,
                        lnumStartIndex: 245,
                        range: [
                          295,
                          296,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 10,
                    lnumStartIndex: 245,
                    range: [
                      297,
                      298,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 10,
                      lnumStartIndex: 245,
                      range: [
                        299,
                        300,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 10,
                  lnumStartIndex: 245,
                  range: [
                    301,
                    303,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 10,
                    lnumStartIndex: 245,
                    range: [
                      304,
                      305,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 10,
              lnumStartIndex: 245,
              range: [
                245,
                251,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 11,
                        lnumStartIndex: 308,
                        range: [
                          315,
                          316,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 11,
                      lnumStartIndex: 308,
                      range: [
                        317,
                        318,
                      ],
                      type: "Star",
                      value: "*",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 11,
                        lnumStartIndex: 308,
                        range: [
                          319,
                          320,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 11,
                    lnumStartIndex: 308,
                    range: [
                      321,
                      322,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 11,
                        lnumStartIndex: 308,
                        range: [
                          323,
                          324,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 11,
                      lnumStartIndex: 308,
                      range: [
                        325,
                        326,
                      ],
                      type: "Divide",
                      value: "/",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 11,
                        lnumStartIndex: 308,
                        range: [
                          327,
                          328,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 11,
                  lnumStartIndex: 308,
                  range: [
                    329,
                    331,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 11,
                    lnumStartIndex: 308,
                    range: [
                      332,
                      333,
                    ],
                    type: "NumericLiteral",
                    value: "3",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 11,
                lnumStartIndex: 308,
                range: [
                  334,
                  337,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 11,
                        lnumStartIndex: 308,
                        range: [
                          338,
                          339,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 11,
                      lnumStartIndex: 308,
                      range: [
                        340,
                        341,
                      ],
                      type: "Plus",
                      value: "+",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 11,
                        lnumStartIndex: 308,
                        range: [
                          342,
                          343,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 11,
                    lnumStartIndex: 308,
                    range: [
                      344,
                      346,
                    ],
                    type: "DoubleDot",
                    value: "..",
                  },
                  right: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 11,
                        lnumStartIndex: 308,
                        range: [
                          347,
                          348,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 11,
                      lnumStartIndex: 308,
                      range: [
                        349,
                        350,
                      ],
                      type: "Star",
                      value: "*",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 11,
                        lnumStartIndex: 308,
                        range: [
                          351,
                          352,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 11,
                  lnumStartIndex: 308,
                  range: [
                    353,
                    355,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 11,
                    lnumStartIndex: 308,
                    range: [
                      356,
                      360,
                    ],
                    type: "StringLiteral",
                    value: '"33"',
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 11,
              lnumStartIndex: 308,
              range: [
                308,
                314,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: UnaryExpression {
                argument: GroupingExpression {
                  expression: BinaryExpression {
                    left: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 12,
                          lnumStartIndex: 363,
                          range: [
                            375,
                            376,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 12,
                        lnumStartIndex: 363,
                        range: [
                          377,
                          378,
                        ],
                        type: "Plus",
                        value: "+",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 12,
                          lnumStartIndex: 363,
                          range: [
                            379,
                            380,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 12,
                      lnumStartIndex: 363,
                      range: [
                        381,
                        382,
                      ],
                      type: "GreaterThan",
                      value: ">",
                    },
                    right: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 12,
                          lnumStartIndex: 363,
                          range: [
                            383,
                            384,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 12,
                        lnumStartIndex: 363,
                        range: [
                          385,
                          386,
                        ],
                        type: "Star",
                        value: "*",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 12,
                          lnumStartIndex: 363,
                          range: [
                            387,
                            388,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 12,
                  lnumStartIndex: 363,
                  range: [
                    370,
                    373,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
              operator: {
                isKeyword: true,
                lnum: 12,
                lnumStartIndex: 363,
                range: [
                  390,
                  393,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: BinaryExpression {
                  left: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 12,
                      lnumStartIndex: 363,
                      range: [
                        394,
                        397,
                      ],
                      type: "StringLiteral",
                      value: '"a"',
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 12,
                    lnumStartIndex: 363,
                    range: [
                      398,
                      400,
                    ],
                    type: "DoubleDot",
                    value: "..",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 12,
                      lnumStartIndex: 363,
                      range: [
                        401,
                        404,
                      ],
                      type: "StringLiteral",
                      value: '"b"',
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 12,
                  lnumStartIndex: 363,
                  range: [
                    405,
                    406,
                  ],
                  type: "GreaterThan",
                  value: ">",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 12,
                    lnumStartIndex: 363,
                    range: [
                      407,
                      410,
                    ],
                    type: "StringLiteral",
                    value: '"a"',
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 12,
              lnumStartIndex: 363,
              range: [
                363,
                369,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            UnaryExpression {
              argument: GroupingExpression {
                expression: BinaryExpression {
                  left: GroupingExpression {
                    expression: BinaryExpression {
                      left: BooleanLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 14,
                          lnumStartIndex: 414,
                          range: [
                            427,
                            431,
                          ],
                          type: "BooleanLiteral",
                          value: "true",
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 14,
                        lnumStartIndex: 414,
                        range: [
                          432,
                          434,
                        ],
                        type: "Or",
                        value: "or",
                      },
                      right: BooleanLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 14,
                          lnumStartIndex: 414,
                          range: [
                            435,
                            440,
                          ],
                          type: "BooleanLiteral",
                          value: "false",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 14,
                    lnumStartIndex: 414,
                    range: [
                      442,
                      445,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 14,
                      lnumStartIndex: 414,
                      range: [
                        446,
                        449,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 14,
                lnumStartIndex: 414,
                range: [
                  421,
                  424,
                ],
                type: "Not",
                value: "not",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 14,
              lnumStartIndex: 414,
              range: [
                414,
                420,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BooleanLiteral {
                token: {
                  isKeyword: true,
                  lnum: 15,
                  lnumStartIndex: 452,
                  range: [
                    459,
                    463,
                  ],
                  type: "BooleanLiteral",
                  value: "true",
                },
              },
              operator: {
                isKeyword: true,
                lnum: 15,
                lnumStartIndex: 452,
                range: [
                  464,
                  466,
                ],
                type: "Or",
                value: "or",
              },
              right: BinaryExpression {
                left: BooleanLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 15,
                    lnumStartIndex: 452,
                    range: [
                      467,
                      472,
                    ],
                    type: "BooleanLiteral",
                    value: "false",
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 15,
                  lnumStartIndex: 452,
                  range: [
                    473,
                    476,
                  ],
                  type: "And",
                  value: "and",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 15,
                    lnumStartIndex: 452,
                    range: [
                      477,
                      480,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 15,
              lnumStartIndex: 452,
              range: [
                452,
                458,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      LocalStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 17,
              lnumStartIndex: 483,
              range: [
                496,
                497,
              ],
              type: "NumericLiteral",
              value: "1",
            },
          },
          NilLiteral {
            token: {
              isKeyword: true,
              lnum: 17,
              lnumStartIndex: 483,
              range: [
                499,
                502,
              ],
              type: "NilLiteral",
              value: "nil",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 17,
              lnumStartIndex: 483,
              range: [
                489,
                490,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 17,
              lnumStartIndex: 483,
              range: [
                492,
                493,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 18,
                          lnumStartIndex: 504,
                          range: [
                            513,
                            514,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 18,
                        lnumStartIndex: 504,
                        range: [
                          515,
                          517,
                        ],
                        type: "Or",
                        value: "or",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 18,
                          lnumStartIndex: 504,
                          range: [
                            518,
                            519,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 18,
                    lnumStartIndex: 504,
                    range: [
                      511,
                      512,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 18,
                  lnumStartIndex: 504,
                  range: [
                    521,
                    523,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 18,
                      lnumStartIndex: 504,
                      range: [
                        525,
                        526,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 18,
                    lnumStartIndex: 504,
                    range: [
                      524,
                      525,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 18,
                lnumStartIndex: 504,
                range: [
                  527,
                  530,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: BinaryExpression {
                  left: GroupingExpression {
                    expression: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 18,
                          lnumStartIndex: 504,
                          range: [
                            532,
                            533,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 18,
                        lnumStartIndex: 504,
                        range: [
                          534,
                          537,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 18,
                          lnumStartIndex: 504,
                          range: [
                            538,
                            539,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 18,
                    lnumStartIndex: 504,
                    range: [
                      541,
                      542,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: GroupingExpression {
                    expression: BinaryExpression {
                      left: UnaryExpression {
                        argument: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 18,
                            lnumStartIndex: 504,
                            range: [
                              545,
                              549,
                            ],
                            type: "NumericLiteral",
                            value: "1.25",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 18,
                          lnumStartIndex: 504,
                          range: [
                            544,
                            545,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 18,
                        lnumStartIndex: 504,
                        range: [
                          550,
                          552,
                        ],
                        type: "Or",
                        value: "or",
                      },
                      right: UnaryExpression {
                        argument: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 18,
                            lnumStartIndex: 504,
                            range: [
                              554,
                              555,
                            ],
                            type: "NumericLiteral",
                            value: "4",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 18,
                          lnumStartIndex: 504,
                          range: [
                            553,
                            554,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 18,
                  lnumStartIndex: 504,
                  range: [
                    557,
                    559,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 18,
                    lnumStartIndex: 504,
                    range: [
                      560,
                      564,
                    ],
                    type: "NumericLiteral",
                    value: "0.75",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 18,
              lnumStartIndex: 504,
              range: [
                504,
                510,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          GroupingExpression {
            expression: BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: GroupingExpression {
                    expression: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 19,
                          lnumStartIndex: 567,
                          range: [
                            573,
                            574,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 19,
                        lnumStartIndex: 567,
                        range: [
                          575,
                          577,
                        ],
                        type: "Or",
                        value: "or",
                      },
                      right: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 19,
                          lnumStartIndex: 567,
                          range: [
                            578,
                            579,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 19,
                    lnumStartIndex: 567,
                    range: [
                      581,
                      582,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 19,
                      lnumStartIndex: 567,
                      range: [
                        583,
                        584,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 19,
                  lnumStartIndex: 567,
                  range: [
                    585,
                    587,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 19,
                    lnumStartIndex: 567,
                    range: [
                      588,
                      589,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 19,
                lnumStartIndex: 567,
                range: [
                  590,
                  593,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: BinaryExpression {
                  left: GroupingExpression {
                    expression: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 19,
                          lnumStartIndex: 567,
                          range: [
                            595,
                            597,
                          ],
                          type: "NumericLiteral",
                          value: "10",
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 19,
                        lnumStartIndex: 567,
                        range: [
                          598,
                          600,
                        ],
                        type: "Or",
                        value: "or",
                      },
                      right: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 19,
                          lnumStartIndex: 567,
                          range: [
                            601,
                            602,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 19,
                    lnumStartIndex: 567,
                    range: [
                      604,
                      605,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 19,
                      lnumStartIndex: 567,
                      range: [
                        606,
                        607,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 19,
                  lnumStartIndex: 567,
                  range: [
                    608,
                    610,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 19,
                    lnumStartIndex: 567,
                    range: [
                      611,
                      613,
                    ],
                    type: "NumericLiteral",
                    value: "11",
                  },
                },
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 19,
              lnumStartIndex: 567,
              range: [
                567,
                568,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 20,
                lnumStartIndex: 616,
                range: [
                  623,
                  624,
                ],
                type: "Identifier",
                value: "x",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 20,
              lnumStartIndex: 616,
              range: [
                616,
                622,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          GroupingExpression {
            expression: BinaryExpression {
              left: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: GroupingExpression {
                      expression: BinaryExpression {
                        left: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 21,
                            lnumStartIndex: 627,
                            range: [
                              634,
                              635,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 21,
                          lnumStartIndex: 627,
                          range: [
                            636,
                            637,
                          ],
                          type: "LessThan",
                          value: "<",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 21,
                            lnumStartIndex: 627,
                            range: [
                              638,
                              639,
                            ],
                            type: "NumericLiteral",
                            value: "3",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 21,
                      lnumStartIndex: 627,
                      range: [
                        641,
                        643,
                      ],
                      type: "Or",
                      value: "or",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 21,
                        lnumStartIndex: 627,
                        range: [
                          644,
                          645,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 21,
                  lnumStartIndex: 627,
                  range: [
                    647,
                    649,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: BooleanLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 21,
                    lnumStartIndex: 627,
                    range: [
                      650,
                      654,
                    ],
                    type: "BooleanLiteral",
                    value: "true",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 21,
                lnumStartIndex: 627,
                range: [
                  655,
                  658,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 21,
                          lnumStartIndex: 627,
                          range: [
                            660,
                            661,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 21,
                        lnumStartIndex: 627,
                        range: [
                          662,
                          663,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 21,
                          lnumStartIndex: 627,
                          range: [
                            664,
                            665,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 21,
                      lnumStartIndex: 627,
                      range: [
                        666,
                        669,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 21,
                        lnumStartIndex: 627,
                        range: [
                          670,
                          671,
                        ],
                        type: "NumericLiteral",
                        value: "4",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 21,
                  lnumStartIndex: 627,
                  range: [
                    673,
                    675,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 21,
                    lnumStartIndex: 627,
                    range: [
                      676,
                      677,
                    ],
                    type: "NumericLiteral",
                    value: "4",
                  },
                },
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 21,
              lnumStartIndex: 627,
              range: [
                627,
                628,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 22,
                lnumStartIndex: 680,
                range: [
                  687,
                  688,
                ],
                type: "Identifier",
                value: "x",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 22,
              lnumStartIndex: 680,
              range: [
                680,
                686,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 24,
              lnumStartIndex: 692,
              range: [
                699,
                700,
              ],
              type: "NumericLiteral",
              value: "1",
            },
          },
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 24,
              lnumStartIndex: 692,
              range: [
                702,
                703,
              ],
              type: "NumericLiteral",
              value: "2",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 24,
              lnumStartIndex: 692,
              range: [
                692,
                693,
              ],
              type: "Identifier",
              value: "x",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 24,
              lnumStartIndex: 692,
              range: [
                695,
                696,
              ],
              type: "Identifier",
              value: "y",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 25,
                        lnumStartIndex: 705,
                        range: [
                          713,
                          714,
                        ],
                        type: "Identifier",
                        value: "x",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 25,
                      lnumStartIndex: 705,
                      range: [
                        715,
                        716,
                      ],
                      type: "GreaterThan",
                      value: ">",
                    },
                    right: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 25,
                        lnumStartIndex: 705,
                        range: [
                          717,
                          718,
                        ],
                        type: "Identifier",
                        value: "y",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 25,
                  lnumStartIndex: 705,
                  range: [
                    720,
                    723,
                  ],
                  type: "And",
                  value: "and",
                },
                right: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 25,
                    lnumStartIndex: 705,
                    range: [
                      724,
                      725,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 25,
                lnumStartIndex: 705,
                range: [
                  726,
                  728,
                ],
                type: "Or",
                value: "or",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 25,
                    lnumStartIndex: 705,
                    range: [
                      729,
                      730,
                    ],
                    type: "Identifier",
                    value: "y",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 25,
                  lnumStartIndex: 705,
                  range: [
                    731,
                    733,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 25,
                    lnumStartIndex: 705,
                    range: [
                      734,
                      735,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 25,
              lnumStartIndex: 705,
              range: [
                705,
                711,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 26,
              lnumStartIndex: 738,
              range: [
                745,
                746,
              ],
              type: "NumericLiteral",
              value: "2",
            },
          },
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 26,
              lnumStartIndex: 738,
              range: [
                748,
                749,
              ],
              type: "NumericLiteral",
              value: "1",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 26,
              lnumStartIndex: 738,
              range: [
                738,
                739,
              ],
              type: "Identifier",
              value: "x",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 26,
              lnumStartIndex: 738,
              range: [
                741,
                742,
              ],
              type: "Identifier",
              value: "y",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 27,
                        lnumStartIndex: 751,
                        range: [
                          759,
                          760,
                        ],
                        type: "Identifier",
                        value: "x",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 27,
                      lnumStartIndex: 751,
                      range: [
                        761,
                        762,
                      ],
                      type: "GreaterThan",
                      value: ">",
                    },
                    right: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 27,
                        lnumStartIndex: 751,
                        range: [
                          763,
                          764,
                        ],
                        type: "Identifier",
                        value: "y",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 27,
                  lnumStartIndex: 751,
                  range: [
                    766,
                    769,
                  ],
                  type: "And",
                  value: "and",
                },
                right: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 27,
                    lnumStartIndex: 751,
                    range: [
                      770,
                      771,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 27,
                lnumStartIndex: 751,
                range: [
                  772,
                  774,
                ],
                type: "Or",
                value: "or",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 27,
                    lnumStartIndex: 751,
                    range: [
                      775,
                      776,
                    ],
                    type: "Identifier",
                    value: "y",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 27,
                  lnumStartIndex: 751,
                  range: [
                    777,
                    779,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 27,
                    lnumStartIndex: 751,
                    range: [
                      780,
                      781,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 27,
              lnumStartIndex: 751,
              range: [
                751,
                757,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 29,
                    lnumStartIndex: 785,
                    range: [
                      792,
                      802,
                    ],
                    type: "NumericLiteral",
                    value: "1234567890",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 29,
                  lnumStartIndex: 785,
                  range: [
                    803,
                    805,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: FunctionCallExpression {
                  args: [
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 29,
                        lnumStartIndex: 785,
                        range: [
                          815,
                          827,
                        ],
                        type: "StringLiteral",
                        value: "'1234567890'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 29,
                      lnumStartIndex: 785,
                      range: [
                        806,
                        814,
                      ],
                      type: "Identifier",
                      value: "tonumber",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 29,
                lnumStartIndex: 785,
                range: [
                  829,
                  832,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 29,
                      lnumStartIndex: 785,
                      range: [
                        833,
                        843,
                      ],
                      type: "NumericLiteral",
                      value: "1234567890",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 29,
                    lnumStartIndex: 785,
                    range: [
                      844,
                      845,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 29,
                      lnumStartIndex: 785,
                      range: [
                        846,
                        847,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 29,
                  lnumStartIndex: 785,
                  range: [
                    848,
                    850,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 29,
                    lnumStartIndex: 785,
                    range: [
                      851,
                      861,
                    ],
                    type: "NumericLiteral",
                    value: "1234567891",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 29,
              lnumStartIndex: 785,
              range: [
                785,
                791,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      RepeatStatement {
        block: Block {
          statements: [
          ],
        },
        condition: NumericLiteral {
          token: {
            isKeyword: false,
            lnum: 34,
            lnumStartIndex: 887,
            range: [
              893,
              894,
            ],
            type: "NumericLiteral",
            value: "1",
          },
        },
      },
      RepeatStatement {
        block: Block {
          statements: [
          ],
        },
        condition: BooleanLiteral {
          token: {
            isKeyword: true,
            lnum: 36,
            lnumStartIndex: 903,
            range: [
              909,
              913,
            ],
            type: "BooleanLiteral",
            value: "true",
          },
        },
      },
      WhileStatement {
        block: Block {
          statements: [
          ],
        },
        condition: BooleanLiteral {
          token: {
            isKeyword: true,
            lnum: 37,
            lnumStartIndex: 914,
            range: [
              921,
              926,
            ],
            type: "BooleanLiteral",
            value: "false",
          },
        },
      },
      WhileStatement {
        block: Block {
          statements: [
          ],
        },
        condition: NilLiteral {
          token: {
            isKeyword: true,
            lnum: 38,
            lnumStartIndex: 934,
            range: [
              941,
              944,
            ],
            type: "NilLiteral",
            value: "nil",
          },
        },
      },
      DoStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 40,
                    lnumStartIndex: 1011,
                    range: [
                      1019,
                      1020,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
              ],
            },
            FunctionDeclarationStatement {
              block: Block {
                statements: [
                  AssignmentStatement {
                    init: [
                      TableConstructor {
                        fieldlist: [
                          TableKeyString {
                            key: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 41,
                                lnumStartIndex: 1022,
                                range: [
                                  1044,
                                  1045,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                            value: NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 41,
                                lnumStartIndex: 1022,
                                range: [
                                  1048,
                                  1049,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 41,
                          lnumStartIndex: 1022,
                          range: [
                            1038,
                            1039,
                          ],
                          type: "Identifier",
                          value: "x",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      TableConstructor {
                        fieldlist: [
                          TableKeyString {
                            key: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 42,
                                lnumStartIndex: 1053,
                                range: [
                                  1063,
                                  1064,
                                ],
                                type: "Identifier",
                                value: "x",
                              },
                            },
                            value: NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 42,
                                lnumStartIndex: 1053,
                                range: [
                                  1067,
                                  1068,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 42,
                          lnumStartIndex: 1053,
                          range: [
                            1057,
                            1058,
                          ],
                          type: "Identifier",
                          value: "x",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      TableConstructor {
                        fieldlist: [
                          TableKeyString {
                            key: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 43,
                                lnumStartIndex: 1072,
                                range: [
                                  1082,
                                  1083,
                                ],
                                type: "Identifier",
                                value: "G",
                              },
                            },
                            value: NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 43,
                                lnumStartIndex: 1072,
                                range: [
                                  1086,
                                  1087,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 43,
                          lnumStartIndex: 1072,
                          range: [
                            1076,
                            1077,
                          ],
                          type: "Identifier",
                          value: "x",
                        },
                      },
                    ],
                  },
                ],
              },
              funcname: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 41,
                  lnumStartIndex: 1022,
                  range: [
                    1033,
                    1034,
                  ],
                  type: "Identifier",
                  value: "f",
                },
              },
              parlist: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 41,
                    lnumStartIndex: 1022,
                    range: [
                      1035,
                      1036,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
              ],
            },
          ],
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            IfStatement {
              elseBlock: null,
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 48,
                          lnumStartIndex: 1115,
                          range: [
                            1152,
                            1153,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 48,
                          lnumStartIndex: 1115,
                          range: [
                            1155,
                            1161,
                          ],
                          type: "StringLiteral",
                          value: "'jojo'",
                        },
                      },
                    ],
                  },
                ],
              },
              ifCondition: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 48,
                        lnumStartIndex: 1115,
                        range: [
                          1125,
                          1126,
                        ],
                        type: "Identifier",
                        value: "i",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 48,
                      lnumStartIndex: 1115,
                      range: [
                        1120,
                        1124,
                      ],
                      type: "Identifier",
                      value: "type",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 48,
                  lnumStartIndex: 1115,
                  range: [
                    1128,
                    1130,
                  ],
                  type: "TildaEqual",
                  value: "~=",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 48,
                    lnumStartIndex: 1115,
                    range: [
                      1131,
                      1139,
                    ],
                    type: "StringLiteral",
                    value: "'number'",
                  },
                },
              },
            },
            IfStatement {
              elseBlock: null,
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 49,
                          lnumStartIndex: 1167,
                          range: [
                            1191,
                            1192,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                      FunctionCallExpression {
                        args: [
                          BinaryExpression {
                            left: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 49,
                                lnumStartIndex: 1167,
                                range: [
                                  1196,
                                  1197,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 49,
                              lnumStartIndex: 1167,
                              range: [
                                1198,
                                1199,
                              ],
                              type: "Minus",
                              value: "-",
                            },
                            right: NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 49,
                                lnumStartIndex: 1167,
                                range: [
                                  1200,
                                  1201,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 49,
                            lnumStartIndex: 1167,
                            range: [
                              1194,
                              1195,
                            ],
                            type: "Identifier",
                            value: "f",
                          },
                        },
                      },
                    ],
                  },
                ],
              },
              ifCondition: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 49,
                    lnumStartIndex: 1167,
                    range: [
                      1173,
                      1174,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 49,
                  lnumStartIndex: 1167,
                  range: [
                    1175,
                    1176,
                  ],
                  type: "GreaterThan",
                  value: ">",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 49,
                    lnumStartIndex: 1167,
                    range: [
                      1177,
                      1178,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 47,
            lnumStartIndex: 1101,
            range: [
              1110,
              1111,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 47,
              lnumStartIndex: 1101,
              range: [
                1112,
                1113,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 52,
                        lnumStartIndex: 1217,
                        range: [
                          1225,
                          1226,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 52,
                      lnumStartIndex: 1217,
                      range: [
                        1223,
                        1224,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
              },
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 52,
                        lnumStartIndex: 1217,
                        range: [
                          1231,
                          1232,
                        ],
                        type: "NumericLiteral",
                        value: "5",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 52,
                      lnumStartIndex: 1217,
                      range: [
                        1229,
                        1230,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
              },
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 52,
                        lnumStartIndex: 1217,
                        range: [
                          1237,
                          1239,
                        ],
                        type: "NumericLiteral",
                        value: "10",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 52,
                      lnumStartIndex: 1217,
                      range: [
                        1235,
                        1236,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 52,
              lnumStartIndex: 1217,
              range: [
                1217,
                1218,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 53,
                            lnumStartIndex: 1245,
                            range: [
                              1252,
                              1253,
                            ],
                            type: "Identifier",
                            value: "x",
                          },
                        },
                        index: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 53,
                            lnumStartIndex: 1245,
                            range: [
                              1254,
                              1255,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 53,
                        lnumStartIndex: 1245,
                        range: [
                          1257,
                          1259,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 53,
                          lnumStartIndex: 1245,
                          range: [
                            1260,
                            1261,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 53,
                      lnumStartIndex: 1245,
                      range: [
                        1262,
                        1265,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 53,
                            lnumStartIndex: 1245,
                            range: [
                              1266,
                              1267,
                            ],
                            type: "Identifier",
                            value: "x",
                          },
                        },
                        index: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 53,
                            lnumStartIndex: 1245,
                            range: [
                              1268,
                              1269,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 53,
                        lnumStartIndex: 1245,
                        range: [
                          1271,
                          1273,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 53,
                          lnumStartIndex: 1245,
                          range: [
                            1274,
                            1275,
                          ],
                          type: "NumericLiteral",
                          value: "5",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 53,
                    lnumStartIndex: 1245,
                    range: [
                      1276,
                      1279,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: IndexExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 53,
                          lnumStartIndex: 1245,
                          range: [
                            1280,
                            1281,
                          ],
                          type: "Identifier",
                          value: "x",
                        },
                      },
                      index: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 53,
                          lnumStartIndex: 1245,
                          range: [
                            1282,
                            1283,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1245,
                      range: [
                        1285,
                        1287,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 53,
                        lnumStartIndex: 1245,
                        range: [
                          1288,
                          1290,
                        ],
                        type: "NumericLiteral",
                        value: "10",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 53,
                  lnumStartIndex: 1245,
                  range: [
                    1291,
                    1294,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 53,
                        lnumStartIndex: 1245,
                        range: [
                          1295,
                          1296,
                        ],
                        type: "Identifier",
                        value: "x",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 53,
                        lnumStartIndex: 1245,
                        range: [
                          1297,
                          1298,
                        ],
                        type: "NumericLiteral",
                        value: "4",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 53,
                    lnumStartIndex: 1245,
                    range: [
                      1300,
                      1302,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1245,
                      range: [
                        1303,
                        1304,
                      ],
                      type: "NumericLiteral",
                      value: "9",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 53,
                lnumStartIndex: 1245,
                range: [
                  1305,
                  1308,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1245,
                      range: [
                        1309,
                        1310,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1245,
                      range: [
                        1311,
                        1313,
                      ],
                      type: "NumericLiteral",
                      value: "12",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 53,
                  lnumStartIndex: 1245,
                  range: [
                    1315,
                    1317,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 53,
                    lnumStartIndex: 1245,
                    range: [
                      1318,
                      1319,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 53,
              lnumStartIndex: 1245,
              range: [
                1245,
                1251,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: IndexExpression {
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 54,
                    lnumStartIndex: 1322,
                    range: [
                      1329,
                      1330,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
                index: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 54,
                    lnumStartIndex: 1322,
                    range: [
                      1331,
                      1334,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 54,
                lnumStartIndex: 1322,
                range: [
                  1336,
                  1338,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 54,
                  lnumStartIndex: 1322,
                  range: [
                    1339,
                    1342,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 54,
              lnumStartIndex: 1322,
              range: [
                1322,
                1328,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 55,
                        lnumStartIndex: 1344,
                        range: [
                          1352,
                          1357,
                        ],
                        type: "StringLiteral",
                        value: "'alo'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 55,
                      lnumStartIndex: 1344,
                      range: [
                        1350,
                        1351,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
              },
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 55,
                        lnumStartIndex: 1344,
                        range: [
                          1361,
                          1367,
                        ],
                        type: "StringLiteral",
                        value: "'xixi'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 55,
                      lnumStartIndex: 1344,
                      range: [
                        1359,
                        1360,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
              },
              TableValue {
                value: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 55,
                    lnumStartIndex: 1344,
                    range: [
                      1369,
                      1372,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 55,
              lnumStartIndex: 1344,
              range: [
                1344,
                1345,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 56,
                        lnumStartIndex: 1376,
                        range: [
                          1383,
                          1384,
                        ],
                        type: "Identifier",
                        value: "x",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 56,
                        lnumStartIndex: 1376,
                        range: [
                          1385,
                          1386,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 56,
                    lnumStartIndex: 1376,
                    range: [
                      1388,
                      1390,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 56,
                      lnumStartIndex: 1376,
                      range: [
                        1391,
                        1396,
                      ],
                      type: "StringLiteral",
                      value: "'alo'",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 56,
                  lnumStartIndex: 1376,
                  range: [
                    1397,
                    1400,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 56,
                        lnumStartIndex: 1376,
                        range: [
                          1401,
                          1402,
                        ],
                        type: "Identifier",
                        value: "x",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 56,
                        lnumStartIndex: 1376,
                        range: [
                          1403,
                          1404,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 56,
                    lnumStartIndex: 1376,
                    range: [
                      1406,
                      1408,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 56,
                      lnumStartIndex: 1376,
                      range: [
                        1409,
                        1415,
                      ],
                      type: "StringLiteral",
                      value: "'xixi'",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 56,
                lnumStartIndex: 1376,
                range: [
                  1416,
                  1419,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 56,
                      lnumStartIndex: 1376,
                      range: [
                        1420,
                        1421,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 56,
                      lnumStartIndex: 1376,
                      range: [
                        1422,
                        1423,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 56,
                  lnumStartIndex: 1376,
                  range: [
                    1425,
                    1427,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 56,
                    lnumStartIndex: 1376,
                    range: [
                      1428,
                      1431,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 56,
              lnumStartIndex: 1376,
              range: [
                1376,
                1382,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 57,
                          lnumStartIndex: 1434,
                          range: [
                            1442,
                            1447,
                          ],
                          type: "StringLiteral",
                          value: "'alo'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 57,
                        lnumStartIndex: 1434,
                        range: [
                          1440,
                          1441,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 57,
                    lnumStartIndex: 1434,
                    range: [
                      1448,
                      1450,
                    ],
                    type: "DoubleDot",
                    value: "..",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 57,
                      lnumStartIndex: 1434,
                      range: [
                        1451,
                        1457,
                      ],
                      type: "StringLiteral",
                      value: "'xixi'",
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 57,
              lnumStartIndex: 1434,
              range: [
                1434,
                1435,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: IndexExpression {
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 58,
                    lnumStartIndex: 1461,
                    range: [
                      1468,
                      1469,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
                index: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 58,
                    lnumStartIndex: 1461,
                    range: [
                      1470,
                      1471,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 58,
                lnumStartIndex: 1461,
                range: [
                  1473,
                  1475,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: StringLiteral {
                token: {
                  isKeyword: false,
                  lnum: 58,
                  lnumStartIndex: 1461,
                  range: [
                    1476,
                    1485,
                  ],
                  type: "StringLiteral",
                  value: "'aloxixi'",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 58,
              lnumStartIndex: 1461,
              range: [
                1461,
                1467,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    TableConstructor {
                      fieldlist: [
                      ],
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 59,
                      lnumStartIndex: 1487,
                      range: [
                        1493,
                        1494,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 59,
              lnumStartIndex: 1487,
              range: [
                1487,
                1488,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 60,
                      lnumStartIndex: 1500,
                      range: [
                        1507,
                        1508,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 60,
                      lnumStartIndex: 1500,
                      range: [
                        1509,
                        1510,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 60,
                  lnumStartIndex: 1500,
                  range: [
                    1512,
                    1514,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 60,
                    lnumStartIndex: 1500,
                    range: [
                      1515,
                      1521,
                    ],
                    type: "StringLiteral",
                    value: "'jojo'",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 60,
                lnumStartIndex: 1500,
                range: [
                  1522,
                  1525,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    IndexExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 60,
                          lnumStartIndex: 1500,
                          range: [
                            1531,
                            1532,
                          ],
                          type: "Identifier",
                          value: "x",
                        },
                      },
                      index: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 60,
                          lnumStartIndex: 1500,
                          range: [
                            1533,
                            1534,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 60,
                      lnumStartIndex: 1500,
                      range: [
                        1526,
                        1530,
                      ],
                      type: "Identifier",
                      value: "type",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 60,
                  lnumStartIndex: 1500,
                  range: [
                    1537,
                    1539,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 60,
                    lnumStartIndex: 1500,
                    range: [
                      1540,
                      1547,
                    ],
                    type: "StringLiteral",
                    value: "'table'",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 60,
              lnumStartIndex: 1500,
              range: [
                1500,
                1506,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      LocalStatement {
        init: [
          FunctionExpression {
            block: Block {
              statements: [
                IfStatement {
                  elseBlock: null,
                  elseifBlocks: [
                    Block {
                      statements: [
                        ReturnStatement {
                          arguments: [
                            StringLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 65,
                                lnumStartIndex: 1602,
                                range: [
                                  1630,
                                  1633,
                                ],
                                type: "StringLiteral",
                                value: "'b'",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    Block {
                      statements: [
                        ReturnStatement {
                          arguments: [
                            StringLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 66,
                                lnumStartIndex: 1635,
                                range: [
                                  1663,
                                  1666,
                                ],
                                type: "StringLiteral",
                                value: "'c'",
                              },
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  elseifConditions: [
                    BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 65,
                          lnumStartIndex: 1602,
                          range: [
                            1611,
                            1612,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 65,
                        lnumStartIndex: 1602,
                        range: [
                          1613,
                          1614,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 65,
                          lnumStartIndex: 1602,
                          range: [
                            1615,
                            1617,
                          ],
                          type: "NumericLiteral",
                          value: "20",
                        },
                      },
                    },
                    BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 66,
                          lnumStartIndex: 1635,
                          range: [
                            1644,
                            1645,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 66,
                        lnumStartIndex: 1635,
                        range: [
                          1646,
                          1647,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 66,
                          lnumStartIndex: 1635,
                          range: [
                            1648,
                            1650,
                          ],
                          type: "NumericLiteral",
                          value: "30",
                        },
                      },
                    },
                  ],
                  ifBlock: Block {
                    statements: [
                      ReturnStatement {
                        arguments: [
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 64,
                              lnumStartIndex: 1573,
                              range: [
                                1597,
                                1600,
                              ],
                              type: "StringLiteral",
                              value: "'a'",
                            },
                          },
                        ],
                      },
                    ],
                  },
                  ifCondition: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 64,
                        lnumStartIndex: 1573,
                        range: [
                          1578,
                          1579,
                        ],
                        type: "Identifier",
                        value: "i",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 64,
                      lnumStartIndex: 1573,
                      range: [
                        1580,
                        1581,
                      ],
                      type: "LessThan",
                      value: "<",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 64,
                        lnumStartIndex: 1573,
                        range: [
                          1582,
                          1584,
                        ],
                        type: "NumericLiteral",
                        value: "10",
                      },
                    },
                  },
                },
              ],
            },
            parlist: [
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 63,
                  lnumStartIndex: 1551,
                  range: [
                    1570,
                    1571,
                  ],
                  type: "Identifier",
                  value: "i",
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 63,
              lnumStartIndex: 1551,
              range: [
                1557,
                1558,
              ],
              type: "Identifier",
              value: "f",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 70,
                            lnumStartIndex: 1683,
                            range: [
                              1692,
                              1693,
                            ],
                            type: "NumericLiteral",
                            value: "3",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 70,
                          lnumStartIndex: 1683,
                          range: [
                            1690,
                            1691,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 70,
                      lnumStartIndex: 1683,
                      range: [
                        1695,
                        1697,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 70,
                        lnumStartIndex: 1683,
                        range: [
                          1698,
                          1701,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 70,
                    lnumStartIndex: 1683,
                    range: [
                      1702,
                      1705,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 70,
                            lnumStartIndex: 1683,
                            range: [
                              1708,
                              1710,
                            ],
                            type: "NumericLiteral",
                            value: "12",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 70,
                          lnumStartIndex: 1683,
                          range: [
                            1706,
                            1707,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 70,
                      lnumStartIndex: 1683,
                      range: [
                        1712,
                        1714,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 70,
                        lnumStartIndex: 1683,
                        range: [
                          1715,
                          1718,
                        ],
                        type: "StringLiteral",
                        value: "'b'",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 70,
                  lnumStartIndex: 1683,
                  range: [
                    1719,
                    1722,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 70,
                          lnumStartIndex: 1683,
                          range: [
                            1725,
                            1727,
                          ],
                          type: "NumericLiteral",
                          value: "26",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 70,
                        lnumStartIndex: 1683,
                        range: [
                          1723,
                          1724,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 70,
                    lnumStartIndex: 1683,
                    range: [
                      1729,
                      1731,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 70,
                      lnumStartIndex: 1683,
                      range: [
                        1732,
                        1735,
                      ],
                      type: "StringLiteral",
                      value: "'c'",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 70,
                lnumStartIndex: 1683,
                range: [
                  1736,
                  1739,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 70,
                        lnumStartIndex: 1683,
                        range: [
                          1742,
                          1745,
                        ],
                        type: "NumericLiteral",
                        value: "100",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 70,
                      lnumStartIndex: 1683,
                      range: [
                        1740,
                        1741,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 70,
                  lnumStartIndex: 1683,
                  range: [
                    1747,
                    1749,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 70,
                    lnumStartIndex: 1683,
                    range: [
                      1750,
                      1753,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 70,
              lnumStartIndex: 1683,
              range: [
                1683,
                1689,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      ForNumericStatement {
        block: Block {
          statements: [
            BreakStatement {},
          ],
        },
        end: NumericLiteral {
          token: {
            isKeyword: false,
            lnum: 72,
            lnumStartIndex: 1756,
            range: [
              1767,
              1771,
            ],
            type: "NumericLiteral",
            value: "1000",
          },
        },
        start: NumericLiteral {
          token: {
            isKeyword: false,
            lnum: 72,
            lnumStartIndex: 1756,
            range: [
              1764,
              1765,
            ],
            type: "NumericLiteral",
            value: "1",
          },
        },
        step: undefined,
        variable: Identifier {
          token: {
            isKeyword: false,
            lnum: 72,
            lnumStartIndex: 1756,
            range: [
              1760,
              1761,
            ],
            type: "Identifier",
            value: "i",
          },
        },
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 73,
              lnumStartIndex: 1785,
              range: [
                1790,
                1793,
              ],
              type: "NumericLiteral",
              value: "100",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 73,
              lnumStartIndex: 1785,
              range: [
                1786,
                1787,
              ],
              type: "Identifier",
              value: "n",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 74,
              lnumStartIndex: 1795,
              range: [
                1799,
                1800,
              ],
              type: "NumericLiteral",
              value: "3",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 74,
              lnumStartIndex: 1795,
              range: [
                1795,
                1796,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 75,
              lnumStartIndex: 1802,
              range: [
                1802,
                1803,
              ],
              type: "Identifier",
              value: "t",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          NilLiteral {
            token: {
              isKeyword: true,
              lnum: 76,
              lnumStartIndex: 1810,
              range: [
                1814,
                1817,
              ],
              type: "NilLiteral",
              value: "nil",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 76,
              lnumStartIndex: 1810,
              range: [
                1810,
                1811,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      WhileStatement {
        block: Block {
          statements: [
            AssignmentStatement {
              init: [
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 78,
                    lnumStartIndex: 1833,
                    range: [
                      1839,
                      1840,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 78,
                    lnumStartIndex: 1833,
                    range: [
                      1835,
                      1836,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
              ],
            },
            ForNumericStatement {
              block: Block {
                statements: [
                  ForNumericStatement {
                    block: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            BinaryExpression {
                              left: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 79,
                                  lnumStartIndex: 1842,
                                  range: [
                                    1884,
                                    1885,
                                  ],
                                  type: "Identifier",
                                  value: "a",
                                },
                              },
                              operator: {
                                isKeyword: false,
                                lnum: 79,
                                lnumStartIndex: 1842,
                                range: [
                                  1886,
                                  1887,
                                ],
                                type: "Plus",
                                value: "+",
                              },
                              right: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 79,
                                  lnumStartIndex: 1842,
                                  range: [
                                    1888,
                                    1889,
                                  ],
                                  type: "NumericLiteral",
                                  value: "1",
                                },
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 79,
                                lnumStartIndex: 1842,
                                range: [
                                  1880,
                                  1881,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                        },
                        AssignmentStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 80,
                                lnumStartIndex: 1891,
                                range: [
                                  1904,
                                  1905,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            IndexExpression {
                              base: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 80,
                                  lnumStartIndex: 1891,
                                  range: [
                                    1897,
                                    1898,
                                  ],
                                  type: "Identifier",
                                  value: "t",
                                },
                              },
                              index: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 80,
                                  lnumStartIndex: 1891,
                                  range: [
                                    1899,
                                    1900,
                                  ],
                                  type: "Identifier",
                                  value: "i",
                                },
                              },
                            },
                          ],
                        },
                      ],
                    },
                    end: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 79,
                        lnumStartIndex: 1842,
                        range: [
                          1871,
                          1872,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    start: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 79,
                        lnumStartIndex: 1842,
                        range: [
                          1868,
                          1869,
                        ],
                        type: "Identifier",
                        value: "i",
                      },
                    },
                    step: UnaryExpression {
                      argument: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 79,
                          lnumStartIndex: 1842,
                          range: [
                            1875,
                            1876,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 79,
                        lnumStartIndex: 1842,
                        range: [
                          1874,
                          1875,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                    variable: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 79,
                        lnumStartIndex: 1842,
                        range: [
                          1864,
                          1865,
                        ],
                        type: "Identifier",
                        value: "i",
                      },
                    },
                  },
                ],
              },
              end: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 79,
                  lnumStartIndex: 1842,
                  range: [
                    1855,
                    1856,
                  ],
                  type: "Identifier",
                  value: "n",
                },
              },
              start: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 79,
                  lnumStartIndex: 1842,
                  range: [
                    1852,
                    1853,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
              step: undefined,
              variable: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 79,
                  lnumStartIndex: 1842,
                  range: [
                    1848,
                    1849,
                  ],
                  type: "Identifier",
                  value: "i",
                },
              },
            },
          ],
        },
        condition: UnaryExpression {
          argument: Identifier {
            token: {
              isKeyword: false,
              lnum: 77,
              lnumStartIndex: 1818,
              range: [
                1828,
                1829,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          operator: {
            isKeyword: true,
            lnum: 77,
            lnumStartIndex: 1818,
            range: [
              1824,
              1827,
            ],
            type: "Not",
            value: "not",
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 84,
                    lnumStartIndex: 1929,
                    range: [
                      1936,
                      1937,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 84,
                  lnumStartIndex: 1929,
                  range: [
                    1938,
                    1940,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: BinaryExpression {
                  left: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 84,
                        lnumStartIndex: 1929,
                        range: [
                          1941,
                          1942,
                        ],
                        type: "Identifier",
                        value: "n",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 84,
                      lnumStartIndex: 1929,
                      range: [
                        1943,
                        1944,
                      ],
                      type: "Star",
                      value: "*",
                    },
                    right: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 84,
                            lnumStartIndex: 1929,
                            range: [
                              1946,
                              1947,
                            ],
                            type: "Identifier",
                            value: "n",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 84,
                          lnumStartIndex: 1929,
                          range: [
                            1948,
                            1949,
                          ],
                          type: "Plus",
                          value: "+",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 84,
                            lnumStartIndex: 1929,
                            range: [
                              1950,
                              1951,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 84,
                    lnumStartIndex: 1929,
                    range: [
                      1953,
                      1954,
                    ],
                    type: "Divide",
                    value: "/",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 84,
                      lnumStartIndex: 1929,
                      range: [
                        1955,
                        1956,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 84,
                lnumStartIndex: 1929,
                range: [
                  1957,
                  1960,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 84,
                    lnumStartIndex: 1929,
                    range: [
                      1961,
                      1962,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 84,
                  lnumStartIndex: 1929,
                  range: [
                    1963,
                    1965,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 84,
                    lnumStartIndex: 1929,
                    range: [
                      1966,
                      1967,
                    ],
                    type: "NumericLiteral",
                    value: "3",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 84,
              lnumStartIndex: 1929,
              range: [
                1929,
                1935,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 85,
                        lnumStartIndex: 1970,
                        range: [
                          1977,
                          1978,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 85,
                        lnumStartIndex: 1970,
                        range: [
                          1979,
                          1980,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 85,
                    lnumStartIndex: 1970,
                    range: [
                      1982,
                      1985,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 85,
                        lnumStartIndex: 1970,
                        range: [
                          1986,
                          1987,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                    index: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 85,
                        lnumStartIndex: 1970,
                        range: [
                          1988,
                          1989,
                        ],
                        type: "Identifier",
                        value: "n",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 85,
                  lnumStartIndex: 1970,
                  range: [
                    1991,
                    1994,
                  ],
                  type: "And",
                  value: "and",
                },
                right: UnaryExpression {
                  argument: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 85,
                        lnumStartIndex: 1970,
                        range: [
                          1999,
                          2000,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 85,
                        lnumStartIndex: 1970,
                        range: [
                          2001,
                          2002,
                        ],
                        type: "NumericLiteral",
                        value: "0",
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 85,
                    lnumStartIndex: 1970,
                    range: [
                      1995,
                      1998,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 85,
                lnumStartIndex: 1970,
                range: [
                  2004,
                  2007,
                ],
                type: "And",
                value: "and",
              },
              right: UnaryExpression {
                argument: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 85,
                      lnumStartIndex: 1970,
                      range: [
                        2012,
                        2013,
                      ],
                      type: "Identifier",
                      value: "t",
                    },
                  },
                  index: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 85,
                        lnumStartIndex: 1970,
                        range: [
                          2014,
                          2015,
                        ],
                        type: "Identifier",
                        value: "n",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 85,
                      lnumStartIndex: 1970,
                      range: [
                        2016,
                        2017,
                      ],
                      type: "Plus",
                      value: "+",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 85,
                        lnumStartIndex: 1970,
                        range: [
                          2018,
                          2019,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 85,
                  lnumStartIndex: 1970,
                  range: [
                    2008,
                    2011,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 85,
              lnumStartIndex: 1970,
              range: [
                1970,
                1976,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 88,
                    lnumStartIndex: 2037,
                    range: [
                      2049,
                      2050,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 88,
                    lnumStartIndex: 2037,
                    range: [
                      2045,
                      2046,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
              ],
            },
            RepeatStatement {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 90,
                          lnumStartIndex: 2061,
                          range: [
                            2071,
                            2072,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  IfStatement {
                    elseBlock: Block {
                      statements: [
                        LocalStatement {
                          init: [
                            FunctionCallExpression {
                              args: [
                                NumericLiteral {
                                  token: {
                                    isKeyword: false,
                                    lnum: 96,
                                    lnumStartIndex: 2200,
                                    range: [
                                      2237,
                                      2238,
                                    ],
                                    type: "NumericLiteral",
                                    value: "1",
                                  },
                                },
                              ],
                              base: MemberExpression {
                                base: Identifier {
                                  token: {
                                    isKeyword: false,
                                    lnum: 96,
                                    lnumStartIndex: 2200,
                                    range: [
                                      2228,
                                      2232,
                                    ],
                                    type: "Identifier",
                                    value: "math",
                                  },
                                },
                                identifier: Identifier {
                                  token: {
                                    isKeyword: false,
                                    lnum: 96,
                                    lnumStartIndex: 2200,
                                    range: [
                                      2233,
                                      2236,
                                    ],
                                    type: "Identifier",
                                    value: "sin",
                                  },
                                },
                                indexer: ".",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 96,
                                lnumStartIndex: 2200,
                                range: [
                                  2215,
                                  2216,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 96,
                                lnumStartIndex: 2200,
                                range: [
                                  2218,
                                  2219,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 96,
                                lnumStartIndex: 2200,
                                range: [
                                  2221,
                                  2222,
                                ],
                                type: "Identifier",
                                value: "c",
                              },
                            },
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 96,
                                lnumStartIndex: 2200,
                                range: [
                                  2224,
                                  2225,
                                ],
                                type: "Identifier",
                                value: "d",
                              },
                            },
                          ],
                        },
                        AssignmentStatement {
                          init: [
                            BinaryExpression {
                              left: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 97,
                                  lnumStartIndex: 2241,
                                  range: [
                                    2251,
                                    2252,
                                  ],
                                  type: "Identifier",
                                  value: "x",
                                },
                              },
                              operator: {
                                isKeyword: false,
                                lnum: 97,
                                lnumStartIndex: 2241,
                                range: [
                                  2253,
                                  2254,
                                ],
                                type: "Plus",
                                value: "+",
                              },
                              right: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 97,
                                  lnumStartIndex: 2241,
                                  range: [
                                    2255,
                                    2256,
                                  ],
                                  type: "NumericLiteral",
                                  value: "1",
                                },
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 97,
                                lnumStartIndex: 2241,
                                range: [
                                  2247,
                                  2248,
                                ],
                                type: "Identifier",
                                value: "x",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    elseifBlocks: [
                      Block {
                        statements: [
                          AssignmentStatement {
                            init: [
                              NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 94,
                                  lnumStartIndex: 2132,
                                  range: [
                                    2159,
                                    2161,
                                  ],
                                  type: "NumericLiteral",
                                  value: "20",
                                },
                              },
                            ],
                            variables: [
                              Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 94,
                                  lnumStartIndex: 2132,
                                  range: [
                                    2155,
                                    2156,
                                  ],
                                  type: "Identifier",
                                  value: "x",
                                },
                              },
                            ],
                          },
                          BreakStatement {},
                        ],
                      },
                      Block {
                        statements: [
                          AssignmentStatement {
                            init: [
                              NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 95,
                                  lnumStartIndex: 2169,
                                  range: [
                                    2196,
                                    2198,
                                  ],
                                  type: "NumericLiteral",
                                  value: "30",
                                },
                              },
                            ],
                            variables: [
                              Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 95,
                                  lnumStartIndex: 2169,
                                  range: [
                                    2192,
                                    2193,
                                  ],
                                  type: "Identifier",
                                  value: "x",
                                },
                              },
                            ],
                          },
                        ],
                      },
                    ],
                    elseifConditions: [
                      BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 94,
                            lnumStartIndex: 2132,
                            range: [
                              2143,
                              2144,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 94,
                          lnumStartIndex: 2132,
                          range: [
                            2145,
                            2147,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 94,
                            lnumStartIndex: 2132,
                            range: [
                              2148,
                              2149,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                      BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 95,
                            lnumStartIndex: 2169,
                            range: [
                              2180,
                              2181,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2169,
                          range: [
                            2182,
                            2184,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 95,
                            lnumStartIndex: 2169,
                            range: [
                              2185,
                              2186,
                            ],
                            type: "NumericLiteral",
                            value: "3",
                          },
                        },
                      },
                    ],
                    ifBlock: Block {
                      statements: [
                        LocalStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 91,
                                lnumStartIndex: 2074,
                                range: [
                                  2103,
                                  2104,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 91,
                                lnumStartIndex: 2074,
                                range: [
                                  2099,
                                  2100,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                          ],
                        },
                        AssignmentStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 92,
                                lnumStartIndex: 2106,
                                range: [
                                  2116,
                                  2118,
                                ],
                                type: "NumericLiteral",
                                value: "10",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 92,
                                lnumStartIndex: 2106,
                                range: [
                                  2112,
                                  2113,
                                ],
                                type: "Identifier",
                                value: "x",
                              },
                            },
                          ],
                        },
                        BreakStatement {},
                      ],
                    },
                    ifCondition: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 91,
                          lnumStartIndex: 2074,
                          range: [
                            2081,
                            2082,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 91,
                        lnumStartIndex: 2074,
                        range: [
                          2083,
                          2085,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 91,
                          lnumStartIndex: 2074,
                          range: [
                            2086,
                            2087,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    },
                  },
                ],
              },
              condition: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 100,
                    lnumStartIndex: 2267,
                    range: [
                      2275,
                      2276,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 100,
                  lnumStartIndex: 2267,
                  range: [
                    2277,
                    2279,
                  ],
                  type: "GreaterThanEqual",
                  value: ">=",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 100,
                    lnumStartIndex: 2267,
                    range: [
                      2280,
                      2282,
                    ],
                    type: "NumericLiteral",
                    value: "12",
                  },
                },
              },
            },
            ReturnStatement {
              arguments: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 101,
                    lnumStartIndex: 2283,
                    range: [
                      2293,
                      2294,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 87,
            lnumStartIndex: 2023,
            range: [
              2032,
              2033,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 87,
              lnumStartIndex: 2023,
              range: [
                2034,
                2035,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 104,
                            lnumStartIndex: 2301,
                            range: [
                              2311,
                              2312,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 104,
                          lnumStartIndex: 2301,
                          range: [
                            2309,
                            2310,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 104,
                      lnumStartIndex: 2301,
                      range: [
                        2314,
                        2316,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 104,
                        lnumStartIndex: 2301,
                        range: [
                          2317,
                          2319,
                        ],
                        type: "NumericLiteral",
                        value: "10",
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 104,
                    lnumStartIndex: 2301,
                    range: [
                      2320,
                      2323,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 104,
                            lnumStartIndex: 2301,
                            range: [
                              2326,
                              2327,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 104,
                          lnumStartIndex: 2301,
                          range: [
                            2324,
                            2325,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 104,
                      lnumStartIndex: 2301,
                      range: [
                        2329,
                        2331,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 104,
                        lnumStartIndex: 2301,
                        range: [
                          2332,
                          2334,
                        ],
                        type: "NumericLiteral",
                        value: "20",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 104,
                  lnumStartIndex: 2301,
                  range: [
                    2335,
                    2338,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 104,
                          lnumStartIndex: 2301,
                          range: [
                            2341,
                            2342,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 104,
                        lnumStartIndex: 2301,
                        range: [
                          2339,
                          2340,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 104,
                    lnumStartIndex: 2301,
                    range: [
                      2344,
                      2346,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 104,
                      lnumStartIndex: 2301,
                      range: [
                        2347,
                        2349,
                      ],
                      type: "NumericLiteral",
                      value: "30",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 104,
                lnumStartIndex: 2301,
                range: [
                  2350,
                  2353,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 104,
                        lnumStartIndex: 2301,
                        range: [
                          2356,
                          2357,
                        ],
                        type: "NumericLiteral",
                        value: "4",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 104,
                      lnumStartIndex: 2301,
                      range: [
                        2354,
                        2355,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 104,
                  lnumStartIndex: 2301,
                  range: [
                    2359,
                    2361,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 104,
                    lnumStartIndex: 2301,
                    range: [
                      2362,
                      2364,
                    ],
                    type: "NumericLiteral",
                    value: "12",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 104,
              lnumStartIndex: 2301,
              range: [
                2302,
                2308,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      LocalStatement {
        init: [
          FunctionExpression {
            block: Block {
              statements: [
                IfStatement {
                  elseBlock: Block {
                    statements: [
                      ReturnStatement {
                        arguments: [
                          NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 111,
                              lnumStartIndex: 2482,
                              range: [
                                2496,
                                2497,
                              ],
                              type: "NumericLiteral",
                              value: "8",
                            },
                          },
                        ],
                      },
                    ],
                  },
                  elseifBlocks: [
                    Block {
                      statements: [
                        ReturnStatement {
                          arguments: [
                            StringLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 109,
                                lnumStartIndex: 2418,
                                range: [
                                  2446,
                                  2449,
                                ],
                                type: "StringLiteral",
                                value: "'b'",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    Block {
                      statements: [
                        ReturnStatement {
                          arguments: [
                            StringLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 110,
                                lnumStartIndex: 2450,
                                range: [
                                  2478,
                                  2481,
                                ],
                                type: "StringLiteral",
                                value: "'c'",
                              },
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  elseifConditions: [
                    BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 109,
                          lnumStartIndex: 2418,
                          range: [
                            2427,
                            2428,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 109,
                        lnumStartIndex: 2418,
                        range: [
                          2429,
                          2430,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 109,
                          lnumStartIndex: 2418,
                          range: [
                            2431,
                            2433,
                          ],
                          type: "NumericLiteral",
                          value: "20",
                        },
                      },
                    },
                    BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 110,
                          lnumStartIndex: 2450,
                          range: [
                            2459,
                            2460,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 110,
                        lnumStartIndex: 2450,
                        range: [
                          2461,
                          2462,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 110,
                          lnumStartIndex: 2450,
                          range: [
                            2463,
                            2465,
                          ],
                          type: "NumericLiteral",
                          value: "30",
                        },
                      },
                    },
                  ],
                  ifBlock: Block {
                    statements: [
                      ReturnStatement {
                        arguments: [
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 108,
                              lnumStartIndex: 2390,
                              range: [
                                2414,
                                2417,
                              ],
                              type: "StringLiteral",
                              value: "'a'",
                            },
                          },
                        ],
                      },
                    ],
                  },
                  ifCondition: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 108,
                        lnumStartIndex: 2390,
                        range: [
                          2395,
                          2396,
                        ],
                        type: "Identifier",
                        value: "i",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 108,
                      lnumStartIndex: 2390,
                      range: [
                        2397,
                        2398,
                      ],
                      type: "LessThan",
                      value: "<",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 108,
                        lnumStartIndex: 2390,
                        range: [
                          2399,
                          2401,
                        ],
                        type: "NumericLiteral",
                        value: "10",
                      },
                    },
                  },
                },
              ],
            },
            parlist: [
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 107,
                  lnumStartIndex: 2368,
                  range: [
                    2387,
                    2388,
                  ],
                  type: "Identifier",
                  value: "i",
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 107,
              lnumStartIndex: 2368,
              range: [
                2374,
                2375,
              ],
              type: "Identifier",
              value: "f",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 115,
                            lnumStartIndex: 2509,
                            range: [
                              2518,
                              2519,
                            ],
                            type: "NumericLiteral",
                            value: "3",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 115,
                          lnumStartIndex: 2509,
                          range: [
                            2516,
                            2517,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 115,
                      lnumStartIndex: 2509,
                      range: [
                        2521,
                        2523,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 115,
                        lnumStartIndex: 2509,
                        range: [
                          2524,
                          2527,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 115,
                    lnumStartIndex: 2509,
                    range: [
                      2528,
                      2531,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 115,
                            lnumStartIndex: 2509,
                            range: [
                              2534,
                              2536,
                            ],
                            type: "NumericLiteral",
                            value: "12",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 115,
                          lnumStartIndex: 2509,
                          range: [
                            2532,
                            2533,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 115,
                      lnumStartIndex: 2509,
                      range: [
                        2538,
                        2540,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 115,
                        lnumStartIndex: 2509,
                        range: [
                          2541,
                          2544,
                        ],
                        type: "StringLiteral",
                        value: "'b'",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 115,
                  lnumStartIndex: 2509,
                  range: [
                    2545,
                    2548,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 115,
                          lnumStartIndex: 2509,
                          range: [
                            2551,
                            2553,
                          ],
                          type: "NumericLiteral",
                          value: "26",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 115,
                        lnumStartIndex: 2509,
                        range: [
                          2549,
                          2550,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 115,
                    lnumStartIndex: 2509,
                    range: [
                      2555,
                      2557,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 115,
                      lnumStartIndex: 2509,
                      range: [
                        2558,
                        2561,
                      ],
                      type: "StringLiteral",
                      value: "'c'",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 115,
                lnumStartIndex: 2509,
                range: [
                  2562,
                  2565,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 115,
                        lnumStartIndex: 2509,
                        range: [
                          2568,
                          2571,
                        ],
                        type: "NumericLiteral",
                        value: "100",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 115,
                      lnumStartIndex: 2509,
                      range: [
                        2566,
                        2567,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 115,
                  lnumStartIndex: 2509,
                  range: [
                    2573,
                    2575,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 115,
                    lnumStartIndex: 2509,
                    range: [
                      2576,
                      2577,
                    ],
                    type: "NumericLiteral",
                    value: "8",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 115,
              lnumStartIndex: 2509,
              range: [
                2509,
                2515,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      LocalStatement {
        init: [
          NilLiteral {
            token: {
              isKeyword: true,
              lnum: 117,
              lnumStartIndex: 2580,
              range: [
                2593,
                2596,
              ],
              type: "NilLiteral",
              value: "nil",
            },
          },
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 117,
              lnumStartIndex: 2580,
              range: [
                2598,
                2600,
              ],
              type: "NumericLiteral",
              value: "23",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 117,
              lnumStartIndex: 2580,
              range: [
                2586,
                2587,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 117,
              lnumStartIndex: 2580,
              range: [
                2589,
                2590,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: FunctionCallExpression {
                        args: [
                          NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 118,
                              lnumStartIndex: 2601,
                              range: [
                                2609,
                                2612,
                              ],
                              type: "NumericLiteral",
                              value: "100",
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 118,
                            lnumStartIndex: 2601,
                            range: [
                              2607,
                              2608,
                            ],
                            type: "Identifier",
                            value: "f",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 118,
                        lnumStartIndex: 2601,
                        range: [
                          2614,
                          2615,
                        ],
                        type: "Star",
                        value: "*",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 118,
                          lnumStartIndex: 2601,
                          range: [
                            2616,
                            2617,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 118,
                      lnumStartIndex: 2601,
                      range: [
                        2618,
                        2619,
                      ],
                      type: "Plus",
                      value: "+",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 118,
                        lnumStartIndex: 2601,
                        range: [
                          2620,
                          2621,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 118,
                    lnumStartIndex: 2601,
                    range: [
                      2622,
                      2624,
                    ],
                    type: "Or",
                    value: "or",
                  },
                  right: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 118,
                      lnumStartIndex: 2601,
                      range: [
                        2625,
                        2626,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                },
              },
              TableValue {
                value: BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 118,
                      lnumStartIndex: 2601,
                      range: [
                        2628,
                        2629,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 118,
                    lnumStartIndex: 2601,
                    range: [
                      2630,
                      2632,
                    ],
                    type: "Or",
                    value: "or",
                  },
                  right: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 118,
                        lnumStartIndex: 2601,
                        range: [
                          2633,
                          2634,
                        ],
                        type: "Identifier",
                        value: "b",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 118,
                      lnumStartIndex: 2601,
                      range: [
                        2635,
                        2636,
                      ],
                      type: "Plus",
                      value: "+",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 118,
                        lnumStartIndex: 2601,
                        range: [
                          2637,
                          2638,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 118,
              lnumStartIndex: 2601,
              range: [
                2601,
                2602,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 119,
                      lnumStartIndex: 2641,
                      range: [
                        2648,
                        2649,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 119,
                      lnumStartIndex: 2641,
                      range: [
                        2650,
                        2651,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 119,
                  lnumStartIndex: 2641,
                  range: [
                    2653,
                    2655,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 119,
                    lnumStartIndex: 2641,
                    range: [
                      2656,
                      2658,
                    ],
                    type: "NumericLiteral",
                    value: "19",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 119,
                lnumStartIndex: 2641,
                range: [
                  2659,
                  2662,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 119,
                      lnumStartIndex: 2641,
                      range: [
                        2663,
                        2664,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 119,
                      lnumStartIndex: 2641,
                      range: [
                        2665,
                        2666,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 119,
                  lnumStartIndex: 2641,
                  range: [
                    2668,
                    2670,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 119,
                    lnumStartIndex: 2641,
                    range: [
                      2671,
                      2673,
                    ],
                    type: "NumericLiteral",
                    value: "25",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 119,
              lnumStartIndex: 2641,
              range: [
                2641,
                2647,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableKeyString {
                key: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 120,
                    lnumStartIndex: 2675,
                    range: [
                      2681,
                      2682,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
                value: BinaryExpression {
                  left: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 120,
                        lnumStartIndex: 2675,
                        range: [
                          2685,
                          2686,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 120,
                      lnumStartIndex: 2675,
                      range: [
                        2687,
                        2688,
                      ],
                      type: "Plus",
                      value: "+",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 120,
                        lnumStartIndex: 2675,
                        range: [
                          2689,
                          2690,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 120,
                    lnumStartIndex: 2675,
                    range: [
                      2691,
                      2693,
                    ],
                    type: "Or",
                    value: "or",
                  },
                  right: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 120,
                      lnumStartIndex: 2675,
                      range: [
                        2694,
                        2695,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                },
              },
              TableKeyString {
                key: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 120,
                    lnumStartIndex: 2675,
                    range: [
                      2697,
                      2698,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                value: BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 120,
                      lnumStartIndex: 2675,
                      range: [
                        2701,
                        2702,
                      ],
                      type: "Identifier",
                      value: "b",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 120,
                    lnumStartIndex: 2675,
                    range: [
                      2703,
                      2704,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 120,
                      lnumStartIndex: 2675,
                      range: [
                        2705,
                        2706,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 120,
              lnumStartIndex: 2675,
              range: [
                2675,
                2676,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 121,
                      lnumStartIndex: 2709,
                      range: [
                        2716,
                        2717,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 121,
                      lnumStartIndex: 2709,
                      range: [
                        2718,
                        2719,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                  indexer: ".",
                },
                operator: {
                  isKeyword: false,
                  lnum: 121,
                  lnumStartIndex: 2709,
                  range: [
                    2720,
                    2722,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 121,
                    lnumStartIndex: 2709,
                    range: [
                      2723,
                      2724,
                    ],
                    type: "NumericLiteral",
                    value: "5",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 121,
                lnumStartIndex: 2709,
                range: [
                  2725,
                  2728,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 121,
                      lnumStartIndex: 2709,
                      range: [
                        2729,
                        2730,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 121,
                      lnumStartIndex: 2709,
                      range: [
                        2731,
                        2732,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  indexer: ".",
                },
                operator: {
                  isKeyword: false,
                  lnum: 121,
                  lnumStartIndex: 2709,
                  range: [
                    2733,
                    2735,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 121,
                    lnumStartIndex: 2709,
                    range: [
                      2736,
                      2738,
                    ],
                    type: "NumericLiteral",
                    value: "25",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 121,
              lnumStartIndex: 2709,
              range: [
                2709,
                2715,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableKeyString {
                key: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 123,
                    lnumStartIndex: 2741,
                    range: [
                      2747,
                      2748,
                    ],
                    type: "Identifier",
                    value: "y",
                  },
                },
                value: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 123,
                    lnumStartIndex: 2741,
                    range: [
                      2751,
                      2752,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 123,
              lnumStartIndex: 2741,
              range: [
                2741,
                2742,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 124,
                      lnumStartIndex: 2755,
                      range: [
                        2761,
                        2762,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 124,
                      lnumStartIndex: 2755,
                      range: [
                        2763,
                        2764,
                      ],
                      type: "Identifier",
                      value: "y",
                    },
                  },
                  indexer: ".",
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 124,
              lnumStartIndex: 2755,
              range: [
                2755,
                2756,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: IndexExpression {
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 125,
                    lnumStartIndex: 2767,
                    range: [
                      2774,
                      2775,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
                index: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 125,
                    lnumStartIndex: 2767,
                    range: [
                      2776,
                      2777,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 125,
                lnumStartIndex: 2767,
                range: [
                  2779,
                  2781,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 125,
                  lnumStartIndex: 2767,
                  range: [
                    2782,
                    2783,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 125,
              lnumStartIndex: 2767,
              range: [
                2767,
                2773,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            WhileStatement {
              block: Block {
                statements: [
                  IfStatement {
                    elseBlock: Block {
                      statements: [
                        ReturnStatement {
                          arguments: [
                          ],
                        },
                      ],
                    },
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            BinaryExpression {
                              left: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 129,
                                  lnumStartIndex: 2813,
                                  range: [
                                    2835,
                                    2836,
                                  ],
                                  type: "Identifier",
                                  value: "i",
                                },
                              },
                              operator: {
                                isKeyword: false,
                                lnum: 129,
                                lnumStartIndex: 2813,
                                range: [
                                  2837,
                                  2838,
                                ],
                                type: "Minus",
                                value: "-",
                              },
                              right: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 129,
                                  lnumStartIndex: 2813,
                                  range: [
                                    2839,
                                    2840,
                                  ],
                                  type: "NumericLiteral",
                                  value: "1",
                                },
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 129,
                                lnumStartIndex: 2813,
                                range: [
                                  2831,
                                  2832,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 129,
                          lnumStartIndex: 2813,
                          range: [
                            2820,
                            2821,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 129,
                        lnumStartIndex: 2813,
                        range: [
                          2822,
                          2823,
                        ],
                        type: "GreaterThan",
                        value: ">",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 129,
                          lnumStartIndex: 2813,
                          range: [
                            2824,
                            2825,
                          ],
                          type: "NumericLiteral",
                          value: "0",
                        },
                      },
                    },
                  },
                ],
              },
              condition: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 128,
                  lnumStartIndex: 2800,
                  range: [
                    2808,
                    2809,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 127,
            lnumStartIndex: 2786,
            range: [
              2795,
              2796,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 127,
              lnumStartIndex: 2786,
              range: [
                2797,
                2798,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            WhileStatement {
              block: Block {
                statements: [
                  IfStatement {
                    elseBlock: Block {
                      statements: [
                        ReturnStatement {
                          arguments: [
                          ],
                        },
                      ],
                    },
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            BinaryExpression {
                              left: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 136,
                                  lnumStartIndex: 2910,
                                  range: [
                                    2932,
                                    2933,
                                  ],
                                  type: "Identifier",
                                  value: "i",
                                },
                              },
                              operator: {
                                isKeyword: false,
                                lnum: 136,
                                lnumStartIndex: 2910,
                                range: [
                                  2934,
                                  2935,
                                ],
                                type: "Minus",
                                value: "-",
                              },
                              right: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 136,
                                  lnumStartIndex: 2910,
                                  range: [
                                    2936,
                                    2937,
                                  ],
                                  type: "NumericLiteral",
                                  value: "1",
                                },
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 136,
                                lnumStartIndex: 2910,
                                range: [
                                  2928,
                                  2929,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 136,
                          lnumStartIndex: 2910,
                          range: [
                            2917,
                            2918,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 136,
                        lnumStartIndex: 2910,
                        range: [
                          2919,
                          2920,
                        ],
                        type: "GreaterThan",
                        value: ">",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 136,
                          lnumStartIndex: 2910,
                          range: [
                            2921,
                            2922,
                          ],
                          type: "NumericLiteral",
                          value: "0",
                        },
                      },
                    },
                  },
                ],
              },
              condition: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 135,
                  lnumStartIndex: 2897,
                  range: [
                    2905,
                    2906,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 134,
            lnumStartIndex: 2882,
            range: [
              2892,
              2893,
            ],
            type: "Identifier",
            value: "g",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 134,
              lnumStartIndex: 2882,
              range: [
                2894,
                2895,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 141,
                lnumStartIndex: 2969,
                range: [
                  2971,
                  2973,
                ],
                type: "NumericLiteral",
                value: "10",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 141,
              lnumStartIndex: 2969,
              range: [
                2969,
                2970,
              ],
              type: "Identifier",
              value: "f",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 142,
                lnumStartIndex: 2976,
                range: [
                  2978,
                  2980,
                ],
                type: "NumericLiteral",
                value: "10",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 142,
              lnumStartIndex: 2976,
              range: [
                2976,
                2977,
              ],
              type: "Identifier",
              value: "g",
            },
          },
        },
      },
      DoStatement {
        block: Block {
          statements: [
            FunctionDeclarationStatement {
              block: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 145,
                          lnumStartIndex: 2987,
                          range: [
                            3009,
                            3010,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 145,
                          lnumStartIndex: 2987,
                          range: [
                            3012,
                            3013,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 145,
                          lnumStartIndex: 2987,
                          range: [
                            3015,
                            3016,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    ],
                  },
                ],
              },
              funcname: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 145,
                  lnumStartIndex: 2987,
                  range: [
                    2998,
                    2999,
                  ],
                  type: "Identifier",
                  value: "f",
                },
              },
              parlist: [
              ],
            },
            LocalStatement {
              init: [
                FunctionCallExpression {
                  args: [
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 147,
                      lnumStartIndex: 3023,
                      range: [
                        3041,
                        3042,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 147,
                    lnumStartIndex: 3023,
                    range: [
                      3031,
                      3032,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 147,
                    lnumStartIndex: 3023,
                    range: [
                      3034,
                      3035,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 147,
                    lnumStartIndex: 3023,
                    range: [
                      3037,
                      3038,
                    ],
                    type: "Identifier",
                    value: "c",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 148,
                            lnumStartIndex: 3046,
                            range: [
                              3055,
                              3056,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 148,
                          lnumStartIndex: 3046,
                          range: [
                            3057,
                            3059,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 148,
                            lnumStartIndex: 3046,
                            range: [
                              3060,
                              3061,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 148,
                        lnumStartIndex: 3046,
                        range: [
                          3062,
                          3065,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 148,
                            lnumStartIndex: 3046,
                            range: [
                              3066,
                              3067,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 148,
                          lnumStartIndex: 3046,
                          range: [
                            3068,
                            3070,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 148,
                            lnumStartIndex: 3046,
                            range: [
                              3071,
                              3072,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 148,
                      lnumStartIndex: 3046,
                      range: [
                        3073,
                        3076,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 148,
                          lnumStartIndex: 3046,
                          range: [
                            3077,
                            3078,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 148,
                        lnumStartIndex: 3046,
                        range: [
                          3079,
                          3081,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 148,
                          lnumStartIndex: 3046,
                          range: [
                            3082,
                            3083,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 148,
                    lnumStartIndex: 3046,
                    range: [
                      3048,
                      3054,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            AssignmentStatement {
              init: [
                GroupingExpression {
                  expression: FunctionCallExpression {
                    args: [
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 149,
                        lnumStartIndex: 3085,
                        range: [
                          3098,
                          3099,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 149,
                    lnumStartIndex: 3085,
                    range: [
                      3087,
                      3088,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 149,
                    lnumStartIndex: 3085,
                    range: [
                      3090,
                      3091,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 149,
                    lnumStartIndex: 3085,
                    range: [
                      3093,
                      3094,
                    ],
                    type: "Identifier",
                    value: "c",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 150,
                            lnumStartIndex: 3104,
                            range: [
                              3113,
                              3114,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 150,
                          lnumStartIndex: 3104,
                          range: [
                            3115,
                            3117,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 150,
                            lnumStartIndex: 3104,
                            range: [
                              3118,
                              3119,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 150,
                        lnumStartIndex: 3104,
                        range: [
                          3120,
                          3123,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 150,
                            lnumStartIndex: 3104,
                            range: [
                              3124,
                              3125,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 150,
                          lnumStartIndex: 3104,
                          range: [
                            3126,
                            3128,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NilLiteral {
                          token: {
                            isKeyword: true,
                            lnum: 150,
                            lnumStartIndex: 3104,
                            range: [
                              3129,
                              3132,
                            ],
                            type: "NilLiteral",
                            value: "nil",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 150,
                      lnumStartIndex: 3104,
                      range: [
                        3133,
                        3136,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 150,
                          lnumStartIndex: 3104,
                          range: [
                            3137,
                            3138,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 150,
                        lnumStartIndex: 3104,
                        range: [
                          3139,
                          3141,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 150,
                          lnumStartIndex: 3104,
                          range: [
                            3142,
                            3145,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 150,
                    lnumStartIndex: 3104,
                    range: [
                      3106,
                      3112,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
      },
      LocalStatement {
        init: [
          BinaryExpression {
            left: NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 153,
                lnumStartIndex: 3152,
                range: [
                  3165,
                  3166,
                ],
                type: "NumericLiteral",
                value: "3",
              },
            },
            operator: {
              isKeyword: true,
              lnum: 153,
              lnumStartIndex: 3152,
              range: [
                3167,
                3170,
              ],
              type: "And",
              value: "and",
            },
            right: FunctionCallExpression {
              args: [
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 153,
                  lnumStartIndex: 3152,
                  range: [
                    3171,
                    3172,
                  ],
                  type: "Identifier",
                  value: "f",
                },
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 153,
              lnumStartIndex: 3152,
              range: [
                3158,
                3159,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 153,
              lnumStartIndex: 3152,
              range: [
                3161,
                3162,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 154,
                    lnumStartIndex: 3176,
                    range: [
                      3183,
                      3184,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 154,
                  lnumStartIndex: 3176,
                  range: [
                    3185,
                    3187,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 154,
                    lnumStartIndex: 3176,
                    range: [
                      3188,
                      3189,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 154,
                lnumStartIndex: 3176,
                range: [
                  3190,
                  3193,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 154,
                    lnumStartIndex: 3176,
                    range: [
                      3194,
                      3195,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 154,
                  lnumStartIndex: 3176,
                  range: [
                    3196,
                    3198,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 154,
                    lnumStartIndex: 3176,
                    range: [
                      3199,
                      3202,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 154,
              lnumStartIndex: 3176,
              range: [
                3176,
                3182,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 156,
                    lnumStartIndex: 3205,
                    range: [
                      3218,
                      3219,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
            },
            ReturnStatement {
              arguments: [
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 156,
            lnumStartIndex: 3205,
            range: [
              3214,
              3215,
            ],
            type: "Identifier",
            value: "g",
          },
        },
        parlist: [
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 158,
                    lnumStartIndex: 3236,
                    range: [
                      3244,
                      3245,
                    ],
                    type: "Identifier",
                    value: "g",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 158,
                lnumStartIndex: 3236,
                range: [
                  3248,
                  3250,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 158,
                  lnumStartIndex: 3236,
                  range: [
                    3251,
                    3254,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 158,
              lnumStartIndex: 3236,
              range: [
                3237,
                3243,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            ReturnStatement {
              arguments: [
                BinaryExpression {
                  left: NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 159,
                      lnumStartIndex: 3256,
                      range: [
                        3276,
                        3279,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 159,
                    lnumStartIndex: 3256,
                    range: [
                      3280,
                      3282,
                    ],
                    type: "Or",
                    value: "or",
                  },
                  right: FunctionCallExpression {
                    args: [
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 159,
                        lnumStartIndex: 3256,
                        range: [
                          3283,
                          3284,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 159,
            lnumStartIndex: 3256,
            range: [
              3265,
              3266,
            ],
            type: "Identifier",
            value: "g",
          },
        },
        parlist: [
        ],
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 161,
                lnumStartIndex: 3292,
                range: [
                  3299,
                  3300,
                ],
                type: "Identifier",
                value: "g",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 161,
              lnumStartIndex: 3292,
              range: [
                3292,
                3293,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 161,
              lnumStartIndex: 3292,
              range: [
                3295,
                3296,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 162,
                    lnumStartIndex: 3303,
                    range: [
                      3310,
                      3311,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 162,
                  lnumStartIndex: 3303,
                  range: [
                    3312,
                    3314,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 162,
                    lnumStartIndex: 3303,
                    range: [
                      3315,
                      3316,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 162,
                lnumStartIndex: 3303,
                range: [
                  3317,
                  3320,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 162,
                    lnumStartIndex: 3303,
                    range: [
                      3321,
                      3322,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 162,
                  lnumStartIndex: 3303,
                  range: [
                    3323,
                    3325,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 162,
                    lnumStartIndex: 3303,
                    range: [
                      3326,
                      3329,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 162,
              lnumStartIndex: 3303,
              range: [
                3303,
                3309,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 164,
                lnumStartIndex: 3332,
                range: [
                  3338,
                  3341,
                ],
                type: "StringLiteral",
                value: "'+'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 164,
              lnumStartIndex: 3332,
              range: [
                3332,
                3337,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          StringLiteral {
            token: {
              isKeyword: false,
              lnum: 167,
              lnumStartIndex: 3345,
              range: [
                3349,
                3490,
              ],
              type: "StringLiteral",
              value: "[[
return function ( a , b , c , d , e )
  local x = a >= b or c or ( d and e ) or nil
  return x
end , { a = 1 , b = 2 >= 1 , } or { 1 };
]]",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 167,
              lnumStartIndex: 3345,
              range: [
                3345,
                3346,
              ],
              type: "Identifier",
              value: "f",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 173,
                  lnumStartIndex: 3491,
                  range: [
                    3507,
                    3508,
                  ],
                  type: "Identifier",
                  value: "f",
                },
              },
              StringLiteral {
                token: {
                  isKeyword: false,
                  lnum: 173,
                  lnumStartIndex: 3491,
                  range: [
                    3510,
                    3515,
                  ],
                  type: "StringLiteral",
                  value: '"%s+"',
                },
              },
              StringLiteral {
                token: {
                  isKeyword: false,
                  lnum: 173,
                  lnumStartIndex: 3491,
                  range: [
                    3517,
                    3521,
                  ],
                  type: "StringLiteral",
                  value: '"\\
"',
                },
              },
            ],
            base: MemberExpression {
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 173,
                  lnumStartIndex: 3491,
                  range: [
                    3495,
                    3501,
                  ],
                  type: "Identifier",
                  value: "string",
                },
              },
              identifier: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 173,
                  lnumStartIndex: 3491,
                  range: [
                    3502,
                    3506,
                  ],
                  type: "Identifier",
                  value: "gsub",
                },
              },
              indexer: ".",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 173,
              lnumStartIndex: 3491,
              range: [
                3491,
                3492,
              ],
              type: "Identifier",
              value: "f",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
            ],
            base: FunctionCallExpression {
              args: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 174,
                    lnumStartIndex: 3560,
                    range: [
                      3578,
                      3579,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 174,
                  lnumStartIndex: 3560,
                  range: [
                    3567,
                    3577,
                  ],
                  type: "Identifier",
                  value: "loadstring",
                },
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 174,
              lnumStartIndex: 3560,
              range: [
                3560,
                3561,
              ],
              type: "Identifier",
              value: "f",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 174,
              lnumStartIndex: 3560,
              range: [
                3563,
                3564,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 175,
                      lnumStartIndex: 3584,
                      range: [
                        3591,
                        3592,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 175,
                      lnumStartIndex: 3584,
                      range: [
                        3593,
                        3594,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  indexer: ".",
                },
                operator: {
                  isKeyword: false,
                  lnum: 175,
                  lnumStartIndex: 3584,
                  range: [
                    3595,
                    3597,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 175,
                    lnumStartIndex: 3584,
                    range: [
                      3598,
                      3599,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 175,
                lnumStartIndex: 3584,
                range: [
                  3600,
                  3603,
                ],
                type: "And",
                value: "and",
              },
              right: MemberExpression {
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 175,
                    lnumStartIndex: 3584,
                    range: [
                      3604,
                      3605,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                identifier: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 175,
                    lnumStartIndex: 3584,
                    range: [
                      3606,
                      3607,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                indexer: ".",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 175,
              lnumStartIndex: 3584,
              range: [
                3584,
                3590,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            IfStatement {
              elseBlock: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 178,
                          lnumStartIndex: 3636,
                          range: [
                            3704,
                            3705,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    ],
                  },
                ],
              },
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 178,
                          lnumStartIndex: 3636,
                          range: [
                            3689,
                            3690,
                          ],
                          type: "NumericLiteral",
                          value: "0",
                        },
                      },
                    ],
                  },
                ],
              },
              ifCondition: UnaryExpression {
                argument: GroupingExpression {
                  expression: BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 178,
                              lnumStartIndex: 3636,
                              range: [
                                3646,
                                3647,
                              ],
                              type: "Identifier",
                              value: "a",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 178,
                            lnumStartIndex: 3636,
                            range: [
                              3648,
                              3650,
                            ],
                            type: "GreaterThanEqual",
                            value: ">=",
                          },
                          right: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 178,
                              lnumStartIndex: 3636,
                              range: [
                                3651,
                                3652,
                              ],
                              type: "Identifier",
                              value: "b",
                            },
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 178,
                          lnumStartIndex: 3636,
                          range: [
                            3653,
                            3655,
                          ],
                          type: "Or",
                          value: "or",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 178,
                            lnumStartIndex: 3636,
                            range: [
                              3656,
                              3657,
                            ],
                            type: "Identifier",
                            value: "c",
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 178,
                        lnumStartIndex: 3636,
                        range: [
                          3658,
                          3660,
                        ],
                        type: "Or",
                        value: "or",
                      },
                      right: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 178,
                            lnumStartIndex: 3636,
                            range: [
                              3661,
                              3662,
                            ],
                            type: "Identifier",
                            value: "d",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 178,
                          lnumStartIndex: 3636,
                          range: [
                            3663,
                            3666,
                          ],
                          type: "And",
                          value: "and",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 178,
                            lnumStartIndex: 3636,
                            range: [
                              3667,
                              3668,
                            ],
                            type: "Identifier",
                            value: "e",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 178,
                      lnumStartIndex: 3636,
                      range: [
                        3669,
                        3671,
                      ],
                      type: "Or",
                      value: "or",
                    },
                    right: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 178,
                        lnumStartIndex: 3636,
                        range: [
                          3672,
                          3675,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 178,
                  lnumStartIndex: 3636,
                  range: [
                    3641,
                    3644,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 177,
            lnumStartIndex: 3610,
            range: [
              3619,
              3620,
            ],
            type: "Identifier",
            value: "g",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 177,
              lnumStartIndex: 3610,
              range: [
                3621,
                3622,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 177,
              lnumStartIndex: 3610,
              range: [
                3624,
                3625,
              ],
              type: "Identifier",
              value: "b",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 177,
              lnumStartIndex: 3610,
              range: [
                3627,
                3628,
              ],
              type: "Identifier",
              value: "c",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 177,
              lnumStartIndex: 3610,
              range: [
                3630,
                3631,
              ],
              type: "Identifier",
              value: "d",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 177,
              lnumStartIndex: 3610,
              range: [
                3633,
                3634,
              ],
              type: "Identifier",
              value: "e",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            WhileStatement {
              block: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 182,
                          lnumStartIndex: 3746,
                          range: [
                            3798,
                            3799,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    ],
                  },
                ],
              },
              condition: GroupingExpression {
                expression: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 182,
                            lnumStartIndex: 3746,
                            range: [
                              3755,
                              3756,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 182,
                          lnumStartIndex: 3746,
                          range: [
                            3757,
                            3759,
                          ],
                          type: "GreaterThanEqual",
                          value: ">=",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 182,
                            lnumStartIndex: 3746,
                            range: [
                              3760,
                              3761,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 182,
                        lnumStartIndex: 3746,
                        range: [
                          3762,
                          3764,
                        ],
                        type: "Or",
                        value: "or",
                      },
                      right: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 182,
                          lnumStartIndex: 3746,
                          range: [
                            3765,
                            3766,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 182,
                      lnumStartIndex: 3746,
                      range: [
                        3767,
                        3769,
                      ],
                      type: "Or",
                      value: "or",
                    },
                    right: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 182,
                            lnumStartIndex: 3746,
                            range: [
                              3771,
                              3772,
                            ],
                            type: "Identifier",
                            value: "d",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 182,
                          lnumStartIndex: 3746,
                          range: [
                            3773,
                            3776,
                          ],
                          type: "And",
                          value: "and",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 182,
                            lnumStartIndex: 3746,
                            range: [
                              3777,
                              3778,
                            ],
                            type: "Identifier",
                            value: "e",
                          },
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 182,
                    lnumStartIndex: 3746,
                    range: [
                      3780,
                      3782,
                    ],
                    type: "Or",
                    value: "or",
                  },
                  right: NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 182,
                      lnumStartIndex: 3746,
                      range: [
                        3783,
                        3786,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                },
              },
            },
            ReturnStatement {
              arguments: [
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 183,
                    lnumStartIndex: 3805,
                    range: [
                      3815,
                      3816,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 181,
            lnumStartIndex: 3720,
            range: [
              3729,
              3730,
            ],
            type: "Identifier",
            value: "h",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 181,
              lnumStartIndex: 3720,
              range: [
                3731,
                3732,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 181,
              lnumStartIndex: 3720,
              range: [
                3734,
                3735,
              ],
              type: "Identifier",
              value: "b",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 181,
              lnumStartIndex: 3720,
              range: [
                3737,
                3738,
              ],
              type: "Identifier",
              value: "c",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 181,
              lnumStartIndex: 3720,
              range: [
                3740,
                3741,
              ],
              type: "Identifier",
              value: "d",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 181,
              lnumStartIndex: 3720,
              range: [
                3743,
                3744,
              ],
              type: "Identifier",
              value: "e",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 186,
                          lnumStartIndex: 3823,
                          range: [
                            3833,
                            3834,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 186,
                          lnumStartIndex: 3823,
                          range: [
                            3836,
                            3837,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 186,
                        lnumStartIndex: 3823,
                        range: [
                          3831,
                          3832,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 186,
                    lnumStartIndex: 3823,
                    range: [
                      3839,
                      3841,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: BooleanLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 186,
                      lnumStartIndex: 3823,
                      range: [
                        3842,
                        3846,
                      ],
                      type: "BooleanLiteral",
                      value: "true",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 186,
                  lnumStartIndex: 3823,
                  range: [
                    3847,
                    3850,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 186,
                          lnumStartIndex: 3823,
                          range: [
                            3853,
                            3854,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 186,
                          lnumStartIndex: 3823,
                          range: [
                            3856,
                            3857,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 186,
                        lnumStartIndex: 3823,
                        range: [
                          3851,
                          3852,
                        ],
                        type: "Identifier",
                        value: "g",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 186,
                    lnumStartIndex: 3823,
                    range: [
                      3859,
                      3861,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 186,
                      lnumStartIndex: 3823,
                      range: [
                        3862,
                        3863,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 186,
                lnumStartIndex: 3823,
                range: [
                  3864,
                  3867,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 186,
                        lnumStartIndex: 3823,
                        range: [
                          3870,
                          3871,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 186,
                        lnumStartIndex: 3823,
                        range: [
                          3873,
                          3874,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 186,
                      lnumStartIndex: 3823,
                      range: [
                        3868,
                        3869,
                      ],
                      type: "Identifier",
                      value: "h",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 186,
                  lnumStartIndex: 3823,
                  range: [
                    3876,
                    3878,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 186,
                    lnumStartIndex: 3823,
                    range: [
                      3879,
                      3880,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 186,
              lnumStartIndex: 3823,
              range: [
                3824,
                3830,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 187,
                          lnumStartIndex: 3882,
                          range: [
                            3891,
                            3892,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 187,
                          lnumStartIndex: 3882,
                          range: [
                            3894,
                            3895,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 187,
                          lnumStartIndex: 3882,
                          range: [
                            3897,
                            3900,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 187,
                        lnumStartIndex: 3882,
                        range: [
                          3889,
                          3890,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 187,
                    lnumStartIndex: 3882,
                    range: [
                      3902,
                      3904,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 187,
                      lnumStartIndex: 3882,
                      range: [
                        3905,
                        3908,
                      ],
                      type: "StringLiteral",
                      value: "'a'",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 187,
                  lnumStartIndex: 3882,
                  range: [
                    3909,
                    3912,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 187,
                          lnumStartIndex: 3882,
                          range: [
                            3915,
                            3916,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 187,
                          lnumStartIndex: 3882,
                          range: [
                            3918,
                            3919,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 187,
                          lnumStartIndex: 3882,
                          range: [
                            3921,
                            3924,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 187,
                        lnumStartIndex: 3882,
                        range: [
                          3913,
                          3914,
                        ],
                        type: "Identifier",
                        value: "g",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 187,
                    lnumStartIndex: 3882,
                    range: [
                      3926,
                      3928,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 187,
                      lnumStartIndex: 3882,
                      range: [
                        3929,
                        3930,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 187,
                lnumStartIndex: 3882,
                range: [
                  3931,
                  3934,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 187,
                        lnumStartIndex: 3882,
                        range: [
                          3937,
                          3938,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 187,
                        lnumStartIndex: 3882,
                        range: [
                          3940,
                          3941,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 187,
                        lnumStartIndex: 3882,
                        range: [
                          3943,
                          3946,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 187,
                      lnumStartIndex: 3882,
                      range: [
                        3935,
                        3936,
                      ],
                      type: "Identifier",
                      value: "h",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 187,
                  lnumStartIndex: 3882,
                  range: [
                    3948,
                    3950,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 187,
                    lnumStartIndex: 3882,
                    range: [
                      3951,
                      3952,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 187,
              lnumStartIndex: 3882,
              range: [
                3882,
                3888,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 188,
                      lnumStartIndex: 3954,
                      range: [
                        3963,
                        3964,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 188,
                      lnumStartIndex: 3954,
                      range: [
                        3966,
                        3967,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 188,
                      lnumStartIndex: 3954,
                      range: [
                        3969,
                        3972,
                      ],
                      type: "StringLiteral",
                      value: "'a'",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 188,
                    lnumStartIndex: 3954,
                    range: [
                      3961,
                      3962,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 189,
                lnumStartIndex: 3974,
                range: [
                  3976,
                  3978,
                ],
                type: "TildaEqual",
                value: "~=",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 190,
                  lnumStartIndex: 4007,
                  range: [
                    4009,
                    4012,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 190,
                lnumStartIndex: 4007,
                range: [
                  4014,
                  4016,
                ],
                type: "StringLiteral",
                value: '""',
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 188,
              lnumStartIndex: 3954,
              range: [
                3954,
                3960,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 4018,
                          range: [
                            4027,
                            4028,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 4018,
                          range: [
                            4030,
                            4031,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 4018,
                          range: [
                            4033,
                            4036,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 191,
                        lnumStartIndex: 4018,
                        range: [
                          4025,
                          4026,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 191,
                    lnumStartIndex: 4018,
                    range: [
                      4038,
                      4040,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 191,
                      lnumStartIndex: 4018,
                      range: [
                        4041,
                        4044,
                      ],
                      type: "StringLiteral",
                      value: "'a'",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 191,
                  lnumStartIndex: 4018,
                  range: [
                    4045,
                    4048,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 4018,
                          range: [
                            4051,
                            4052,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 4018,
                          range: [
                            4054,
                            4055,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 4018,
                          range: [
                            4057,
                            4060,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 191,
                        lnumStartIndex: 4018,
                        range: [
                          4049,
                          4050,
                        ],
                        type: "Identifier",
                        value: "g",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 191,
                    lnumStartIndex: 4018,
                    range: [
                      4062,
                      4064,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 191,
                      lnumStartIndex: 4018,
                      range: [
                        4065,
                        4066,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 191,
                lnumStartIndex: 4018,
                range: [
                  4067,
                  4070,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 191,
                        lnumStartIndex: 4018,
                        range: [
                          4073,
                          4074,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 191,
                        lnumStartIndex: 4018,
                        range: [
                          4076,
                          4077,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 191,
                        lnumStartIndex: 4018,
                        range: [
                          4079,
                          4082,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 191,
                      lnumStartIndex: 4018,
                      range: [
                        4071,
                        4072,
                      ],
                      type: "Identifier",
                      value: "h",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 191,
                  lnumStartIndex: 4018,
                  range: [
                    4084,
                    4086,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 191,
                    lnumStartIndex: 4018,
                    range: [
                      4087,
                      4088,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 191,
              lnumStartIndex: 4018,
              range: [
                4018,
                4024,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4099,
                            4100,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4102,
                            4103,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4105,
                            4108,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4110,
                            4111,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4113,
                            4116,
                          ],
                          type: "StringLiteral",
                          value: "'x'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 192,
                        lnumStartIndex: 4090,
                        range: [
                          4097,
                          4098,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 192,
                    lnumStartIndex: 4090,
                    range: [
                      4118,
                      4120,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 192,
                      lnumStartIndex: 4090,
                      range: [
                        4121,
                        4124,
                      ],
                      type: "StringLiteral",
                      value: "'x'",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 192,
                  lnumStartIndex: 4090,
                  range: [
                    4125,
                    4128,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4131,
                            4132,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4134,
                            4135,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4137,
                            4140,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4142,
                            4143,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 192,
                          lnumStartIndex: 4090,
                          range: [
                            4145,
                            4148,
                          ],
                          type: "StringLiteral",
                          value: "'x'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 192,
                        lnumStartIndex: 4090,
                        range: [
                          4129,
                          4130,
                        ],
                        type: "Identifier",
                        value: "g",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 192,
                    lnumStartIndex: 4090,
                    range: [
                      4150,
                      4152,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 192,
                      lnumStartIndex: 4090,
                      range: [
                        4153,
                        4154,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 192,
                lnumStartIndex: 4090,
                range: [
                  4155,
                  4158,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 193,
                        lnumStartIndex: 4159,
                        range: [
                          4163,
                          4164,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 193,
                        lnumStartIndex: 4159,
                        range: [
                          4166,
                          4167,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 193,
                        lnumStartIndex: 4159,
                        range: [
                          4169,
                          4172,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 193,
                        lnumStartIndex: 4159,
                        range: [
                          4174,
                          4175,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 193,
                        lnumStartIndex: 4159,
                        range: [
                          4177,
                          4180,
                        ],
                        type: "StringLiteral",
                        value: "'x'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 193,
                      lnumStartIndex: 4159,
                      range: [
                        4161,
                        4162,
                      ],
                      type: "Identifier",
                      value: "h",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 193,
                  lnumStartIndex: 4159,
                  range: [
                    4182,
                    4184,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 193,
                    lnumStartIndex: 4159,
                    range: [
                      4185,
                      4186,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 192,
              lnumStartIndex: 4090,
              range: [
                4090,
                4096,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4197,
                            4198,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4200,
                            4201,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4203,
                            4206,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4208,
                            4211,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4213,
                            4216,
                          ],
                          type: "StringLiteral",
                          value: "'x'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 194,
                        lnumStartIndex: 4188,
                        range: [
                          4195,
                          4196,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 194,
                    lnumStartIndex: 4188,
                    range: [
                      4218,
                      4220,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 194,
                      lnumStartIndex: 4188,
                      range: [
                        4221,
                        4224,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 194,
                  lnumStartIndex: 4188,
                  range: [
                    4225,
                    4228,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4231,
                            4232,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4234,
                            4235,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4237,
                            4240,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4242,
                            4245,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 194,
                          lnumStartIndex: 4188,
                          range: [
                            4247,
                            4250,
                          ],
                          type: "StringLiteral",
                          value: "'x'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 194,
                        lnumStartIndex: 4188,
                        range: [
                          4229,
                          4230,
                        ],
                        type: "Identifier",
                        value: "g",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 194,
                    lnumStartIndex: 4188,
                    range: [
                      4252,
                      4254,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 194,
                      lnumStartIndex: 4188,
                      range: [
                        4255,
                        4256,
                      ],
                      type: "NumericLiteral",
                      value: "0",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 194,
                lnumStartIndex: 4188,
                range: [
                  4257,
                  4260,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 195,
                        lnumStartIndex: 4261,
                        range: [
                          4265,
                          4266,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 195,
                        lnumStartIndex: 4261,
                        range: [
                          4268,
                          4269,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 195,
                        lnumStartIndex: 4261,
                        range: [
                          4271,
                          4274,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                    NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 195,
                        lnumStartIndex: 4261,
                        range: [
                          4276,
                          4279,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 195,
                        lnumStartIndex: 4261,
                        range: [
                          4281,
                          4284,
                        ],
                        type: "StringLiteral",
                        value: "'x'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 195,
                      lnumStartIndex: 4261,
                      range: [
                        4263,
                        4264,
                      ],
                      type: "Identifier",
                      value: "h",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 195,
                  lnumStartIndex: 4261,
                  range: [
                    4286,
                    4288,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 195,
                    lnumStartIndex: 4261,
                    range: [
                      4289,
                      4290,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 194,
              lnumStartIndex: 4188,
              range: [
                4188,
                4194,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4301,
                            4302,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4304,
                            4305,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4307,
                            4310,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4312,
                            4313,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4315,
                            4318,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 196,
                        lnumStartIndex: 4292,
                        range: [
                          4299,
                          4300,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 196,
                    lnumStartIndex: 4292,
                    range: [
                      4320,
                      4322,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 196,
                      lnumStartIndex: 4292,
                      range: [
                        4323,
                        4326,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 196,
                  lnumStartIndex: 4292,
                  range: [
                    4327,
                    4330,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4333,
                            4334,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4336,
                            4337,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4339,
                            4342,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4344,
                            4345,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 196,
                          lnumStartIndex: 4292,
                          range: [
                            4347,
                            4350,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 196,
                        lnumStartIndex: 4292,
                        range: [
                          4331,
                          4332,
                        ],
                        type: "Identifier",
                        value: "g",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 196,
                    lnumStartIndex: 4292,
                    range: [
                      4352,
                      4354,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 196,
                      lnumStartIndex: 4292,
                      range: [
                        4355,
                        4356,
                      ],
                      type: "NumericLiteral",
                      value: "0",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 196,
                lnumStartIndex: 4292,
                range: [
                  4357,
                  4360,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 197,
                        lnumStartIndex: 4361,
                        range: [
                          4365,
                          4366,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 197,
                        lnumStartIndex: 4361,
                        range: [
                          4368,
                          4369,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 197,
                        lnumStartIndex: 4361,
                        range: [
                          4371,
                          4374,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 197,
                        lnumStartIndex: 4361,
                        range: [
                          4376,
                          4377,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 197,
                        lnumStartIndex: 4361,
                        range: [
                          4379,
                          4382,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 197,
                      lnumStartIndex: 4361,
                      range: [
                        4363,
                        4364,
                      ],
                      type: "Identifier",
                      value: "h",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 197,
                  lnumStartIndex: 4361,
                  range: [
                    4384,
                    4386,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 197,
                    lnumStartIndex: 4361,
                    range: [
                      4387,
                      4388,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 196,
              lnumStartIndex: 4292,
              range: [
                4292,
                4298,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 199,
                      lnumStartIndex: 4391,
                      range: [
                        4398,
                        4399,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 199,
                    lnumStartIndex: 4391,
                    range: [
                      4400,
                      4403,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 199,
                          lnumStartIndex: 4391,
                          range: [
                            4404,
                            4405,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 199,
                        lnumStartIndex: 4391,
                        range: [
                          4406,
                          4407,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 199,
                          lnumStartIndex: 4391,
                          range: [
                            4408,
                            4409,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 199,
                      lnumStartIndex: 4391,
                      range: [
                        4410,
                        4412,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: BooleanLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 199,
                        lnumStartIndex: 4391,
                        range: [
                          4413,
                          4417,
                        ],
                        type: "BooleanLiteral",
                        value: "true",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 199,
                  lnumStartIndex: 4391,
                  range: [
                    4418,
                    4421,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 199,
                      lnumStartIndex: 4391,
                      range: [
                        4422,
                        4423,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 199,
                    lnumStartIndex: 4391,
                    range: [
                      4424,
                      4425,
                    ],
                    type: "LessThan",
                    value: "<",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 199,
                      lnumStartIndex: 4391,
                      range: [
                        4426,
                        4427,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 199,
                lnumStartIndex: 4391,
                range: [
                  4428,
                  4431,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: BinaryExpression {
                  left: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 199,
                      lnumStartIndex: 4391,
                      range: [
                        4432,
                        4435,
                      ],
                      type: "StringLiteral",
                      value: "'a'",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 199,
                    lnumStartIndex: 4391,
                    range: [
                      4436,
                      4437,
                    ],
                    type: "LessThan",
                    value: "<",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 199,
                      lnumStartIndex: 4391,
                      range: [
                        4438,
                        4441,
                      ],
                      type: "StringLiteral",
                      value: "'b'",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 199,
                  lnumStartIndex: 4391,
                  range: [
                    4442,
                    4444,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: BooleanLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 199,
                    lnumStartIndex: 4391,
                    range: [
                      4445,
                      4449,
                    ],
                    type: "BooleanLiteral",
                    value: "true",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 199,
              lnumStartIndex: 4391,
              range: [
                4391,
                4397,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          BinaryExpression {
            left: BinaryExpression {
              left: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 200,
                  lnumStartIndex: 4451,
                  range: [
                    4455,
                    4456,
                  ],
                  type: "NumericLiteral",
                  value: "2",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 200,
                lnumStartIndex: 4451,
                range: [
                  4457,
                  4458,
                ],
                type: "LessThan",
                value: "<",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 200,
                  lnumStartIndex: 4451,
                  range: [
                    4459,
                    4460,
                  ],
                  type: "NumericLiteral",
                  value: "3",
                },
              },
            },
            operator: {
              isKeyword: true,
              lnum: 200,
              lnumStartIndex: 4451,
              range: [
                4461,
                4464,
              ],
              type: "And",
              value: "and",
            },
            right: UnaryExpression {
              argument: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 200,
                  lnumStartIndex: 4451,
                  range: [
                    4469,
                    4470,
                  ],
                  type: "NumericLiteral",
                  value: "3",
                },
              },
              operator: {
                isKeyword: true,
                lnum: 200,
                lnumStartIndex: 4451,
                range: [
                  4465,
                  4468,
                ],
                type: "Not",
                value: "not",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 200,
              lnumStartIndex: 4451,
              range: [
                4451,
                4452,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 201,
                  lnumStartIndex: 4472,
                  range: [
                    4479,
                    4480,
                  ],
                  type: "Identifier",
                  value: "x",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 201,
                lnumStartIndex: 4472,
                range: [
                  4481,
                  4483,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BooleanLiteral {
                token: {
                  isKeyword: true,
                  lnum: 201,
                  lnumStartIndex: 4472,
                  range: [
                    4484,
                    4489,
                  ],
                  type: "BooleanLiteral",
                  value: "false",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 201,
              lnumStartIndex: 4472,
              range: [
                4472,
                4478,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          BinaryExpression {
            left: BinaryExpression {
              left: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 202,
                  lnumStartIndex: 4491,
                  range: [
                    4495,
                    4496,
                  ],
                  type: "NumericLiteral",
                  value: "2",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 202,
                lnumStartIndex: 4491,
                range: [
                  4497,
                  4498,
                ],
                type: "LessThan",
                value: "<",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 202,
                  lnumStartIndex: 4491,
                  range: [
                    4499,
                    4500,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
            },
            operator: {
              isKeyword: true,
              lnum: 202,
              lnumStartIndex: 4491,
              range: [
                4501,
                4503,
              ],
              type: "Or",
              value: "or",
            },
            right: GroupingExpression {
              expression: BinaryExpression {
                left: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 202,
                      lnumStartIndex: 4491,
                      range: [
                        4505,
                        4506,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 202,
                    lnumStartIndex: 4491,
                    range: [
                      4507,
                      4508,
                    ],
                    type: "GreaterThan",
                    value: ">",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 202,
                      lnumStartIndex: 4491,
                      range: [
                        4509,
                        4510,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 202,
                  lnumStartIndex: 4491,
                  range: [
                    4511,
                    4514,
                  ],
                  type: "And",
                  value: "and",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 202,
                    lnumStartIndex: 4491,
                    range: [
                      4515,
                      4518,
                    ],
                    type: "StringLiteral",
                    value: "'a'",
                  },
                },
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 202,
              lnumStartIndex: 4491,
              range: [
                4491,
                4492,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 203,
                  lnumStartIndex: 4521,
                  range: [
                    4528,
                    4529,
                  ],
                  type: "Identifier",
                  value: "x",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 203,
                lnumStartIndex: 4521,
                range: [
                  4530,
                  4532,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: StringLiteral {
                token: {
                  isKeyword: false,
                  lnum: 203,
                  lnumStartIndex: 4521,
                  range: [
                    4533,
                    4536,
                  ],
                  type: "StringLiteral",
                  value: "'a'",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 203,
              lnumStartIndex: 4521,
              range: [
                4521,
                4527,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      DoStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 207,
                    lnumStartIndex: 4543,
                    range: [
                      4551,
                      4552,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
              ],
            },
            IfStatement {
              elseBlock: Block {
                statements: [
                  AssignmentStatement {
                    init: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 208,
                          lnumStartIndex: 4554,
                          range: [
                            4584,
                            4585,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 208,
                          lnumStartIndex: 4554,
                          range: [
                            4580,
                            4581,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                ],
              },
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  AssignmentStatement {
                    init: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 208,
                          lnumStartIndex: 4554,
                          range: [
                            4572,
                            4573,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 208,
                          lnumStartIndex: 4554,
                          range: [
                            4568,
                            4569,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                ],
              },
              ifCondition: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 208,
                  lnumStartIndex: 4554,
                  range: [
                    4559,
                    4562,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 209,
                        lnumStartIndex: 4591,
                        range: [
                          4601,
                          4602,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 209,
                      lnumStartIndex: 4591,
                      range: [
                        4603,
                        4605,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 209,
                        lnumStartIndex: 4591,
                        range: [
                          4606,
                          4607,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 209,
                    lnumStartIndex: 4591,
                    range: [
                      4594,
                      4600,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: MemberExpression {
                      base: FunctionCallExpression {
                        args: [
                          NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 213,
                              lnumStartIndex: 4628,
                              range: [
                                4651,
                                4652,
                              ],
                              type: "NumericLiteral",
                              value: "1",
                            },
                          },
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 213,
                              lnumStartIndex: 4628,
                              range: [
                                4654,
                                4657,
                              ],
                              type: "StringLiteral",
                              value: '"n"',
                            },
                          },
                        ],
                        base: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 213,
                              lnumStartIndex: 4628,
                              range: [
                                4637,
                                4642,
                              ],
                              type: "Identifier",
                              value: "debug",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 213,
                              lnumStartIndex: 4628,
                              range: [
                                4643,
                                4650,
                              ],
                              type: "Identifier",
                              value: "getinfo",
                            },
                          },
                          indexer: ".",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 213,
                          lnumStartIndex: 4628,
                          range: [
                            4659,
                            4663,
                          ],
                          type: "Identifier",
                          value: "name",
                        },
                      },
                      indexer: ".",
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 213,
                      lnumStartIndex: 4628,
                      range: [
                        4664,
                        4666,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 213,
                        lnumStartIndex: 4628,
                        range: [
                          4667,
                          4670,
                        ],
                        type: "StringLiteral",
                        value: "'F'",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 213,
                    lnumStartIndex: 4628,
                    range: [
                      4630,
                      4636,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            ReturnStatement {
              arguments: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 214,
                    lnumStartIndex: 4672,
                    range: [
                      4681,
                      4682,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 214,
                    lnumStartIndex: 4672,
                    range: [
                      4684,
                      4685,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 214,
                    lnumStartIndex: 4672,
                    range: [
                      4687,
                      4688,
                    ],
                    type: "NumericLiteral",
                    value: "3",
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 212,
            lnumStartIndex: 4614,
            range: [
              4623,
              4624,
            ],
            type: "Identifier",
            value: "F",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 212,
              lnumStartIndex: 4614,
              range: [
                4625,
                4626,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          BinaryExpression {
            left: FunctionCallExpression {
              args: [
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 217,
                    lnumStartIndex: 4694,
                    range: [
                      4703,
                      4704,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 217,
                  lnumStartIndex: 4694,
                  range: [
                    4701,
                    4702,
                  ],
                  type: "Identifier",
                  value: "F",
                },
              },
            },
            operator: {
              isKeyword: false,
              lnum: 217,
              lnumStartIndex: 4694,
              range: [
                4706,
                4708,
              ],
              type: "TildaEqual",
              value: "~=",
            },
            right: NilLiteral {
              token: {
                isKeyword: true,
                lnum: 217,
                lnumStartIndex: 4694,
                range: [
                  4709,
                  4712,
                ],
                type: "NilLiteral",
                value: "nil",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 217,
              lnumStartIndex: 4694,
              range: [
                4694,
                4695,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 217,
              lnumStartIndex: 4694,
              range: [
                4697,
                4698,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 218,
                    lnumStartIndex: 4714,
                    range: [
                      4721,
                      4722,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 218,
                  lnumStartIndex: 4714,
                  range: [
                    4723,
                    4725,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: BooleanLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 218,
                    lnumStartIndex: 4714,
                    range: [
                      4726,
                      4730,
                    ],
                    type: "BooleanLiteral",
                    value: "true",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 218,
                lnumStartIndex: 4714,
                range: [
                  4731,
                  4734,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 218,
                    lnumStartIndex: 4714,
                    range: [
                      4735,
                      4736,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 218,
                  lnumStartIndex: 4714,
                  range: [
                    4737,
                    4739,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 218,
                    lnumStartIndex: 4714,
                    range: [
                      4740,
                      4743,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 218,
              lnumStartIndex: 4714,
              range: [
                4714,
                4720,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          BinaryExpression {
            left: FunctionCallExpression {
              args: [
                NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 219,
                    lnumStartIndex: 4746,
                    range: [
                      4755,
                      4758,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 219,
                  lnumStartIndex: 4746,
                  range: [
                    4753,
                    4754,
                  ],
                  type: "Identifier",
                  value: "F",
                },
              },
            },
            operator: {
              isKeyword: false,
              lnum: 219,
              lnumStartIndex: 4746,
              range: [
                4760,
                4762,
              ],
              type: "DoubleEqual",
              value: "==",
            },
            right: NilLiteral {
              token: {
                isKeyword: true,
                lnum: 219,
                lnumStartIndex: 4746,
                range: [
                  4763,
                  4766,
                ],
                type: "NilLiteral",
                value: "nil",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 219,
              lnumStartIndex: 4746,
              range: [
                4746,
                4747,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 219,
              lnumStartIndex: 4746,
              range: [
                4749,
                4750,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 220,
                    lnumStartIndex: 4768,
                    range: [
                      4775,
                      4776,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 220,
                  lnumStartIndex: 4768,
                  range: [
                    4777,
                    4779,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: BooleanLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 220,
                    lnumStartIndex: 4768,
                    range: [
                      4780,
                      4784,
                    ],
                    type: "BooleanLiteral",
                    value: "true",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 220,
                lnumStartIndex: 4768,
                range: [
                  4785,
                  4788,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 220,
                    lnumStartIndex: 4768,
                    range: [
                      4789,
                      4790,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 220,
                  lnumStartIndex: 4768,
                  range: [
                    4791,
                    4793,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 220,
                    lnumStartIndex: 4768,
                    range: [
                      4794,
                      4797,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 220,
              lnumStartIndex: 4768,
              range: [
                4768,
                4774,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            ReturnStatement {
              arguments: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 227,
                    lnumStartIndex: 4969,
                    range: [
                      4991,
                      4992,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 227,
            lnumStartIndex: 4969,
            range: [
              4978,
              4980,
            ],
            type: "Identifier",
            value: "ID",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 227,
              lnumStartIndex: 4969,
              range: [
                4981,
                4982,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 230,
                      lnumStartIndex: 5015,
                      range: [
                        5027,
                        5028,
                      ],
                      type: "Identifier",
                      value: "t",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 230,
                      lnumStartIndex: 5015,
                      range: [
                        5029,
                        5030,
                      ],
                      type: "Identifier",
                      value: "n",
                    },
                  },
                  indexer: ".",
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 230,
                    lnumStartIndex: 5015,
                    range: [
                      5023,
                      5024,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
              ],
            },
            LocalStatement {
              init: [
                BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      FunctionCallExpression {
                        args: [
                          BinaryExpression {
                            left: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 231,
                                lnumStartIndex: 5031,
                                range: [
                                  5065,
                                  5066,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 231,
                              lnumStartIndex: 5031,
                              range: [
                                5067,
                                5068,
                              ],
                              type: "Divide",
                              value: "/",
                            },
                            right: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 231,
                                lnumStartIndex: 5031,
                                range: [
                                  5069,
                                  5070,
                                ],
                                type: "Identifier",
                                value: "c",
                              },
                            },
                          },
                        ],
                        base: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 231,
                              lnumStartIndex: 5031,
                              range: [
                                5054,
                                5058,
                              ],
                              type: "Identifier",
                              value: "math",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 231,
                              lnumStartIndex: 5031,
                              range: [
                                5059,
                                5064,
                              ],
                              type: "Identifier",
                              value: "floor",
                            },
                          },
                          indexer: ".",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 231,
                          lnumStartIndex: 5031,
                          range: [
                            5073,
                            5074,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 231,
                          lnumStartIndex: 5031,
                          range: [
                            5045,
                            5049,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 231,
                          lnumStartIndex: 5031,
                          range: [
                            5050,
                            5053,
                          ],
                          type: "Identifier",
                          value: "mod",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 231,
                    lnumStartIndex: 5031,
                    range: [
                      5076,
                      5077,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 231,
                      lnumStartIndex: 5031,
                      range: [
                        5078,
                        5079,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 231,
                    lnumStartIndex: 5031,
                    range: [
                      5039,
                      5042,
                    ],
                    type: "Identifier",
                    value: "res",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 232,
                      lnumStartIndex: 5080,
                      range: [
                        5086,
                        5087,
                      ],
                      type: "Identifier",
                      value: "c",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 232,
                    lnumStartIndex: 5080,
                    range: [
                      5088,
                      5089,
                    ],
                    type: "Star",
                    value: "*",
                  },
                  right: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 232,
                      lnumStartIndex: 5080,
                      range: [
                        5090,
                        5091,
                      ],
                      type: "Identifier",
                      value: "b",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 232,
                    lnumStartIndex: 5080,
                    range: [
                      5082,
                      5083,
                    ],
                    type: "Identifier",
                    value: "c",
                  },
                },
              ],
            },
            ReturnStatement {
              arguments: [
                IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 233,
                      lnumStartIndex: 5092,
                      range: [
                        5101,
                        5102,
                      ],
                      type: "Identifier",
                      value: "t",
                    },
                  },
                  index: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 233,
                      lnumStartIndex: 5092,
                      range: [
                        5103,
                        5106,
                      ],
                      type: "Identifier",
                      value: "res",
                    },
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 229,
            lnumStartIndex: 4998,
            range: [
              5007,
              5008,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 229,
              lnumStartIndex: 4998,
              range: [
                5009,
                5010,
              ],
              type: "Identifier",
              value: "t",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 229,
              lnumStartIndex: 4998,
              range: [
                5012,
                5013,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 236,
                    lnumStartIndex: 5113,
                    range: [
                      5127,
                      5140,
                    ],
                    type: "StringLiteral",
                    value: '" ( 1 < 2 ) "',
                  },
                },
              },
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 236,
                    lnumStartIndex: 5113,
                    range: [
                      5142,
                      5156,
                    ],
                    type: "StringLiteral",
                    value: '" ( 1 >= 2 ) "',
                  },
                },
              },
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 236,
                    lnumStartIndex: 5113,
                    range: [
                      5158,
                      5167,
                    ],
                    type: "StringLiteral",
                    value: '" F ( ) "',
                  },
                },
              },
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 236,
                    lnumStartIndex: 5113,
                    range: [
                      5169,
                      5177,
                    ],
                    type: "StringLiteral",
                    value: '"  nil "',
                  },
                },
              },
              TableKeyString {
                key: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 236,
                    lnumStartIndex: 5113,
                    range: [
                      5179,
                      5180,
                    ],
                    type: "Identifier",
                    value: "n",
                  },
                },
                value: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 236,
                    lnumStartIndex: 5113,
                    range: [
                      5183,
                      5184,
                    ],
                    type: "NumericLiteral",
                    value: "4",
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 236,
              lnumStartIndex: 5113,
              range: [
                5119,
                5122,
              ],
              type: "Identifier",
              value: "arg",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 238,
                    lnumStartIndex: 5188,
                    range: [
                      5201,
                      5208,
                    ],
                    type: "StringLiteral",
                    value: '" and "',
                  },
                },
              },
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 238,
                    lnumStartIndex: 5188,
                    range: [
                      5210,
                      5216,
                    ],
                    type: "StringLiteral",
                    value: '" or "',
                  },
                },
              },
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 238,
                    lnumStartIndex: 5188,
                    range: [
                      5218,
                      5224,
                    ],
                    type: "StringLiteral",
                    value: '" == "',
                  },
                },
              },
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 238,
                    lnumStartIndex: 5188,
                    range: [
                      5226,
                      5232,
                    ],
                    type: "StringLiteral",
                    value: '" ~= "',
                  },
                },
              },
              TableKeyString {
                key: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 238,
                    lnumStartIndex: 5188,
                    range: [
                      5234,
                      5235,
                    ],
                    type: "Identifier",
                    value: "n",
                  },
                },
                value: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 238,
                    lnumStartIndex: 5188,
                    range: [
                      5238,
                      5239,
                    ],
                    type: "NumericLiteral",
                    value: "4",
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 238,
              lnumStartIndex: 5188,
              range: [
                5194,
                5196,
              ],
              type: "Identifier",
              value: "op",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 240,
                    lnumStartIndex: 5243,
                    range: [
                      5257,
                      5260,
                    ],
                    type: "StringLiteral",
                    value: '" "',
                  },
                },
              },
              TableValue {
                value: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 240,
                    lnumStartIndex: 5243,
                    range: [
                      5262,
                      5269,
                    ],
                    type: "StringLiteral",
                    value: '" not "',
                  },
                },
              },
              TableKeyString {
                key: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 240,
                    lnumStartIndex: 5243,
                    range: [
                      5271,
                      5272,
                    ],
                    type: "Identifier",
                    value: "n",
                  },
                },
                value: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 240,
                    lnumStartIndex: 5243,
                    range: [
                      5275,
                      5276,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 240,
              lnumStartIndex: 5243,
              range: [
                5249,
                5252,
              ],
              type: "Identifier",
              value: "neg",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 242,
              lnumStartIndex: 5280,
              range: [
                5290,
                5291,
              ],
              type: "NumericLiteral",
              value: "0",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 242,
              lnumStartIndex: 5280,
              range: [
                5286,
                5287,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      RepeatStatement {
        block: Block {
          statements: [
            AssignmentStatement {
              init: [
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 244,
                    lnumStartIndex: 5299,
                    range: [
                      5305,
                      5306,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 244,
                    lnumStartIndex: 5299,
                    range: [
                      5301,
                      5302,
                    ],
                    type: "Identifier",
                    value: "c",
                  },
                },
              ],
            },
            LocalStatement {
              init: [
                BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: BinaryExpression {
                          left: BinaryExpression {
                            left: BinaryExpression {
                              left: BinaryExpression {
                                left: BinaryExpression {
                                  left: BinaryExpression {
                                    left: BinaryExpression {
                                      left: FunctionCallExpression {
                                        args: [
                                          Identifier {
                                            token: {
                                              isKeyword: false,
                                              lnum: 245,
                                              lnumStartIndex: 5307,
                                              range: [
                                                5321,
                                                5324,
                                              ],
                                              type: "Identifier",
                                              value: "neg",
                                            },
                                          },
                                          Identifier {
                                            token: {
                                              isKeyword: false,
                                              lnum: 245,
                                              lnumStartIndex: 5307,
                                              range: [
                                                5326,
                                                5327,
                                              ],
                                              type: "Identifier",
                                              value: "i",
                                            },
                                          },
                                        ],
                                        base: Identifier {
                                          token: {
                                            isKeyword: false,
                                            lnum: 245,
                                            lnumStartIndex: 5307,
                                            range: [
                                              5319,
                                              5320,
                                            ],
                                            type: "Identifier",
                                            value: "f",
                                          },
                                        },
                                      },
                                      operator: {
                                        isKeyword: false,
                                        lnum: 245,
                                        lnumStartIndex: 5307,
                                        range: [
                                          5329,
                                          5331,
                                        ],
                                        type: "DoubleDot",
                                        value: "..",
                                      },
                                      right: StringLiteral {
                                        token: {
                                          isKeyword: false,
                                          lnum: 245,
                                          lnumStartIndex: 5307,
                                          range: [
                                            5332,
                                            5337,
                                          ],
                                          type: "StringLiteral",
                                          value: "'ID('",
                                        },
                                      },
                                    },
                                    operator: {
                                      isKeyword: false,
                                      lnum: 245,
                                      lnumStartIndex: 5307,
                                      range: [
                                        5338,
                                        5340,
                                      ],
                                      type: "DoubleDot",
                                      value: "..",
                                    },
                                    right: FunctionCallExpression {
                                      args: [
                                        Identifier {
                                          token: {
                                            isKeyword: false,
                                            lnum: 245,
                                            lnumStartIndex: 5307,
                                            range: [
                                              5343,
                                              5346,
                                            ],
                                            type: "Identifier",
                                            value: "neg",
                                          },
                                        },
                                        Identifier {
                                          token: {
                                            isKeyword: false,
                                            lnum: 245,
                                            lnumStartIndex: 5307,
                                            range: [
                                              5348,
                                              5349,
                                            ],
                                            type: "Identifier",
                                            value: "i",
                                          },
                                        },
                                      ],
                                      base: Identifier {
                                        token: {
                                          isKeyword: false,
                                          lnum: 245,
                                          lnumStartIndex: 5307,
                                          range: [
                                            5341,
                                            5342,
                                          ],
                                          type: "Identifier",
                                          value: "f",
                                        },
                                      },
                                    },
                                  },
                                  operator: {
                                    isKeyword: false,
                                    lnum: 245,
                                    lnumStartIndex: 5307,
                                    range: [
                                      5351,
                                      5353,
                                    ],
                                    type: "DoubleDot",
                                    value: "..",
                                  },
                                  right: FunctionCallExpression {
                                    args: [
                                      Identifier {
                                        token: {
                                          isKeyword: false,
                                          lnum: 245,
                                          lnumStartIndex: 5307,
                                          range: [
                                            5356,
                                            5359,
                                          ],
                                          type: "Identifier",
                                          value: "arg",
                                        },
                                      },
                                      Identifier {
                                        token: {
                                          isKeyword: false,
                                          lnum: 245,
                                          lnumStartIndex: 5307,
                                          range: [
                                            5361,
                                            5362,
                                          ],
                                          type: "Identifier",
                                          value: "i",
                                        },
                                      },
                                    ],
                                    base: Identifier {
                                      token: {
                                        isKeyword: false,
                                        lnum: 245,
                                        lnumStartIndex: 5307,
                                        range: [
                                          5354,
                                          5355,
                                        ],
                                        type: "Identifier",
                                        value: "f",
                                      },
                                    },
                                  },
                                },
                                operator: {
                                  isKeyword: false,
                                  lnum: 245,
                                  lnumStartIndex: 5307,
                                  range: [
                                    5364,
                                    5366,
                                  ],
                                  type: "DoubleDot",
                                  value: "..",
                                },
                                right: FunctionCallExpression {
                                  args: [
                                    Identifier {
                                      token: {
                                        isKeyword: false,
                                        lnum: 245,
                                        lnumStartIndex: 5307,
                                        range: [
                                          5369,
                                          5371,
                                        ],
                                        type: "Identifier",
                                        value: "op",
                                      },
                                    },
                                    Identifier {
                                      token: {
                                        isKeyword: false,
                                        lnum: 245,
                                        lnumStartIndex: 5307,
                                        range: [
                                          5373,
                                          5374,
                                        ],
                                        type: "Identifier",
                                        value: "i",
                                      },
                                    },
                                  ],
                                  base: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 245,
                                      lnumStartIndex: 5307,
                                      range: [
                                        5367,
                                        5368,
                                      ],
                                      type: "Identifier",
                                      value: "f",
                                    },
                                  },
                                },
                              },
                              operator: {
                                isKeyword: false,
                                lnum: 245,
                                lnumStartIndex: 5307,
                                range: [
                                  5376,
                                  5378,
                                ],
                                type: "DoubleDot",
                                value: "..",
                              },
                              right: FunctionCallExpression {
                                args: [
                                  Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 246,
                                      lnumStartIndex: 5379,
                                      range: [
                                        5387,
                                        5390,
                                      ],
                                      type: "Identifier",
                                      value: "neg",
                                    },
                                  },
                                  Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 246,
                                      lnumStartIndex: 5379,
                                      range: [
                                        5392,
                                        5393,
                                      ],
                                      type: "Identifier",
                                      value: "i",
                                    },
                                  },
                                ],
                                base: Identifier {
                                  token: {
                                    isKeyword: false,
                                    lnum: 246,
                                    lnumStartIndex: 5379,
                                    range: [
                                      5385,
                                      5386,
                                    ],
                                    type: "Identifier",
                                    value: "f",
                                  },
                                },
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 246,
                              lnumStartIndex: 5379,
                              range: [
                                5395,
                                5397,
                              ],
                              type: "DoubleDot",
                              value: "..",
                            },
                            right: StringLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 246,
                                lnumStartIndex: 5379,
                                range: [
                                  5398,
                                  5403,
                                ],
                                type: "StringLiteral",
                                value: "'ID('",
                              },
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 246,
                            lnumStartIndex: 5379,
                            range: [
                              5404,
                              5406,
                            ],
                            type: "DoubleDot",
                            value: "..",
                          },
                          right: FunctionCallExpression {
                            args: [
                              Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 246,
                                  lnumStartIndex: 5379,
                                  range: [
                                    5409,
                                    5412,
                                  ],
                                  type: "Identifier",
                                  value: "arg",
                                },
                              },
                              Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 246,
                                  lnumStartIndex: 5379,
                                  range: [
                                    5414,
                                    5415,
                                  ],
                                  type: "Identifier",
                                  value: "i",
                                },
                              },
                            ],
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 246,
                                lnumStartIndex: 5379,
                                range: [
                                  5407,
                                  5408,
                                ],
                                type: "Identifier",
                                value: "f",
                              },
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 246,
                          lnumStartIndex: 5379,
                          range: [
                            5417,
                            5419,
                          ],
                          type: "DoubleDot",
                          value: "..",
                        },
                        right: FunctionCallExpression {
                          args: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 246,
                                lnumStartIndex: 5379,
                                range: [
                                  5422,
                                  5424,
                                ],
                                type: "Identifier",
                                value: "op",
                              },
                            },
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 246,
                                lnumStartIndex: 5379,
                                range: [
                                  5426,
                                  5427,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          ],
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 246,
                              lnumStartIndex: 5379,
                              range: [
                                5420,
                                5421,
                              ],
                              type: "Identifier",
                              value: "f",
                            },
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 246,
                        lnumStartIndex: 5379,
                        range: [
                          5429,
                          5431,
                        ],
                        type: "DoubleDot",
                        value: "..",
                      },
                      right: FunctionCallExpression {
                        args: [
                          Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 246,
                              lnumStartIndex: 5379,
                              range: [
                                5434,
                                5437,
                              ],
                              type: "Identifier",
                              value: "neg",
                            },
                          },
                          Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 246,
                              lnumStartIndex: 5379,
                              range: [
                                5439,
                                5440,
                              ],
                              type: "Identifier",
                              value: "i",
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 246,
                            lnumStartIndex: 5379,
                            range: [
                              5432,
                              5433,
                            ],
                            type: "Identifier",
                            value: "f",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 246,
                      lnumStartIndex: 5379,
                      range: [
                        5442,
                        5444,
                      ],
                      type: "DoubleDot",
                      value: "..",
                    },
                    right: FunctionCallExpression {
                      args: [
                        Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 246,
                            lnumStartIndex: 5379,
                            range: [
                              5447,
                              5450,
                            ],
                            type: "Identifier",
                            value: "arg",
                          },
                        },
                        Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 246,
                            lnumStartIndex: 5379,
                            range: [
                              5452,
                              5453,
                            ],
                            type: "Identifier",
                            value: "i",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 246,
                          lnumStartIndex: 5379,
                          range: [
                            5445,
                            5446,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 246,
                    lnumStartIndex: 5379,
                    range: [
                      5455,
                      5457,
                    ],
                    type: "DoubleDot",
                    value: "..",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 246,
                      lnumStartIndex: 5379,
                      range: [
                        5458,
                        5462,
                      ],
                      type: "StringLiteral",
                      value: "'))'",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 245,
                    lnumStartIndex: 5307,
                    range: [
                      5315,
                      5316,
                    ],
                    type: "Identifier",
                    value: "s",
                  },
                },
              ],
            },
            LocalStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 247,
                        lnumStartIndex: 5463,
                        range: [
                          5488,
                          5489,
                        ],
                        type: "Identifier",
                        value: "s",
                      },
                    },
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 247,
                        lnumStartIndex: 5463,
                        range: [
                          5491,
                          5495,
                        ],
                        type: "StringLiteral",
                        value: "'ID'",
                      },
                    },
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 247,
                        lnumStartIndex: 5463,
                        range: [
                          5497,
                          5499,
                        ],
                        type: "StringLiteral",
                        value: "''",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 247,
                        lnumStartIndex: 5463,
                        range: [
                          5476,
                          5482,
                        ],
                        type: "Identifier",
                        value: "string",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 247,
                        lnumStartIndex: 5463,
                        range: [
                          5483,
                          5487,
                        ],
                        type: "Identifier",
                        value: "gsub",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 247,
                    lnumStartIndex: 5463,
                    range: [
                      5471,
                      5473,
                    ],
                    type: "Identifier",
                    value: "s1",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 248,
                    lnumStartIndex: 5501,
                    range: [
                      5524,
                      5527,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 248,
                    lnumStartIndex: 5501,
                    range: [
                      5503,
                      5504,
                    ],
                    type: "Identifier",
                    value: "K",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 248,
                    lnumStartIndex: 5501,
                    range: [
                      5506,
                      5507,
                    ],
                    type: "Identifier",
                    value: "X",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 248,
                    lnumStartIndex: 5501,
                    range: [
                      5509,
                      5511,
                    ],
                    type: "Identifier",
                    value: "NX",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 248,
                    lnumStartIndex: 5501,
                    range: [
                      5513,
                      5516,
                    ],
                    type: "Identifier",
                    value: "WX1",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 248,
                    lnumStartIndex: 5501,
                    range: [
                      5518,
                      5521,
                    ],
                    type: "Identifier",
                    value: "WX2",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 249,
                        lnumStartIndex: 5528,
                        range: [
                          5548,
                          5843,
                        ],
                        type: "StringLiteral",
                        value: "[[
      local a = %s
      local b = not %s
      K = b
      local xxx; 
      if %s then X = a  else X = b end
      if %s then NX = b  else NX = a end
      while %s do WX1 = a; break end
      while %s do WX2 = a; break end
      repeat if (%s) then break end; assert(b)  until not(%s)
  ]]",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5845,
                          5847,
                        ],
                        type: "Identifier",
                        value: "s1",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5849,
                          5850,
                        ],
                        type: "Identifier",
                        value: "s",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5852,
                          5854,
                        ],
                        type: "Identifier",
                        value: "s1",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5856,
                          5857,
                        ],
                        type: "Identifier",
                        value: "s",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5859,
                          5861,
                        ],
                        type: "Identifier",
                        value: "s1",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5863,
                          5864,
                        ],
                        type: "Identifier",
                        value: "s",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5866,
                          5868,
                        ],
                        type: "Identifier",
                        value: "s1",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5870,
                          5871,
                        ],
                        type: "Identifier",
                        value: "s",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 259,
                        lnumStartIndex: 5839,
                        range: [
                          5873,
                          5874,
                        ],
                        type: "Identifier",
                        value: "s",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 249,
                        lnumStartIndex: 5528,
                        range: [
                          5534,
                          5540,
                        ],
                        type: "Identifier",
                        value: "string",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 249,
                        lnumStartIndex: 5528,
                        range: [
                          5541,
                          5547,
                        ],
                        type: "Identifier",
                        value: "format",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 249,
                    lnumStartIndex: 5528,
                    range: [
                      5530,
                      5531,
                    ],
                    type: "Identifier",
                    value: "s",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                ],
                base: FunctionCallExpression {
                  args: [
                    FunctionCallExpression {
                      args: [
                        Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 260,
                            lnumStartIndex: 5876,
                            range: [
                              5896,
                              5897,
                            ],
                            type: "Identifier",
                            value: "s",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 260,
                          lnumStartIndex: 5876,
                          range: [
                            5885,
                            5895,
                          ],
                          type: "Identifier",
                          value: "loadstring",
                        },
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 260,
                      lnumStartIndex: 5876,
                      range: [
                        5878,
                        5884,
                      ],
                      type: "Identifier",
                      value: "assert",
                    },
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 261,
                            lnumStartIndex: 5902,
                            range: [
                              5911,
                              5912,
                            ],
                            type: "Identifier",
                            value: "X",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 261,
                          lnumStartIndex: 5902,
                          range: [
                            5913,
                            5916,
                          ],
                          type: "And",
                          value: "and",
                        },
                        right: UnaryExpression {
                          argument: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 261,
                              lnumStartIndex: 5902,
                              range: [
                                5921,
                                5923,
                              ],
                              type: "Identifier",
                              value: "NX",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 261,
                            lnumStartIndex: 5902,
                            range: [
                              5917,
                              5920,
                            ],
                            type: "Not",
                            value: "not",
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 261,
                        lnumStartIndex: 5902,
                        range: [
                          5924,
                          5927,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: UnaryExpression {
                          argument: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 261,
                              lnumStartIndex: 5902,
                              range: [
                                5932,
                                5935,
                              ],
                              type: "Identifier",
                              value: "WX1",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 261,
                            lnumStartIndex: 5902,
                            range: [
                              5928,
                              5931,
                            ],
                            type: "Not",
                            value: "not",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 261,
                          lnumStartIndex: 5902,
                          range: [
                            5936,
                            5938,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 261,
                            lnumStartIndex: 5902,
                            range: [
                              5939,
                              5940,
                            ],
                            type: "Identifier",
                            value: "K",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 261,
                      lnumStartIndex: 5902,
                      range: [
                        5941,
                        5944,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: UnaryExpression {
                        argument: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 261,
                            lnumStartIndex: 5902,
                            range: [
                              5949,
                              5952,
                            ],
                            type: "Identifier",
                            value: "WX2",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 261,
                          lnumStartIndex: 5902,
                          range: [
                            5945,
                            5948,
                          ],
                          type: "Not",
                          value: "not",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 261,
                        lnumStartIndex: 5902,
                        range: [
                          5953,
                          5955,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 261,
                          lnumStartIndex: 5902,
                          range: [
                            5956,
                            5957,
                          ],
                          type: "Identifier",
                          value: "K",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 261,
                    lnumStartIndex: 5902,
                    range: [
                      5904,
                      5910,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            IfStatement {
              elseBlock: null,
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  FunctionCallStatement {
                    expression: FunctionCallExpression {
                      args: [
                        StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 262,
                            lnumStartIndex: 5959,
                            range: [
                              5998,
                              6001,
                            ],
                            type: "StringLiteral",
                            value: "'+'",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 262,
                          lnumStartIndex: 5959,
                          range: [
                            5992,
                            5997,
                          ],
                          type: "Identifier",
                          value: "print",
                        },
                      },
                    },
                  },
                ],
              },
              ifCondition: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 262,
                        lnumStartIndex: 5959,
                        range: [
                          5973,
                          5974,
                        ],
                        type: "Identifier",
                        value: "i",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 262,
                        lnumStartIndex: 5959,
                        range: [
                          5976,
                          5980,
                        ],
                        type: "NumericLiteral",
                        value: "4000",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 262,
                        lnumStartIndex: 5959,
                        range: [
                          5964,
                          5968,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 262,
                        lnumStartIndex: 5959,
                        range: [
                          5969,
                          5972,
                        ],
                        type: "Identifier",
                        value: "mod",
                      },
                    },
                    indexer: ".",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 262,
                  lnumStartIndex: 5959,
                  range: [
                    5982,
                    5984,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 262,
                    lnumStartIndex: 5959,
                    range: [
                      5985,
                      5986,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              },
            },
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 263,
                      lnumStartIndex: 6007,
                      range: [
                        6013,
                        6014,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 263,
                    lnumStartIndex: 6007,
                    range: [
                      6015,
                      6016,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 263,
                      lnumStartIndex: 6007,
                      range: [
                        6017,
                        6018,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 263,
                    lnumStartIndex: 6007,
                    range: [
                      6009,
                      6010,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
              ],
            },
          ],
        },
        condition: BinaryExpression {
          left: Identifier {
            token: {
              isKeyword: false,
              lnum: 264,
              lnumStartIndex: 6019,
              range: [
                6025,
                6026,
              ],
              type: "Identifier",
              value: "i",
            },
          },
          operator: {
            isKeyword: false,
            lnum: 264,
            lnumStartIndex: 6019,
            range: [
              6027,
              6029,
            ],
            type: "DoubleEqual",
            value: "==",
          },
          right: Identifier {
            token: {
              isKeyword: false,
              lnum: 264,
              lnumStartIndex: 6019,
              range: [
                6030,
                6031,
              ],
              type: "Identifier",
              value: "c",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 266,
                lnumStartIndex: 6033,
                range: [
                  6039,
                  6043,
                ],
                type: "StringLiteral",
                value: "'OK'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 266,
              lnumStartIndex: 6033,
              range: [
                6033,
                6038,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
    ],
  },
}
`;
