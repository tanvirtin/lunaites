export const snapshot = {};

snapshot[`5.1_vararg 1`] = `
Chunk {
  block: Block {
    statements: [
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 1,
                lnumStartIndex: 0,
                range: [
                  6,
                  22,
                ],
                type: "StringLiteral",
                value: "'testing vararg'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 1,
              lnumStartIndex: 0,
              range: [
                0,
                5,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          NilLiteral {
            token: {
              isKeyword: true,
              lnum: 3,
              lnumStartIndex: 25,
              range: [
                34,
                37,
              ],
              type: "NilLiteral",
              value: "nil",
            },
          },
        ],
        variables: [
          MemberExpression {
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 3,
                lnumStartIndex: 25,
                range: [
                  25,
                  27,
                ],
                type: "Identifier",
                value: "_G",
              },
            },
            identifier: Identifier {
              token: {
                isKeyword: false,
                lnum: 3,
                lnumStartIndex: 25,
                range: [
                  28,
                  31,
                ],
                type: "Identifier",
                value: "arg",
              },
            },
            indexer: ".",
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 6,
                            lnumStartIndex: 58,
                            range: [
                              72,
                              75,
                            ],
                            type: "Identifier",
                            value: "arg",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 6,
                          lnumStartIndex: 58,
                          range: [
                            67,
                            71,
                          ],
                          type: "Identifier",
                          value: "type",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 6,
                      lnumStartIndex: 58,
                      range: [
                        77,
                        79,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 6,
                        lnumStartIndex: 58,
                        range: [
                          80,
                          87,
                        ],
                        type: "StringLiteral",
                        value: "'table'",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 6,
                    lnumStartIndex: 58,
                    range: [
                      60,
                      66,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 7,
                              lnumStartIndex: 89,
                              range: [
                                103,
                                106,
                              ],
                              type: "Identifier",
                              value: "arg",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 7,
                              lnumStartIndex: 89,
                              range: [
                                107,
                                108,
                              ],
                              type: "Identifier",
                              value: "n",
                            },
                          },
                          indexer: ".",
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 7,
                          lnumStartIndex: 89,
                          range: [
                            98,
                            102,
                          ],
                          type: "Identifier",
                          value: "type",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 7,
                      lnumStartIndex: 89,
                      range: [
                        110,
                        112,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 7,
                        lnumStartIndex: 89,
                        range: [
                          113,
                          121,
                        ],
                        type: "StringLiteral",
                        value: "'number'",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 7,
                    lnumStartIndex: 89,
                    range: [
                      91,
                      97,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            ForNumericStatement {
              block: Block {
                statements: [
                  FunctionCallStatement {
                    expression: FunctionCallExpression {
                      args: [
                        BinaryExpression {
                          left: IndexExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 8,
                                lnumStartIndex: 123,
                                range: [
                                  152,
                                  153,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                            index: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 8,
                                lnumStartIndex: 123,
                                range: [
                                  154,
                                  155,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 8,
                            lnumStartIndex: 123,
                            range: [
                              157,
                              159,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: IndexExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 8,
                                lnumStartIndex: 123,
                                range: [
                                  160,
                                  163,
                                ],
                                type: "Identifier",
                                value: "arg",
                              },
                            },
                            index: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 8,
                                lnumStartIndex: 123,
                                range: [
                                  164,
                                  165,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 123,
                          range: [
                            145,
                            151,
                          ],
                          type: "Identifier",
                          value: "assert",
                        },
                      },
                    },
                  },
                ],
              },
              end: MemberExpression {
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 8,
                    lnumStartIndex: 123,
                    range: [
                      136,
                      139,
                    ],
                    type: "Identifier",
                    value: "arg",
                  },
                },
                identifier: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 8,
                    lnumStartIndex: 123,
                    range: [
                      140,
                      141,
                    ],
                    type: "Identifier",
                    value: "n",
                  },
                },
                indexer: ".",
              },
              start: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 8,
                  lnumStartIndex: 123,
                  range: [
                    133,
                    134,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
              step: undefined,
              variable: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 8,
                  lnumStartIndex: 123,
                  range: [
                    129,
                    130,
                  ],
                  type: "Identifier",
                  value: "i",
                },
              },
            },
            ReturnStatement {
              arguments: [
                MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 9,
                      lnumStartIndex: 172,
                      range: [
                        181,
                        184,
                      ],
                      type: "Identifier",
                      value: "arg",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 9,
                      lnumStartIndex: 172,
                      range: [
                        185,
                        186,
                      ],
                      type: "Identifier",
                      value: "n",
                    },
                  },
                  indexer: ".",
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 5,
            lnumStartIndex: 39,
            range: [
              48,
              49,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 5,
              lnumStartIndex: 39,
              range: [
                50,
                51,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 5,
              lnumStartIndex: 39,
              range: [
                53,
                56,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 13,
                        lnumStartIndex: 210,
                        range: [
                          219,
                          222,
                        ],
                        type: "Identifier",
                        value: "arg",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 13,
                      lnumStartIndex: 210,
                      range: [
                        223,
                        225,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 13,
                        lnumStartIndex: 210,
                        range: [
                          226,
                          229,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 13,
                    lnumStartIndex: 210,
                    range: [
                      212,
                      218,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            LocalStatement {
              init: [
                TableConstructor {
                  fieldlist: [
                    TableValue {
                      value: VarargLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 14,
                          lnumStartIndex: 231,
                          range: [
                            245,
                            248,
                          ],
                          type: "VarargLiteral",
                          value: "...",
                        },
                      },
                    },
                  ],
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 14,
                    lnumStartIndex: 231,
                    range: [
                      239,
                      240,
                    ],
                    type: "Identifier",
                    value: "x",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 15,
                        lnumStartIndex: 252,
                        range: [
                          271,
                          272,
                        ],
                        type: "Identifier",
                        value: "x",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 15,
                        lnumStartIndex: 252,
                        range: [
                          260,
                          265,
                        ],
                        type: "Identifier",
                        value: "table",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 15,
                        lnumStartIndex: 252,
                        range: [
                          266,
                          270,
                        ],
                        type: "Identifier",
                        value: "getn",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 15,
                      lnumStartIndex: 252,
                      range: [
                        254,
                        255,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 15,
                      lnumStartIndex: 252,
                      range: [
                        256,
                        257,
                      ],
                      type: "Identifier",
                      value: "n",
                    },
                  },
                  indexer: ".",
                },
              ],
            },
            LocalStatement {
              init: [
                GroupingExpression {
                  expression: BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 16,
                              lnumStartIndex: 274,
                              range: [
                                289,
                                290,
                              ],
                              type: "Identifier",
                              value: "x",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 16,
                              lnumStartIndex: 274,
                              range: [
                                291,
                                292,
                              ],
                              type: "Identifier",
                              value: "n",
                            },
                          },
                          indexer: ".",
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 16,
                          lnumStartIndex: 274,
                          range: [
                            293,
                            295,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 16,
                            lnumStartIndex: 274,
                            range: [
                              296,
                              297,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 16,
                        lnumStartIndex: 274,
                        range: [
                          298,
                          301,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: IndexExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 16,
                              lnumStartIndex: 274,
                              range: [
                                302,
                                303,
                              ],
                              type: "Identifier",
                              value: "x",
                            },
                          },
                          index: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 16,
                              lnumStartIndex: 274,
                              range: [
                                304,
                                305,
                              ],
                              type: "NumericLiteral",
                              value: "1",
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 16,
                          lnumStartIndex: 274,
                          range: [
                            307,
                            309,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 16,
                            lnumStartIndex: 274,
                            range: [
                              310,
                              311,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 16,
                      lnumStartIndex: 274,
                      range: [
                        312,
                        315,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 16,
                            lnumStartIndex: 274,
                            range: [
                              316,
                              317,
                            ],
                            type: "Identifier",
                            value: "x",
                          },
                        },
                        index: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 16,
                            lnumStartIndex: 274,
                            range: [
                              318,
                              319,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 16,
                        lnumStartIndex: 274,
                        range: [
                          321,
                          323,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 16,
                          lnumStartIndex: 274,
                          range: [
                            324,
                            325,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 16,
                    lnumStartIndex: 274,
                    range: [
                      282,
                      285,
                    ],
                    type: "Identifier",
                    value: "res",
                  },
                },
              ],
            },
            IfStatement {
              elseBlock: null,
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  AssignmentStatement {
                    init: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 17,
                          lnumStartIndex: 327,
                          range: [
                            347,
                            349,
                          ],
                          type: "NumericLiteral",
                          value: "55",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 17,
                          lnumStartIndex: 327,
                          range: [
                            341,
                            344,
                          ],
                          type: "Identifier",
                          value: "res",
                        },
                      },
                    ],
                  },
                ],
              },
              ifCondition: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 17,
                  lnumStartIndex: 327,
                  range: [
                    332,
                    335,
                  ],
                  type: "Identifier",
                  value: "res",
                },
              },
            },
            ReturnStatement {
              arguments: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 18,
                    lnumStartIndex: 354,
                    range: [
                      363,
                      366,
                    ],
                    type: "Identifier",
                    value: "res",
                  },
                },
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 18,
                    lnumStartIndex: 354,
                    range: [
                      368,
                      369,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 12,
            lnumStartIndex: 192,
            range: [
              201,
              204,
            ],
            type: "Identifier",
            value: "c12",
          },
        },
        parlist: [
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 12,
              lnumStartIndex: 192,
              range: [
                205,
                208,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            ReturnStatement {
              arguments: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 21,
                    lnumStartIndex: 375,
                    range: [
                      403,
                      406,
                    ],
                    type: "Identifier",
                    value: "arg",
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 21,
            lnumStartIndex: 375,
            range: [
              384,
              390,
            ],
            type: "Identifier",
            value: "vararg",
          },
        },
        parlist: [
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 21,
              lnumStartIndex: 375,
              range: [
                391,
                394,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          FunctionExpression {
            block: Block {
              statements: [
                ReturnStatement {
                  arguments: [
                    FunctionCallExpression {
                      args: [
                        FunctionCallExpression {
                          args: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 23,
                                lnumStartIndex: 412,
                                range: [
                                  459,
                                  463,
                                ],
                                type: "Identifier",
                                value: "args",
                              },
                            },
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 23,
                                lnumStartIndex: 412,
                                range: [
                                  465,
                                  466,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                            MemberExpression {
                              base: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 23,
                                  lnumStartIndex: 412,
                                  range: [
                                    468,
                                    472,
                                  ],
                                  type: "Identifier",
                                  value: "args",
                                },
                              },
                              identifier: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 23,
                                  lnumStartIndex: 412,
                                  range: [
                                    473,
                                    474,
                                  ],
                                  type: "Identifier",
                                  value: "n",
                                },
                              },
                              indexer: ".",
                            },
                          ],
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 23,
                              lnumStartIndex: 412,
                              range: [
                                452,
                                458,
                              ],
                              type: "Identifier",
                              value: "unpack",
                            },
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 23,
                          lnumStartIndex: 412,
                          range: [
                            450,
                            451,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                    },
                  ],
                },
              ],
            },
            parlist: [
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 23,
                  lnumStartIndex: 412,
                  range: [
                    434,
                    435,
                  ],
                  type: "Identifier",
                  value: "f",
                },
              },
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 23,
                  lnumStartIndex: 412,
                  range: [
                    437,
                    441,
                  ],
                  type: "Identifier",
                  value: "args",
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 23,
              lnumStartIndex: 412,
              range: [
                418,
                422,
              ],
              type: "Identifier",
              value: "call",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 25,
                    lnumStartIndex: 482,
                    range: [
                      489,
                      490,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 25,
                lnumStartIndex: 482,
                range: [
                  493,
                  495,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 25,
                  lnumStartIndex: 482,
                  range: [
                    496,
                    497,
                  ],
                  type: "NumericLiteral",
                  value: "0",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 25,
              lnumStartIndex: 482,
              range: [
                482,
                488,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  TableConstructor {
                    fieldlist: [
                      TableValue {
                        value: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 26,
                            lnumStartIndex: 499,
                            range: [
                              510,
                              511,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      },
                      TableValue {
                        value: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 26,
                            lnumStartIndex: 499,
                            range: [
                              513,
                              514,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                      TableValue {
                        value: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 26,
                            lnumStartIndex: 499,
                            range: [
                              516,
                              517,
                            ],
                            type: "NumericLiteral",
                            value: "3",
                          },
                        },
                      },
                    ],
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 26,
                      lnumStartIndex: 499,
                      range: [
                        521,
                        522,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 26,
                      lnumStartIndex: 499,
                      range: [
                        524,
                        525,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 26,
                      lnumStartIndex: 499,
                      range: [
                        527,
                        528,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 26,
                    lnumStartIndex: 499,
                    range: [
                      506,
                      507,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 26,
                lnumStartIndex: 499,
                range: [
                  530,
                  532,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 26,
                  lnumStartIndex: 499,
                  range: [
                    533,
                    534,
                  ],
                  type: "NumericLiteral",
                  value: "3",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 26,
              lnumStartIndex: 499,
              range: [
                499,
                505,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  TableConstructor {
                    fieldlist: [
                      TableValue {
                        value: StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 27,
                            lnumStartIndex: 536,
                            range: [
                              547,
                              552,
                            ],
                            type: "StringLiteral",
                            value: '"alo"',
                          },
                        },
                      },
                      TableValue {
                        value: NilLiteral {
                          token: {
                            isKeyword: true,
                            lnum: 27,
                            lnumStartIndex: 536,
                            range: [
                              554,
                              557,
                            ],
                            type: "NilLiteral",
                            value: "nil",
                          },
                        },
                      },
                      TableValue {
                        value: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 27,
                            lnumStartIndex: 536,
                            range: [
                              559,
                              561,
                            ],
                            type: "NumericLiteral",
                            value: "45",
                          },
                        },
                      },
                      TableValue {
                        value: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 27,
                            lnumStartIndex: 536,
                            range: [
                              563,
                              564,
                            ],
                            type: "Identifier",
                            value: "f",
                          },
                        },
                      },
                      TableValue {
                        value: NilLiteral {
                          token: {
                            isKeyword: true,
                            lnum: 27,
                            lnumStartIndex: 536,
                            range: [
                              566,
                              569,
                            ],
                            type: "NilLiteral",
                            value: "nil",
                          },
                        },
                      },
                    ],
                  },
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 27,
                      lnumStartIndex: 536,
                      range: [
                        573,
                        578,
                      ],
                      type: "StringLiteral",
                      value: '"alo"',
                    },
                  },
                  NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 27,
                      lnumStartIndex: 536,
                      range: [
                        580,
                        583,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 27,
                      lnumStartIndex: 536,
                      range: [
                        585,
                        587,
                      ],
                      type: "NumericLiteral",
                      value: "45",
                    },
                  },
                  Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 27,
                      lnumStartIndex: 536,
                      range: [
                        589,
                        590,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                  NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 27,
                      lnumStartIndex: 536,
                      range: [
                        592,
                        595,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 27,
                    lnumStartIndex: 536,
                    range: [
                      543,
                      544,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 27,
                lnumStartIndex: 536,
                range: [
                  597,
                  599,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 27,
                  lnumStartIndex: 536,
                  range: [
                    600,
                    601,
                  ],
                  type: "NumericLiteral",
                  value: "5",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 27,
              lnumStartIndex: 536,
              range: [
                536,
                542,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 29,
                      lnumStartIndex: 604,
                      range: [
                        615,
                        616,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 29,
                      lnumStartIndex: 604,
                      range: [
                        618,
                        619,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 29,
                    lnumStartIndex: 604,
                    range: [
                      611,
                      614,
                    ],
                    type: "Identifier",
                    value: "c12",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 29,
                lnumStartIndex: 604,
                range: [
                  621,
                  623,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 29,
                  lnumStartIndex: 604,
                  range: [
                    624,
                    626,
                  ],
                  type: "NumericLiteral",
                  value: "55",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 29,
              lnumStartIndex: 604,
              range: [
                604,
                610,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              FunctionCallExpression {
                args: [
                  Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 30,
                      lnumStartIndex: 628,
                      range: [
                        647,
                        650,
                      ],
                      type: "Identifier",
                      value: "c12",
                    },
                  },
                  TableConstructor {
                    fieldlist: [
                      TableValue {
                        value: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 30,
                            lnumStartIndex: 628,
                            range: [
                              654,
                              655,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      },
                      TableValue {
                        value: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 30,
                            lnumStartIndex: 628,
                            range: [
                              657,
                              658,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                    ],
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 30,
                    lnumStartIndex: 628,
                    range: [
                      642,
                      646,
                    ],
                    type: "Identifier",
                    value: "call",
                  },
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 30,
                lnumStartIndex: 628,
                range: [
                  635,
                  641,
                ],
                type: "Identifier",
                value: "assert",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 30,
              lnumStartIndex: 628,
              range: [
                628,
                629,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 30,
              lnumStartIndex: 628,
              range: [
                631,
                632,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 31,
                    lnumStartIndex: 663,
                    range: [
                      670,
                      671,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 31,
                  lnumStartIndex: 663,
                  range: [
                    672,
                    674,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 31,
                    lnumStartIndex: 663,
                    range: [
                      675,
                      677,
                    ],
                    type: "NumericLiteral",
                    value: "55",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 31,
                lnumStartIndex: 663,
                range: [
                  678,
                  681,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 31,
                    lnumStartIndex: 663,
                    range: [
                      682,
                      683,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 31,
                  lnumStartIndex: 663,
                  range: [
                    684,
                    686,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 31,
                    lnumStartIndex: 663,
                    range: [
                      687,
                      688,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 31,
              lnumStartIndex: 663,
              range: [
                663,
                669,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 32,
                  lnumStartIndex: 690,
                  range: [
                    699,
                    702,
                  ],
                  type: "Identifier",
                  value: "c12",
                },
              },
              TableConstructor {
                fieldlist: [
                  TableValue {
                    value: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 32,
                        lnumStartIndex: 690,
                        range: [
                          706,
                          707,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  TableValue {
                    value: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 32,
                        lnumStartIndex: 690,
                        range: [
                          709,
                          710,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  TableKeyString {
                    key: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 32,
                        lnumStartIndex: 690,
                        range: [
                          712,
                          713,
                        ],
                        type: "Identifier",
                        value: "n",
                      },
                    },
                    value: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 32,
                        lnumStartIndex: 690,
                        range: [
                          716,
                          717,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                ],
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 32,
                lnumStartIndex: 690,
                range: [
                  694,
                  698,
                ],
                type: "Identifier",
                value: "call",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 32,
              lnumStartIndex: 690,
              range: [
                690,
                691,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 33,
                    lnumStartIndex: 721,
                    range: [
                      728,
                      729,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 33,
                  lnumStartIndex: 721,
                  range: [
                    730,
                    732,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 33,
                    lnumStartIndex: 721,
                    range: [
                      733,
                      735,
                    ],
                    type: "NumericLiteral",
                    value: "55",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 33,
                lnumStartIndex: 721,
                range: [
                  736,
                  739,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 33,
                    lnumStartIndex: 721,
                    range: [
                      740,
                      741,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 33,
                  lnumStartIndex: 721,
                  range: [
                    742,
                    744,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 33,
                    lnumStartIndex: 721,
                    range: [
                      745,
                      746,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 33,
              lnumStartIndex: 721,
              range: [
                721,
                727,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 34,
                  lnumStartIndex: 748,
                  range: [
                    757,
                    760,
                  ],
                  type: "Identifier",
                  value: "c12",
                },
              },
              TableConstructor {
                fieldlist: [
                  TableValue {
                    value: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 34,
                        lnumStartIndex: 748,
                        range: [
                          764,
                          765,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  TableValue {
                    value: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 34,
                        lnumStartIndex: 748,
                        range: [
                          767,
                          768,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  TableKeyString {
                    key: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 34,
                        lnumStartIndex: 748,
                        range: [
                          770,
                          771,
                        ],
                        type: "Identifier",
                        value: "n",
                      },
                    },
                    value: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 34,
                        lnumStartIndex: 748,
                        range: [
                          774,
                          775,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                ],
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 34,
                lnumStartIndex: 748,
                range: [
                  752,
                  756,
                ],
                type: "Identifier",
                value: "call",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 34,
              lnumStartIndex: 748,
              range: [
                748,
                749,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            UnaryExpression {
              argument: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 35,
                  lnumStartIndex: 779,
                  range: [
                    790,
                    791,
                  ],
                  type: "Identifier",
                  value: "a",
                },
              },
              operator: {
                isKeyword: true,
                lnum: 35,
                lnumStartIndex: 779,
                range: [
                  786,
                  789,
                ],
                type: "Not",
                value: "not",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 35,
              lnumStartIndex: 779,
              range: [
                779,
                785,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 36,
                      lnumStartIndex: 793,
                      range: [
                        804,
                        805,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 36,
                      lnumStartIndex: 793,
                      range: [
                        807,
                        808,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 36,
                      lnumStartIndex: 793,
                      range: [
                        810,
                        811,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 36,
                    lnumStartIndex: 793,
                    range: [
                      800,
                      803,
                    ],
                    type: "Identifier",
                    value: "c12",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 36,
                lnumStartIndex: 793,
                range: [
                  813,
                  815,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BooleanLiteral {
                token: {
                  isKeyword: true,
                  lnum: 36,
                  lnumStartIndex: 793,
                  range: [
                    816,
                    821,
                  ],
                  type: "BooleanLiteral",
                  value: "false",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 36,
              lnumStartIndex: 793,
              range: [
                793,
                799,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      LocalStatement {
        init: [
          FunctionCallExpression {
            args: [
              FunctionCallExpression {
                args: [
                  Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 37,
                      lnumStartIndex: 823,
                      range: [
                        845,
                        849,
                      ],
                      type: "Identifier",
                      value: "next",
                    },
                  },
                  TableConstructor {
                    fieldlist: [
                      TableValue {
                        value: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 37,
                            lnumStartIndex: 823,
                            range: [
                              853,
                              855,
                            ],
                            type: "Identifier",
                            value: "_G",
                          },
                        },
                      },
                      TableValue {
                        value: NilLiteral {
                          token: {
                            isKeyword: true,
                            lnum: 37,
                            lnumStartIndex: 823,
                            range: [
                              857,
                              860,
                            ],
                            type: "NilLiteral",
                            value: "nil",
                          },
                        },
                      },
                      TableKeyString {
                        key: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 37,
                            lnumStartIndex: 823,
                            range: [
                              862,
                              863,
                            ],
                            type: "Identifier",
                            value: "n",
                          },
                        },
                        value: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 37,
                            lnumStartIndex: 823,
                            range: [
                              866,
                              867,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                    ],
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 37,
                    lnumStartIndex: 823,
                    range: [
                      840,
                      844,
                    ],
                    type: "Identifier",
                    value: "call",
                  },
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 37,
                lnumStartIndex: 823,
                range: [
                  833,
                  839,
                ],
                type: "Identifier",
                value: "vararg",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 37,
              lnumStartIndex: 823,
              range: [
                829,
                830,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          FunctionCallExpression {
            args: [
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 38,
                  lnumStartIndex: 872,
                  range: [
                    890,
                    892,
                  ],
                  type: "Identifier",
                  value: "_G",
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 872,
                range: [
                  885,
                  889,
                ],
                type: "Identifier",
                value: "next",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 38,
              lnumStartIndex: 872,
              range: [
                878,
                879,
              ],
              type: "Identifier",
              value: "b",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 38,
              lnumStartIndex: 872,
              range: [
                881,
                882,
              ],
              type: "Identifier",
              value: "c",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 39,
                        lnumStartIndex: 894,
                        range: [
                          901,
                          902,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 39,
                        lnumStartIndex: 894,
                        range: [
                          903,
                          904,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 39,
                    lnumStartIndex: 894,
                    range: [
                      906,
                      908,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 39,
                      lnumStartIndex: 894,
                      range: [
                        909,
                        910,
                      ],
                      type: "Identifier",
                      value: "b",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 39,
                  lnumStartIndex: 894,
                  range: [
                    911,
                    914,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 39,
                        lnumStartIndex: 894,
                        range: [
                          915,
                          916,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 39,
                        lnumStartIndex: 894,
                        range: [
                          917,
                          918,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 39,
                    lnumStartIndex: 894,
                    range: [
                      920,
                      922,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 39,
                      lnumStartIndex: 894,
                      range: [
                        923,
                        924,
                      ],
                      type: "Identifier",
                      value: "c",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 39,
                lnumStartIndex: 894,
                range: [
                  925,
                  928,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 39,
                      lnumStartIndex: 894,
                      range: [
                        929,
                        930,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 39,
                      lnumStartIndex: 894,
                      range: [
                        931,
                        932,
                      ],
                      type: "Identifier",
                      value: "n",
                    },
                  },
                  indexer: ".",
                },
                operator: {
                  isKeyword: false,
                  lnum: 39,
                  lnumStartIndex: 894,
                  range: [
                    933,
                    935,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 39,
                    lnumStartIndex: 894,
                    range: [
                      936,
                      937,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 39,
              lnumStartIndex: 894,
              range: [
                894,
                900,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              FunctionCallExpression {
                args: [
                  Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 40,
                      lnumStartIndex: 939,
                      range: [
                        955,
                        959,
                      ],
                      type: "Identifier",
                      value: "call",
                    },
                  },
                  TableConstructor {
                    fieldlist: [
                      TableValue {
                        value: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 40,
                            lnumStartIndex: 939,
                            range: [
                              963,
                              966,
                            ],
                            type: "Identifier",
                            value: "c12",
                          },
                        },
                      },
                      TableValue {
                        value: TableConstructor {
                          fieldlist: [
                            TableValue {
                              value: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 40,
                                  lnumStartIndex: 939,
                                  range: [
                                    970,
                                    971,
                                  ],
                                  type: "NumericLiteral",
                                  value: "1",
                                },
                              },
                            },
                            TableValue {
                              value: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 40,
                                  lnumStartIndex: 939,
                                  range: [
                                    973,
                                    974,
                                  ],
                                  type: "NumericLiteral",
                                  value: "2",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 40,
                    lnumStartIndex: 939,
                    range: [
                      950,
                      954,
                    ],
                    type: "Identifier",
                    value: "call",
                  },
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 40,
                lnumStartIndex: 939,
                range: [
                  943,
                  949,
                ],
                type: "Identifier",
                value: "vararg",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 40,
              lnumStartIndex: 939,
              range: [
                939,
                940,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 41,
                        lnumStartIndex: 981,
                        range: [
                          988,
                          989,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 41,
                        lnumStartIndex: 981,
                        range: [
                          990,
                          991,
                        ],
                        type: "Identifier",
                        value: "n",
                      },
                    },
                    indexer: ".",
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 41,
                    lnumStartIndex: 981,
                    range: [
                      992,
                      994,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 41,
                      lnumStartIndex: 981,
                      range: [
                        995,
                        996,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 41,
                  lnumStartIndex: 981,
                  range: [
                    997,
                    1000,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 41,
                        lnumStartIndex: 981,
                        range: [
                          1001,
                          1002,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 41,
                        lnumStartIndex: 981,
                        range: [
                          1003,
                          1004,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 41,
                    lnumStartIndex: 981,
                    range: [
                      1006,
                      1008,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 41,
                      lnumStartIndex: 981,
                      range: [
                        1009,
                        1011,
                      ],
                      type: "NumericLiteral",
                      value: "55",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 41,
                lnumStartIndex: 981,
                range: [
                  1012,
                  1015,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 41,
                      lnumStartIndex: 981,
                      range: [
                        1016,
                        1017,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 41,
                      lnumStartIndex: 981,
                      range: [
                        1018,
                        1019,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 41,
                  lnumStartIndex: 981,
                  range: [
                    1021,
                    1023,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 41,
                    lnumStartIndex: 981,
                    range: [
                      1024,
                      1025,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 41,
              lnumStartIndex: 981,
              range: [
                981,
                987,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              Identifier {
                token: {
                  isKeyword: false,
                  lnum: 42,
                  lnumStartIndex: 1027,
                  range: [
                    1036,
                    1041,
                  ],
                  type: "Identifier",
                  value: "print",
                },
              },
              TableConstructor {
                fieldlist: [
                  TableValue {
                    value: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 42,
                        lnumStartIndex: 1027,
                        range: [
                          1045,
                          1048,
                        ],
                        type: "StringLiteral",
                        value: "'+'",
                      },
                    },
                  },
                ],
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 42,
                lnumStartIndex: 1027,
                range: [
                  1031,
                  1035,
                ],
                type: "Identifier",
                value: "call",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 42,
              lnumStartIndex: 1027,
              range: [
                1027,
                1028,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 43,
                  lnumStartIndex: 1052,
                  range: [
                    1059,
                    1060,
                  ],
                  type: "Identifier",
                  value: "a",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 43,
                lnumStartIndex: 1052,
                range: [
                  1061,
                  1063,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 43,
                  lnumStartIndex: 1052,
                  range: [
                    1064,
                    1067,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 43,
              lnumStartIndex: 1052,
              range: [
                1052,
                1058,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      LocalStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 45,
                    lnumStartIndex: 1070,
                    range: [
                      1082,
                      1083,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
              TableValue {
                value: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 45,
                    lnumStartIndex: 1070,
                    range: [
                      1085,
                      1087,
                    ],
                    type: "NumericLiteral",
                    value: "10",
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 45,
              lnumStartIndex: 1070,
              range: [
                1076,
                1077,
              ],
              type: "Identifier",
              value: "t",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            ReturnStatement {
              arguments: [
                BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 46,
                        lnumStartIndex: 1090,
                        range: [
                          1115,
                          1119,
                        ],
                        type: "Identifier",
                        value: "self",
                      },
                    },
                    index: IndexExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 46,
                          lnumStartIndex: 1090,
                          range: [
                            1120,
                            1123,
                          ],
                          type: "Identifier",
                          value: "arg",
                        },
                      },
                      index: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 46,
                          lnumStartIndex: 1090,
                          range: [
                            1124,
                            1125,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 46,
                    lnumStartIndex: 1090,
                    range: [
                      1128,
                      1129,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 46,
                        lnumStartIndex: 1090,
                        range: [
                          1130,
                          1133,
                        ],
                        type: "Identifier",
                        value: "arg",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 46,
                        lnumStartIndex: 1090,
                        range: [
                          1134,
                          1135,
                        ],
                        type: "Identifier",
                        value: "n",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
            },
          ],
        },
        funcname: MemberExpression {
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 46,
              lnumStartIndex: 1090,
              range: [
                1099,
                1100,
              ],
              type: "Identifier",
              value: "t",
            },
          },
          identifier: Identifier {
            token: {
              isKeyword: false,
              lnum: 46,
              lnumStartIndex: 1090,
              range: [
                1101,
                1102,
              ],
              type: "Identifier",
              value: "f",
            },
          },
          indexer: ":",
        },
        parlist: [
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 46,
              lnumStartIndex: 1090,
              range: [
                1103,
                1106,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 48,
                        lnumStartIndex: 1141,
                        range: [
                          1152,
                          1153,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 48,
                        lnumStartIndex: 1141,
                        range: [
                          1155,
                          1156,
                        ],
                        type: "NumericLiteral",
                        value: "4",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 48,
                        lnumStartIndex: 1141,
                        range: [
                          1148,
                          1149,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 48,
                        lnumStartIndex: 1141,
                        range: [
                          1150,
                          1151,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                    indexer: ":",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 48,
                  lnumStartIndex: 1141,
                  range: [
                    1158,
                    1160,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 48,
                    lnumStartIndex: 1141,
                    range: [
                      1161,
                      1162,
                    ],
                    type: "NumericLiteral",
                    value: "3",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 48,
                lnumStartIndex: 1141,
                range: [
                  1163,
                  1166,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 48,
                        lnumStartIndex: 1141,
                        range: [
                          1171,
                          1172,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 48,
                        lnumStartIndex: 1141,
                        range: [
                          1167,
                          1168,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 48,
                        lnumStartIndex: 1141,
                        range: [
                          1169,
                          1170,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                    indexer: ":",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 48,
                  lnumStartIndex: 1141,
                  range: [
                    1174,
                    1176,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 48,
                    lnumStartIndex: 1141,
                    range: [
                      1177,
                      1179,
                    ],
                    type: "NumericLiteral",
                    value: "11",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 48,
              lnumStartIndex: 1141,
              range: [
                1141,
                1147,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 49,
                lnumStartIndex: 1181,
                range: [
                  1187,
                  1190,
                ],
                type: "StringLiteral",
                value: "'+'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 49,
              lnumStartIndex: 1181,
              range: [
                1181,
                1186,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 51,
              lnumStartIndex: 1193,
              range: [
                1199,
                1201,
              ],
              type: "NumericLiteral",
              value: "20",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 51,
              lnumStartIndex: 1193,
              range: [
                1193,
                1196,
              ],
              type: "Identifier",
              value: "lim",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 52,
              lnumStartIndex: 1202,
              range: [
                1215,
                1216,
              ],
              type: "NumericLiteral",
              value: "1",
            },
          },
          TableConstructor {
            fieldlist: [
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 52,
              lnumStartIndex: 1202,
              range: [
                1208,
                1209,
              ],
              type: "Identifier",
              value: "i",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 52,
              lnumStartIndex: 1202,
              range: [
                1211,
                1212,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      WhileStatement {
        block: Block {
          statements: [
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1221,
                      range: [
                        1246,
                        1247,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 53,
                    lnumStartIndex: 1221,
                    range: [
                      1248,
                      1249,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1221,
                      range: [
                        1250,
                        1253,
                      ],
                      type: "NumericLiteral",
                      value: "0.3",
                    },
                  },
                },
              ],
              variables: [
                IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1221,
                      range: [
                        1239,
                        1240,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  index: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1221,
                      range: [
                        1241,
                        1242,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 54,
                      lnumStartIndex: 1255,
                      range: [
                        1259,
                        1260,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 54,
                    lnumStartIndex: 1255,
                    range: [
                      1261,
                      1262,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 54,
                      lnumStartIndex: 1255,
                      range: [
                        1263,
                        1264,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 54,
                    lnumStartIndex: 1255,
                    range: [
                      1255,
                      1256,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
              ],
            },
          ],
        },
        condition: BinaryExpression {
          left: Identifier {
            token: {
              isKeyword: false,
              lnum: 53,
              lnumStartIndex: 1221,
              range: [
                1227,
                1228,
              ],
              type: "Identifier",
              value: "i",
            },
          },
          operator: {
            isKeyword: false,
            lnum: 53,
            lnumStartIndex: 1221,
            range: [
              1229,
              1231,
            ],
            type: "LessThanEqual",
            value: "<=",
          },
          right: Identifier {
            token: {
              isKeyword: false,
              lnum: 53,
              lnumStartIndex: 1221,
              range: [
                1232,
                1235,
              ],
              type: "Identifier",
              value: "lim",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                TableConstructor {
                  fieldlist: [
                    TableValue {
                      value: VarargLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 58,
                          lnumStartIndex: 1298,
                          range: [
                            1315,
                            1318,
                          ],
                          type: "VarargLiteral",
                          value: "...",
                        },
                      },
                    },
                  ],
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 58,
                    lnumStartIndex: 1298,
                    range: [
                      1306,
                      1310,
                    ],
                    type: "Identifier",
                    value: "more",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 59,
                              lnumStartIndex: 1321,
                              range: [
                                1330,
                                1331,
                              ],
                              type: "Identifier",
                              value: "a",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 59,
                            lnumStartIndex: 1321,
                            range: [
                              1332,
                              1334,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 59,
                              lnumStartIndex: 1321,
                              range: [
                                1335,
                                1338,
                              ],
                              type: "NumericLiteral",
                              value: "1.3",
                            },
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 59,
                          lnumStartIndex: 1321,
                          range: [
                            1339,
                            1342,
                          ],
                          type: "And",
                          value: "and",
                        },
                        right: BinaryExpression {
                          left: IndexExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 59,
                                lnumStartIndex: 1321,
                                range: [
                                  1343,
                                  1347,
                                ],
                                type: "Identifier",
                                value: "more",
                              },
                            },
                            index: NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 59,
                                lnumStartIndex: 1321,
                                range: [
                                  1348,
                                  1349,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 59,
                            lnumStartIndex: 1321,
                            range: [
                              1351,
                              1353,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 59,
                              lnumStartIndex: 1321,
                              range: [
                                1354,
                                1357,
                              ],
                              type: "NumericLiteral",
                              value: "5.3",
                            },
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 59,
                        lnumStartIndex: 1321,
                        range: [
                          1358,
                          1361,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: IndexExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 60,
                              lnumStartIndex: 1362,
                              range: [
                                1366,
                                1370,
                              ],
                              type: "Identifier",
                              value: "more",
                            },
                          },
                          index: BinaryExpression {
                            left: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 60,
                                lnumStartIndex: 1362,
                                range: [
                                  1371,
                                  1374,
                                ],
                                type: "Identifier",
                                value: "lim",
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 60,
                              lnumStartIndex: 1362,
                              range: [
                                1375,
                                1376,
                              ],
                              type: "Minus",
                              value: "-",
                            },
                            right: NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 60,
                                lnumStartIndex: 1362,
                                range: [
                                  1377,
                                  1378,
                                ],
                                type: "NumericLiteral",
                                value: "4",
                              },
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 60,
                          lnumStartIndex: 1362,
                          range: [
                            1380,
                            1382,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 60,
                              lnumStartIndex: 1362,
                              range: [
                                1383,
                                1386,
                              ],
                              type: "Identifier",
                              value: "lim",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 60,
                            lnumStartIndex: 1362,
                            range: [
                              1387,
                              1388,
                            ],
                            type: "Plus",
                            value: "+",
                          },
                          right: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 60,
                              lnumStartIndex: 1362,
                              range: [
                                1389,
                                1392,
                              ],
                              type: "NumericLiteral",
                              value: "0.3",
                            },
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 60,
                      lnumStartIndex: 1362,
                      range: [
                        1393,
                        1396,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: UnaryExpression {
                      argument: IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 60,
                            lnumStartIndex: 1362,
                            range: [
                              1401,
                              1405,
                            ],
                            type: "Identifier",
                            value: "more",
                          },
                        },
                        index: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 60,
                              lnumStartIndex: 1362,
                              range: [
                                1406,
                                1409,
                              ],
                              type: "Identifier",
                              value: "lim",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 60,
                            lnumStartIndex: 1362,
                            range: [
                              1410,
                              1411,
                            ],
                            type: "Minus",
                            value: "-",
                          },
                          right: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 60,
                              lnumStartIndex: 1362,
                              range: [
                                1412,
                                1413,
                              ],
                              type: "NumericLiteral",
                              value: "3",
                            },
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 60,
                        lnumStartIndex: 1362,
                        range: [
                          1397,
                          1400,
                        ],
                        type: "Not",
                        value: "not",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 59,
                    lnumStartIndex: 1321,
                    range: [
                      1323,
                      1329,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 57,
            lnumStartIndex: 1270,
            range: [
              1279,
              1280,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 57,
              lnumStartIndex: 1270,
              range: [
                1281,
                1282,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 57,
              lnumStartIndex: 1270,
              range: [
                1284,
                1285,
              ],
              type: "Identifier",
              value: "b",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 57,
              lnumStartIndex: 1270,
              range: [
                1287,
                1288,
              ],
              type: "Identifier",
              value: "c",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 57,
              lnumStartIndex: 1270,
              range: [
                1290,
                1291,
              ],
              type: "Identifier",
              value: "d",
            },
          },
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 57,
              lnumStartIndex: 1270,
              range: [
                1293,
                1296,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 64,
                            lnumStartIndex: 1441,
                            range: [
                              1450,
                              1451,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 64,
                          lnumStartIndex: 1441,
                          range: [
                            1452,
                            1454,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 64,
                            lnumStartIndex: 1441,
                            range: [
                              1455,
                              1458,
                            ],
                            type: "NumericLiteral",
                            value: "1.3",
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 64,
                        lnumStartIndex: 1441,
                        range: [
                          1459,
                          1462,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 64,
                            lnumStartIndex: 1441,
                            range: [
                              1463,
                              1464,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 64,
                          lnumStartIndex: 1441,
                          range: [
                            1465,
                            1467,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 64,
                            lnumStartIndex: 1441,
                            range: [
                              1468,
                              1471,
                            ],
                            type: "NumericLiteral",
                            value: "2.3",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 64,
                      lnumStartIndex: 1441,
                      range: [
                        1472,
                        1475,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 64,
                          lnumStartIndex: 1441,
                          range: [
                            1476,
                            1477,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 64,
                        lnumStartIndex: 1441,
                        range: [
                          1478,
                          1480,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 64,
                          lnumStartIndex: 1441,
                          range: [
                            1481,
                            1484,
                          ],
                          type: "NumericLiteral",
                          value: "3.3",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 64,
                    lnumStartIndex: 1441,
                    range: [
                      1443,
                      1449,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 63,
            lnumStartIndex: 1421,
            range: [
              1430,
              1431,
            ],
            type: "Identifier",
            value: "g",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 63,
              lnumStartIndex: 1421,
              range: [
                1432,
                1433,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 63,
              lnumStartIndex: 1421,
              range: [
                1435,
                1436,
              ],
              type: "Identifier",
              value: "b",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 63,
              lnumStartIndex: 1421,
              range: [
                1438,
                1439,
              ],
              type: "Identifier",
              value: "c",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 67,
                lnumStartIndex: 1491,
                range: [
                  1496,
                  1497,
                ],
                type: "Identifier",
                value: "f",
              },
            },
            Identifier {
              token: {
                isKeyword: false,
                lnum: 67,
                lnumStartIndex: 1491,
                range: [
                  1499,
                  1500,
                ],
                type: "Identifier",
                value: "a",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 67,
              lnumStartIndex: 1491,
              range: [
                1491,
                1495,
              ],
              type: "Identifier",
              value: "call",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 68,
                lnumStartIndex: 1502,
                range: [
                  1507,
                  1508,
                ],
                type: "Identifier",
                value: "g",
              },
            },
            Identifier {
              token: {
                isKeyword: false,
                lnum: 68,
                lnumStartIndex: 1502,
                range: [
                  1510,
                  1511,
                ],
                type: "Identifier",
                value: "a",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 68,
              lnumStartIndex: 1502,
              range: [
                1502,
                1506,
              ],
              type: "Identifier",
              value: "call",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 70,
              lnumStartIndex: 1514,
              range: [
                1514,
                1515,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 71,
              lnumStartIndex: 1521,
              range: [
                1525,
                1526,
              ],
              type: "NumericLiteral",
              value: "1",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 71,
              lnumStartIndex: 1521,
              range: [
                1521,
                1522,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      WhileStatement {
        block: Block {
          statements: [
            AssignmentStatement {
              init: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 72,
                    lnumStartIndex: 1527,
                    range: [
                      1552,
                      1553,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
              ],
              variables: [
                IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 72,
                      lnumStartIndex: 1527,
                      range: [
                        1545,
                        1546,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  index: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 72,
                      lnumStartIndex: 1527,
                      range: [
                        1547,
                        1548,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 73,
                      lnumStartIndex: 1555,
                      range: [
                        1559,
                        1560,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 73,
                    lnumStartIndex: 1555,
                    range: [
                      1561,
                      1562,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 73,
                      lnumStartIndex: 1555,
                      range: [
                        1563,
                        1564,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 73,
                    lnumStartIndex: 1555,
                    range: [
                      1555,
                      1556,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
              ],
            },
          ],
        },
        condition: BinaryExpression {
          left: Identifier {
            token: {
              isKeyword: false,
              lnum: 72,
              lnumStartIndex: 1527,
              range: [
                1533,
                1534,
              ],
              type: "Identifier",
              value: "i",
            },
          },
          operator: {
            isKeyword: false,
            lnum: 72,
            lnumStartIndex: 1527,
            range: [
              1535,
              1537,
            ],
            type: "LessThanEqual",
            value: "<=",
          },
          right: Identifier {
            token: {
              isKeyword: false,
              lnum: 72,
              lnumStartIndex: 1527,
              range: [
                1538,
                1541,
              ],
              type: "Identifier",
              value: "lim",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 75,
                        lnumStartIndex: 1569,
                        range: [
                          1581,
                          1585,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 75,
                        lnumStartIndex: 1569,
                        range: [
                          1586,
                          1589,
                        ],
                        type: "Identifier",
                        value: "max",
                      },
                    },
                    indexer: ".",
                  },
                  Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 75,
                      lnumStartIndex: 1569,
                      range: [
                        1591,
                        1592,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 75,
                    lnumStartIndex: 1569,
                    range: [
                      1576,
                      1580,
                    ],
                    type: "Identifier",
                    value: "call",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 75,
                lnumStartIndex: 1569,
                range: [
                  1594,
                  1596,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 75,
                  lnumStartIndex: 1569,
                  range: [
                    1597,
                    1600,
                  ],
                  type: "Identifier",
                  value: "lim",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 75,
              lnumStartIndex: 1569,
              range: [
                1569,
                1575,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 77,
                lnumStartIndex: 1603,
                range: [
                  1609,
                  1612,
                ],
                type: "StringLiteral",
                value: '"+"',
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 77,
              lnumStartIndex: 1603,
              range: [
                1603,
                1608,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            ReturnStatement {
              arguments: [
                VarargLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 82,
                    lnumStartIndex: 1638,
                    range: [
                      1670,
                      1673,
                    ],
                    type: "VarargLiteral",
                    value: "...",
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 82,
            lnumStartIndex: 1638,
            range: [
              1647,
              1654,
            ],
            type: "Identifier",
            value: "oneless",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 82,
              lnumStartIndex: 1638,
              range: [
                1655,
                1656,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 82,
              lnumStartIndex: 1638,
              range: [
                1658,
                1661,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 85,
                    lnumStartIndex: 1701,
                    range: [
                      1709,
                      1710,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 86,
                        lnumStartIndex: 1711,
                        range: [
                          1720,
                          1723,
                        ],
                        type: "Identifier",
                        value: "arg",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 86,
                      lnumStartIndex: 1711,
                      range: [
                        1724,
                        1726,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 86,
                        lnumStartIndex: 1711,
                        range: [
                          1727,
                          1730,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 86,
                    lnumStartIndex: 1711,
                    range: [
                      1713,
                      1719,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            IfStatement {
              elseBlock: Block {
                statements: [
                  AssignmentStatement {
                    init: [
                      BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 91,
                            lnumStartIndex: 1834,
                            range: [
                              1848,
                              1849,
                            ],
                            type: "Identifier",
                            value: "n",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 91,
                          lnumStartIndex: 1834,
                          range: [
                            1850,
                            1851,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 91,
                            lnumStartIndex: 1834,
                            range: [
                              1852,
                              1853,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      },
                      VarargLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 91,
                          lnumStartIndex: 1834,
                          range: [
                            1855,
                            1858,
                          ],
                          type: "VarargLiteral",
                          value: "...",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 91,
                          lnumStartIndex: 1834,
                          range: [
                            1860,
                            1861,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 91,
                          lnumStartIndex: 1834,
                          range: [
                            1838,
                            1839,
                          ],
                          type: "Identifier",
                          value: "n",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 91,
                          lnumStartIndex: 1834,
                          range: [
                            1841,
                            1842,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 91,
                          lnumStartIndex: 1834,
                          range: [
                            1844,
                            1845,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  FunctionCallStatement {
                    expression: FunctionCallExpression {
                      args: [
                        BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 92,
                              lnumStartIndex: 1862,
                              range: [
                                1873,
                                1874,
                              ],
                              type: "Identifier",
                              value: "b",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 92,
                            lnumStartIndex: 1862,
                            range: [
                              1875,
                              1877,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: VarargLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 92,
                              lnumStartIndex: 1862,
                              range: [
                                1878,
                                1881,
                              ],
                              type: "VarargLiteral",
                              value: "...",
                            },
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 92,
                          lnumStartIndex: 1862,
                          range: [
                            1866,
                            1872,
                          ],
                          type: "Identifier",
                          value: "assert",
                        },
                      },
                    },
                  },
                  ReturnStatement {
                    arguments: [
                      FunctionCallExpression {
                        args: [
                          Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 93,
                              lnumStartIndex: 1883,
                              range: [
                                1896,
                                1897,
                              ],
                              type: "Identifier",
                              value: "n",
                            },
                          },
                          Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 93,
                              lnumStartIndex: 1883,
                              range: [
                                1899,
                                1900,
                              ],
                              type: "Identifier",
                              value: "a",
                            },
                          },
                          VarargLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 93,
                              lnumStartIndex: 1883,
                              range: [
                                1902,
                                1905,
                              ],
                              type: "VarargLiteral",
                              value: "...",
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 93,
                            lnumStartIndex: 1883,
                            range: [
                              1894,
                              1895,
                            ],
                            type: "Identifier",
                            value: "f",
                          },
                        },
                      },
                    ],
                  },
                ],
              },
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  LocalStatement {
                    init: [
                      VarargLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 88,
                          lnumStartIndex: 1749,
                          range: [
                            1769,
                            1772,
                          ],
                          type: "VarargLiteral",
                          value: "...",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 88,
                          lnumStartIndex: 1749,
                          range: [
                            1759,
                            1760,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 88,
                          lnumStartIndex: 1749,
                          range: [
                            1762,
                            1763,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 88,
                          lnumStartIndex: 1749,
                          range: [
                            1765,
                            1766,
                          ],
                          type: "Identifier",
                          value: "d",
                        },
                      },
                    ],
                  },
                  ReturnStatement {
                    arguments: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 89,
                          lnumStartIndex: 1773,
                          range: [
                            1784,
                            1785,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 89,
                          lnumStartIndex: 1773,
                          range: [
                            1787,
                            1788,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 89,
                          lnumStartIndex: 1773,
                          range: [
                            1790,
                            1791,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 89,
                          lnumStartIndex: 1773,
                          range: [
                            1793,
                            1794,
                          ],
                          type: "Identifier",
                          value: "d",
                        },
                      },
                      FunctionCallExpression {
                        args: [
                          FunctionCallExpression {
                            args: [
                              FunctionCallExpression {
                                args: [
                                  VarargLiteral {
                                    token: {
                                      isKeyword: false,
                                      lnum: 89,
                                      lnumStartIndex: 1773,
                                      range: [
                                        1820,
                                        1823,
                                      ],
                                      type: "VarargLiteral",
                                      value: "...",
                                    },
                                  },
                                ],
                                base: Identifier {
                                  token: {
                                    isKeyword: false,
                                    lnum: 89,
                                    lnumStartIndex: 1773,
                                    range: [
                                      1812,
                                      1819,
                                    ],
                                    type: "Identifier",
                                    value: "oneless",
                                  },
                                },
                              },
                            ],
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 89,
                                lnumStartIndex: 1773,
                                range: [
                                  1804,
                                  1811,
                                ],
                                type: "Identifier",
                                value: "oneless",
                              },
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 89,
                            lnumStartIndex: 1773,
                            range: [
                              1796,
                              1803,
                            ],
                            type: "Identifier",
                            value: "oneless",
                          },
                        },
                      },
                    ],
                  },
                ],
              },
              ifCondition: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 87,
                    lnumStartIndex: 1732,
                    range: [
                      1737,
                      1738,
                    ],
                    type: "Identifier",
                    value: "n",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 87,
                  lnumStartIndex: 1732,
                  range: [
                    1739,
                    1741,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 87,
                    lnumStartIndex: 1732,
                    range: [
                      1742,
                      1743,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 84,
            lnumStartIndex: 1679,
            range: [
              1688,
              1689,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 84,
              lnumStartIndex: 1679,
              range: [
                1690,
                1691,
              ],
              type: "Identifier",
              value: "n",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 84,
              lnumStartIndex: 1679,
              range: [
                1693,
                1694,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 84,
              lnumStartIndex: 1679,
              range: [
                1696,
                1699,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              FunctionCallExpression {
                args: [
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 97,
                      lnumStartIndex: 1918,
                      range: [
                        1943,
                        1945,
                      ],
                      type: "NumericLiteral",
                      value: "10",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 97,
                      lnumStartIndex: 1918,
                      range: [
                        1947,
                        1948,
                      ],
                      type: "NumericLiteral",
                      value: "5",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 97,
                      lnumStartIndex: 1918,
                      range: [
                        1950,
                        1951,
                      ],
                      type: "NumericLiteral",
                      value: "4",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 97,
                      lnumStartIndex: 1918,
                      range: [
                        1953,
                        1954,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 97,
                      lnumStartIndex: 1918,
                      range: [
                        1956,
                        1957,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 97,
                      lnumStartIndex: 1918,
                      range: [
                        1959,
                        1960,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 97,
                    lnumStartIndex: 1918,
                    range: [
                      1941,
                      1942,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 97,
                lnumStartIndex: 1918,
                range: [
                  1934,
                  1940,
                ],
                type: "Identifier",
                value: "assert",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 97,
              lnumStartIndex: 1918,
              range: [
                1918,
                1919,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 97,
              lnumStartIndex: 1918,
              range: [
                1921,
                1922,
              ],
              type: "Identifier",
              value: "b",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 97,
              lnumStartIndex: 1918,
              range: [
                1924,
                1925,
              ],
              type: "Identifier",
              value: "c",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 97,
              lnumStartIndex: 1918,
              range: [
                1927,
                1928,
              ],
              type: "Identifier",
              value: "d",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 97,
              lnumStartIndex: 1918,
              range: [
                1930,
                1931,
              ],
              type: "Identifier",
              value: "e",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 1963,
                          range: [
                            1970,
                            1971,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 98,
                        lnumStartIndex: 1963,
                        range: [
                          1972,
                          1974,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 1963,
                          range: [
                            1975,
                            1976,
                          ],
                          type: "NumericLiteral",
                          value: "5",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 98,
                      lnumStartIndex: 1963,
                      range: [
                        1977,
                        1980,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 1963,
                          range: [
                            1981,
                            1982,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 98,
                        lnumStartIndex: 1963,
                        range: [
                          1983,
                          1985,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 1963,
                          range: [
                            1986,
                            1987,
                          ],
                          type: "NumericLiteral",
                          value: "4",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 98,
                    lnumStartIndex: 1963,
                    range: [
                      1988,
                      1991,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 98,
                        lnumStartIndex: 1963,
                        range: [
                          1992,
                          1993,
                        ],
                        type: "Identifier",
                        value: "c",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 98,
                      lnumStartIndex: 1963,
                      range: [
                        1994,
                        1996,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 98,
                        lnumStartIndex: 1963,
                        range: [
                          1997,
                          1998,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 98,
                  lnumStartIndex: 1963,
                  range: [
                    1999,
                    2002,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 98,
                      lnumStartIndex: 1963,
                      range: [
                        2003,
                        2004,
                      ],
                      type: "Identifier",
                      value: "d",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 98,
                    lnumStartIndex: 1963,
                    range: [
                      2005,
                      2007,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 98,
                      lnumStartIndex: 1963,
                      range: [
                        2008,
                        2009,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 98,
                lnumStartIndex: 1963,
                range: [
                  2010,
                  2013,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 98,
                    lnumStartIndex: 1963,
                    range: [
                      2014,
                      2015,
                    ],
                    type: "Identifier",
                    value: "e",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 98,
                  lnumStartIndex: 1963,
                  range: [
                    2016,
                    2018,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 98,
                    lnumStartIndex: 1963,
                    range: [
                      2019,
                      2020,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 98,
              lnumStartIndex: 1963,
              range: [
                1963,
                1969,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 100,
                  lnumStartIndex: 2023,
                  range: [
                    2041,
                    2042,
                  ],
                  type: "NumericLiteral",
                  value: "4",
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 100,
                lnumStartIndex: 2023,
                range: [
                  2039,
                  2040,
                ],
                type: "Identifier",
                value: "f",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 100,
              lnumStartIndex: 2023,
              range: [
                2023,
                2024,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 100,
              lnumStartIndex: 2023,
              range: [
                2026,
                2027,
              ],
              type: "Identifier",
              value: "b",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 100,
              lnumStartIndex: 2023,
              range: [
                2029,
                2030,
              ],
              type: "Identifier",
              value: "c",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 100,
              lnumStartIndex: 2023,
              range: [
                2032,
                2033,
              ],
              type: "Identifier",
              value: "d",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 100,
              lnumStartIndex: 2023,
              range: [
                2035,
                2036,
              ],
              type: "Identifier",
              value: "e",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 101,
                          lnumStartIndex: 2044,
                          range: [
                            2051,
                            2052,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 101,
                        lnumStartIndex: 2044,
                        range: [
                          2053,
                          2055,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 101,
                          lnumStartIndex: 2044,
                          range: [
                            2056,
                            2059,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 101,
                      lnumStartIndex: 2044,
                      range: [
                        2060,
                        2063,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 101,
                          lnumStartIndex: 2044,
                          range: [
                            2064,
                            2065,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 101,
                        lnumStartIndex: 2044,
                        range: [
                          2066,
                          2068,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 101,
                          lnumStartIndex: 2044,
                          range: [
                            2069,
                            2072,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 101,
                    lnumStartIndex: 2044,
                    range: [
                      2073,
                      2076,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 101,
                        lnumStartIndex: 2044,
                        range: [
                          2077,
                          2078,
                        ],
                        type: "Identifier",
                        value: "c",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 101,
                      lnumStartIndex: 2044,
                      range: [
                        2079,
                        2081,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 101,
                        lnumStartIndex: 2044,
                        range: [
                          2082,
                          2085,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 101,
                  lnumStartIndex: 2044,
                  range: [
                    2086,
                    2089,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 101,
                      lnumStartIndex: 2044,
                      range: [
                        2090,
                        2091,
                      ],
                      type: "Identifier",
                      value: "d",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 101,
                    lnumStartIndex: 2044,
                    range: [
                      2092,
                      2094,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 101,
                      lnumStartIndex: 2044,
                      range: [
                        2095,
                        2098,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 101,
                lnumStartIndex: 2044,
                range: [
                  2099,
                  2102,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 101,
                    lnumStartIndex: 2044,
                    range: [
                      2103,
                      2104,
                    ],
                    type: "Identifier",
                    value: "e",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 101,
                  lnumStartIndex: 2044,
                  range: [
                    2105,
                    2107,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 101,
                    lnumStartIndex: 2044,
                    range: [
                      2108,
                      2111,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 101,
              lnumStartIndex: 2044,
              range: [
                2044,
                2050,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              StringLiteral {
                token: {
                  isKeyword: false,
                  lnum: 105,
                  lnumStartIndex: 2142,
                  range: [
                    2157,
                    2175,
                  ],
                  type: "StringLiteral",
                  value: "[[ return {...} ]]",
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 105,
                lnumStartIndex: 2142,
                range: [
                  2146,
                  2156,
                ],
                type: "Identifier",
                value: "loadstring",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 105,
              lnumStartIndex: 2142,
              range: [
                2142,
                2143,
              ],
              type: "Identifier",
              value: "f",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 106,
                  lnumStartIndex: 2176,
                  range: [
                    2182,
                    2183,
                  ],
                  type: "NumericLiteral",
                  value: "2",
                },
              },
              NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 106,
                  lnumStartIndex: 2176,
                  range: [
                    2185,
                    2186,
                  ],
                  type: "NumericLiteral",
                  value: "3",
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 106,
                lnumStartIndex: 2176,
                range: [
                  2180,
                  2181,
                ],
                type: "Identifier",
                value: "f",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 106,
              lnumStartIndex: 2176,
              range: [
                2176,
                2177,
              ],
              type: "Identifier",
              value: "x",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 2188,
                        range: [
                          2195,
                          2196,
                        ],
                        type: "Identifier",
                        value: "x",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 2188,
                        range: [
                          2197,
                          2198,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 107,
                    lnumStartIndex: 2188,
                    range: [
                      2200,
                      2202,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 107,
                      lnumStartIndex: 2188,
                      range: [
                        2203,
                        2204,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 107,
                  lnumStartIndex: 2188,
                  range: [
                    2205,
                    2208,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 2188,
                        range: [
                          2209,
                          2210,
                        ],
                        type: "Identifier",
                        value: "x",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 2188,
                        range: [
                          2211,
                          2212,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 107,
                    lnumStartIndex: 2188,
                    range: [
                      2214,
                      2216,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 107,
                      lnumStartIndex: 2188,
                      range: [
                        2217,
                        2218,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 107,
                lnumStartIndex: 2188,
                range: [
                  2219,
                  2222,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 107,
                      lnumStartIndex: 2188,
                      range: [
                        2223,
                        2224,
                      ],
                      type: "Identifier",
                      value: "x",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 107,
                      lnumStartIndex: 2188,
                      range: [
                        2225,
                        2226,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 107,
                  lnumStartIndex: 2188,
                  range: [
                    2228,
                    2230,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 107,
                    lnumStartIndex: 2188,
                    range: [
                      2231,
                      2234,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 107,
              lnumStartIndex: 2188,
              range: [
                2188,
                2194,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
              StringLiteral {
                token: {
                  isKeyword: false,
                  lnum: 110,
                  lnumStartIndex: 2238,
                  range: [
                    2253,
                    2394,
                  ],
                  type: "StringLiteral",
                  value: "[[
  local x = {...}
  for i=1,select('#', ...) do assert(x[i] == select(i, ...)) end
  assert(x[select('#', ...)+1] == nil)
  return true
]]",
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 110,
                lnumStartIndex: 2238,
                range: [
                  2242,
                  2252,
                ],
                type: "Identifier",
                value: "loadstring",
              },
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 110,
              lnumStartIndex: 2238,
              range: [
                2238,
                2239,
              ],
              type: "Identifier",
              value: "f",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 117,
                    lnumStartIndex: 2396,
                    range: [
                      2405,
                      2408,
                    ],
                    type: "StringLiteral",
                    value: '"a"',
                  },
                },
                StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 117,
                    lnumStartIndex: 2396,
                    range: [
                      2410,
                      2413,
                    ],
                    type: "StringLiteral",
                    value: '"b"',
                  },
                },
                NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 117,
                    lnumStartIndex: 2396,
                    range: [
                      2415,
                      2418,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
                TableConstructor {
                  fieldlist: [
                  ],
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 117,
                    lnumStartIndex: 2396,
                    range: [
                      2424,
                      2430,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 117,
                  lnumStartIndex: 2396,
                  range: [
                    2403,
                    2404,
                  ],
                  type: "Identifier",
                  value: "f",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 117,
              lnumStartIndex: 2396,
              range: [
                2396,
                2402,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 118,
                  lnumStartIndex: 2433,
                  range: [
                    2440,
                    2441,
                  ],
                  type: "Identifier",
                  value: "f",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 118,
              lnumStartIndex: 2433,
              range: [
                2433,
                2439,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 120,
                        lnumStartIndex: 2446,
                        range: [
                          2459,
                          2460,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                    FunctionCallExpression {
                      args: [
                        TableConstructor {
                          fieldlist: [
                            TableValue {
                              value: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 120,
                                  lnumStartIndex: 2446,
                                  range: [
                                    2471,
                                    2473,
                                  ],
                                  type: "NumericLiteral",
                                  value: "10",
                                },
                              },
                            },
                            TableValue {
                              value: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 120,
                                  lnumStartIndex: 2446,
                                  range: [
                                    2475,
                                    2477,
                                  ],
                                  type: "NumericLiteral",
                                  value: "20",
                                },
                              },
                            },
                            TableValue {
                              value: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 120,
                                  lnumStartIndex: 2446,
                                  range: [
                                    2479,
                                    2481,
                                  ],
                                  type: "NumericLiteral",
                                  value: "30",
                                },
                              },
                            },
                            TableValue {
                              value: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 120,
                                  lnumStartIndex: 2446,
                                  range: [
                                    2483,
                                    2485,
                                  ],
                                  type: "NumericLiteral",
                                  value: "40",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 120,
                          lnumStartIndex: 2446,
                          range: [
                            2462,
                            2468,
                          ],
                          type: "Identifier",
                          value: "unpack",
                        },
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 120,
                      lnumStartIndex: 2446,
                      range: [
                        2452,
                        2458,
                      ],
                      type: "Identifier",
                      value: "select",
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 120,
              lnumStartIndex: 2446,
              range: [
                2446,
                2447,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 121,
                          lnumStartIndex: 2491,
                          range: [
                            2509,
                            2510,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 121,
                          lnumStartIndex: 2491,
                          range: [
                            2498,
                            2503,
                          ],
                          type: "Identifier",
                          value: "table",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 121,
                          lnumStartIndex: 2491,
                          range: [
                            2504,
                            2508,
                          ],
                          type: "Identifier",
                          value: "getn",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 121,
                    lnumStartIndex: 2491,
                    range: [
                      2512,
                      2514,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 121,
                      lnumStartIndex: 2491,
                      range: [
                        2515,
                        2516,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 121,
                  lnumStartIndex: 2491,
                  range: [
                    2517,
                    2520,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 121,
                        lnumStartIndex: 2491,
                        range: [
                          2521,
                          2522,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 121,
                        lnumStartIndex: 2491,
                        range: [
                          2523,
                          2524,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 121,
                    lnumStartIndex: 2491,
                    range: [
                      2526,
                      2528,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 121,
                      lnumStartIndex: 2491,
                      range: [
                        2529,
                        2531,
                      ],
                      type: "NumericLiteral",
                      value: "30",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 121,
                lnumStartIndex: 2491,
                range: [
                  2532,
                  2535,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 121,
                      lnumStartIndex: 2491,
                      range: [
                        2536,
                        2537,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 121,
                      lnumStartIndex: 2491,
                      range: [
                        2538,
                        2539,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 121,
                  lnumStartIndex: 2491,
                  range: [
                    2541,
                    2543,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 121,
                    lnumStartIndex: 2491,
                    range: [
                      2544,
                      2546,
                    ],
                    type: "NumericLiteral",
                    value: "40",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 121,
              lnumStartIndex: 2491,
              range: [
                2491,
                2497,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 122,
                        lnumStartIndex: 2548,
                        range: [
                          2561,
                          2562,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 122,
                      lnumStartIndex: 2548,
                      range: [
                        2554,
                        2560,
                      ],
                      type: "Identifier",
                      value: "select",
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 122,
              lnumStartIndex: 2548,
              range: [
                2548,
                2549,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 123,
                      lnumStartIndex: 2566,
                      range: [
                        2578,
                        2579,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 123,
                    lnumStartIndex: 2566,
                    range: [
                      2573,
                      2577,
                    ],
                    type: "Identifier",
                    value: "next",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 123,
                lnumStartIndex: 2566,
                range: [
                  2581,
                  2583,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 123,
                  lnumStartIndex: 2566,
                  range: [
                    2584,
                    2587,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 123,
              lnumStartIndex: 2566,
              range: [
                2566,
                2572,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    UnaryExpression {
                      argument: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 124,
                          lnumStartIndex: 2589,
                          range: [
                            2603,
                            2604,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 124,
                        lnumStartIndex: 2589,
                        range: [
                          2602,
                          2603,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 124,
                        lnumStartIndex: 2589,
                        range: [
                          2606,
                          2607,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 124,
                        lnumStartIndex: 2589,
                        range: [
                          2609,
                          2610,
                        ],
                        type: "NumericLiteral",
                        value: "5",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 124,
                        lnumStartIndex: 2589,
                        range: [
                          2612,
                          2613,
                        ],
                        type: "NumericLiteral",
                        value: "7",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 124,
                      lnumStartIndex: 2589,
                      range: [
                        2595,
                        2601,
                      ],
                      type: "Identifier",
                      value: "select",
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 124,
              lnumStartIndex: 2589,
              range: [
                2589,
                2590,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 125,
                      lnumStartIndex: 2617,
                      range: [
                        2624,
                        2625,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 125,
                      lnumStartIndex: 2617,
                      range: [
                        2626,
                        2627,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 125,
                  lnumStartIndex: 2617,
                  range: [
                    2629,
                    2631,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 125,
                    lnumStartIndex: 2617,
                    range: [
                      2632,
                      2633,
                    ],
                    type: "NumericLiteral",
                    value: "7",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 125,
                lnumStartIndex: 2617,
                range: [
                  2634,
                  2637,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 125,
                      lnumStartIndex: 2617,
                      range: [
                        2638,
                        2639,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 125,
                      lnumStartIndex: 2617,
                      range: [
                        2640,
                        2641,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 125,
                  lnumStartIndex: 2617,
                  range: [
                    2643,
                    2645,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 125,
                    lnumStartIndex: 2617,
                    range: [
                      2646,
                      2649,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 125,
              lnumStartIndex: 2617,
              range: [
                2617,
                2623,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          TableConstructor {
            fieldlist: [
              TableValue {
                value: FunctionCallExpression {
                  args: [
                    UnaryExpression {
                      argument: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 126,
                          lnumStartIndex: 2651,
                          range: [
                            2665,
                            2666,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 126,
                        lnumStartIndex: 2651,
                        range: [
                          2664,
                          2665,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 126,
                        lnumStartIndex: 2651,
                        range: [
                          2668,
                          2669,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 126,
                        lnumStartIndex: 2651,
                        range: [
                          2671,
                          2672,
                        ],
                        type: "NumericLiteral",
                        value: "5",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 126,
                        lnumStartIndex: 2651,
                        range: [
                          2674,
                          2675,
                        ],
                        type: "NumericLiteral",
                        value: "7",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 126,
                      lnumStartIndex: 2651,
                      range: [
                        2657,
                        2663,
                      ],
                      type: "Identifier",
                      value: "select",
                    },
                  },
                },
              },
            ],
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 126,
              lnumStartIndex: 2651,
              range: [
                2651,
                2652,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 127,
                        lnumStartIndex: 2679,
                        range: [
                          2686,
                          2687,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 127,
                        lnumStartIndex: 2679,
                        range: [
                          2688,
                          2689,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 127,
                    lnumStartIndex: 2679,
                    range: [
                      2691,
                      2693,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 127,
                      lnumStartIndex: 2679,
                      range: [
                        2694,
                        2695,
                      ],
                      type: "NumericLiteral",
                      value: "5",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 127,
                  lnumStartIndex: 2679,
                  range: [
                    2696,
                    2699,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 127,
                        lnumStartIndex: 2679,
                        range: [
                          2700,
                          2701,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 127,
                        lnumStartIndex: 2679,
                        range: [
                          2702,
                          2703,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 127,
                    lnumStartIndex: 2679,
                    range: [
                      2705,
                      2707,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 127,
                      lnumStartIndex: 2679,
                      range: [
                        2708,
                        2709,
                      ],
                      type: "NumericLiteral",
                      value: "7",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 127,
                lnumStartIndex: 2679,
                range: [
                  2710,
                  2713,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 127,
                      lnumStartIndex: 2679,
                      range: [
                        2714,
                        2715,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 127,
                      lnumStartIndex: 2679,
                      range: [
                        2716,
                        2717,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 127,
                  lnumStartIndex: 2679,
                  range: [
                    2719,
                    2721,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 127,
                    lnumStartIndex: 2679,
                    range: [
                      2722,
                      2725,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 127,
              lnumStartIndex: 2679,
              range: [
                2679,
                2685,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 128,
                lnumStartIndex: 2727,
                range: [
                  2733,
                  2739,
                ],
                type: "Identifier",
                value: "select",
              },
            },
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 128,
                lnumStartIndex: 2727,
                range: [
                  2741,
                  2746,
                ],
                type: "NumericLiteral",
                value: "10000",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 128,
              lnumStartIndex: 2727,
              range: [
                2727,
                2732,
              ],
              type: "Identifier",
              value: "pcall",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 129,
                lnumStartIndex: 2748,
                range: [
                  2754,
                  2760,
                ],
                type: "Identifier",
                value: "select",
              },
            },
            UnaryExpression {
              argument: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 129,
                  lnumStartIndex: 2748,
                  range: [
                    2763,
                    2768,
                  ],
                  type: "NumericLiteral",
                  value: "10000",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 129,
                lnumStartIndex: 2748,
                range: [
                  2762,
                  2763,
                ],
                type: "Minus",
                value: "-",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 129,
              lnumStartIndex: 2748,
              range: [
                2748,
                2753,
              ],
              type: "Identifier",
              value: "pcall",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 131,
                lnumStartIndex: 2771,
                range: [
                  2777,
                  2781,
                ],
                type: "StringLiteral",
                value: "'OK'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 131,
              lnumStartIndex: 2771,
              range: [
                2771,
                2776,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
    ],
  },
}
`;
