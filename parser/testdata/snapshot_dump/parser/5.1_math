export const snapshot = {};

snapshot[`5.1_math 1`] = `
Chunk {
  block: Block {
    statements: [
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 1,
                lnumStartIndex: 0,
                range: [
                  6,
                  36,
                ],
                type: "StringLiteral",
                value: '"testing numbers and math lib"',
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 1,
              lnumStartIndex: 0,
              range: [
                0,
                5,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
      DoStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 4,
                    lnumStartIndex: 42,
                    range: [
                      60,
                      63,
                    ],
                    type: "StringLiteral",
                    value: '"2"',
                  },
                },
                StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 4,
                    lnumStartIndex: 42,
                    range: [
                      65,
                      72,
                    ],
                    type: "StringLiteral",
                    value: '" 3e0 "',
                  },
                },
                StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 4,
                    lnumStartIndex: 42,
                    range: [
                      74,
                      81,
                    ],
                    type: "StringLiteral",
                    value: '" 10  "',
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 4,
                    lnumStartIndex: 42,
                    range: [
                      50,
                      51,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 4,
                    lnumStartIndex: 42,
                    range: [
                      53,
                      54,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 4,
                    lnumStartIndex: 42,
                    range: [
                      56,
                      57,
                    ],
                    type: "Identifier",
                    value: "c",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: BinaryExpression {
                          left: BinaryExpression {
                            left: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 5,
                                lnumStartIndex: 82,
                                range: [
                                  91,
                                  92,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 5,
                              lnumStartIndex: 82,
                              range: [
                                93,
                                94,
                              ],
                              type: "Plus",
                              value: "+",
                            },
                            right: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 5,
                                lnumStartIndex: 82,
                                range: [
                                  95,
                                  96,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 5,
                            lnumStartIndex: 82,
                            range: [
                              97,
                              99,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 5,
                              lnumStartIndex: 82,
                              range: [
                                100,
                                101,
                              ],
                              type: "NumericLiteral",
                              value: "5",
                            },
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 5,
                          lnumStartIndex: 82,
                          range: [
                            102,
                            105,
                          ],
                          type: "And",
                          value: "and",
                        },
                        right: BinaryExpression {
                          left: UnaryExpression {
                            argument: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 5,
                                lnumStartIndex: 82,
                                range: [
                                  107,
                                  108,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 5,
                              lnumStartIndex: 82,
                              range: [
                                106,
                                107,
                              ],
                              type: "Minus",
                              value: "-",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 5,
                            lnumStartIndex: 82,
                            range: [
                              109,
                              111,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: UnaryExpression {
                            argument: NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 5,
                                lnumStartIndex: 82,
                                range: [
                                  113,
                                  114,
                                ],
                                type: "NumericLiteral",
                                value: "3",
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 5,
                              lnumStartIndex: 82,
                              range: [
                                112,
                                113,
                              ],
                              type: "Minus",
                              value: "-",
                            },
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 5,
                        lnumStartIndex: 82,
                        range: [
                          115,
                          118,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 5,
                              lnumStartIndex: 82,
                              range: [
                                119,
                                120,
                              ],
                              type: "Identifier",
                              value: "b",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 5,
                            lnumStartIndex: 82,
                            range: [
                              121,
                              122,
                            ],
                            type: "Plus",
                            value: "+",
                          },
                          right: StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 5,
                              lnumStartIndex: 82,
                              range: [
                                123,
                                126,
                              ],
                              type: "StringLiteral",
                              value: '"2"',
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 5,
                          lnumStartIndex: 82,
                          range: [
                            127,
                            129,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 5,
                            lnumStartIndex: 82,
                            range: [
                              130,
                              131,
                            ],
                            type: "NumericLiteral",
                            value: "5",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 5,
                      lnumStartIndex: 82,
                      range: [
                        132,
                        135,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: BinaryExpression {
                        left: StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 5,
                            lnumStartIndex: 82,
                            range: [
                              136,
                              140,
                            ],
                            type: "StringLiteral",
                            value: '"10"',
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 5,
                          lnumStartIndex: 82,
                          range: [
                            141,
                            142,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 5,
                            lnumStartIndex: 82,
                            range: [
                              143,
                              144,
                            ],
                            type: "Identifier",
                            value: "c",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 5,
                        lnumStartIndex: 82,
                        range: [
                          145,
                          147,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 5,
                          lnumStartIndex: 82,
                          range: [
                            148,
                            149,
                          ],
                          type: "NumericLiteral",
                          value: "0",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 5,
                    lnumStartIndex: 82,
                    range: [
                      84,
                      90,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: FunctionCallExpression {
                          args: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 6,
                                lnumStartIndex: 151,
                                range: [
                                  165,
                                  166,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 6,
                              lnumStartIndex: 151,
                              range: [
                                160,
                                164,
                              ],
                              type: "Identifier",
                              value: "type",
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 6,
                          lnumStartIndex: 151,
                          range: [
                            168,
                            170,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 6,
                            lnumStartIndex: 151,
                            range: [
                              171,
                              179,
                            ],
                            type: "StringLiteral",
                            value: "'string'",
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 6,
                        lnumStartIndex: 151,
                        range: [
                          180,
                          183,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: FunctionCallExpression {
                          args: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 6,
                                lnumStartIndex: 151,
                                range: [
                                  189,
                                  190,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                          ],
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 6,
                              lnumStartIndex: 151,
                              range: [
                                184,
                                188,
                              ],
                              type: "Identifier",
                              value: "type",
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 6,
                          lnumStartIndex: 151,
                          range: [
                            192,
                            194,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 6,
                            lnumStartIndex: 151,
                            range: [
                              195,
                              203,
                            ],
                            type: "StringLiteral",
                            value: "'string'",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 6,
                      lnumStartIndex: 151,
                      range: [
                        204,
                        207,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: FunctionCallExpression {
                        args: [
                          Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 6,
                              lnumStartIndex: 151,
                              range: [
                                213,
                                214,
                              ],
                              type: "Identifier",
                              value: "c",
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 6,
                            lnumStartIndex: 151,
                            range: [
                              208,
                              212,
                            ],
                            type: "Identifier",
                            value: "type",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 6,
                        lnumStartIndex: 151,
                        range: [
                          216,
                          218,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 6,
                          lnumStartIndex: 151,
                          range: [
                            219,
                            227,
                          ],
                          type: "StringLiteral",
                          value: "'string'",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 6,
                    lnumStartIndex: 151,
                    range: [
                      153,
                      159,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 7,
                              lnumStartIndex: 229,
                              range: [
                                238,
                                239,
                              ],
                              type: "Identifier",
                              value: "a",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 7,
                            lnumStartIndex: 229,
                            range: [
                              240,
                              242,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 7,
                              lnumStartIndex: 229,
                              range: [
                                243,
                                246,
                              ],
                              type: "StringLiteral",
                              value: '"2"',
                            },
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 7,
                          lnumStartIndex: 229,
                          range: [
                            247,
                            250,
                          ],
                          type: "And",
                          value: "and",
                        },
                        right: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 7,
                              lnumStartIndex: 229,
                              range: [
                                251,
                                252,
                              ],
                              type: "Identifier",
                              value: "b",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 7,
                            lnumStartIndex: 229,
                            range: [
                              253,
                              255,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 7,
                              lnumStartIndex: 229,
                              range: [
                                256,
                                263,
                              ],
                              type: "StringLiteral",
                              value: '" 3e0 "',
                            },
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 7,
                        lnumStartIndex: 229,
                        range: [
                          264,
                          267,
                        ],
                        type: "And",
                        value: "and",
                      },
                      right: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 7,
                            lnumStartIndex: 229,
                            range: [
                              268,
                              269,
                            ],
                            type: "Identifier",
                            value: "c",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 7,
                          lnumStartIndex: 229,
                          range: [
                            270,
                            272,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 7,
                            lnumStartIndex: 229,
                            range: [
                              273,
                              280,
                            ],
                            type: "StringLiteral",
                            value: '" 10  "',
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 7,
                      lnumStartIndex: 229,
                      range: [
                        281,
                        284,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: UnaryExpression {
                        argument: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 7,
                            lnumStartIndex: 229,
                            range: [
                              286,
                              287,
                            ],
                            type: "Identifier",
                            value: "c",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 7,
                          lnumStartIndex: 229,
                          range: [
                            285,
                            286,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 7,
                        lnumStartIndex: 229,
                        range: [
                          288,
                          290,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: UnaryExpression {
                        argument: StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 7,
                            lnumStartIndex: 229,
                            range: [
                              292,
                              299,
                            ],
                            type: "StringLiteral",
                            value: '"  10 "',
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 7,
                          lnumStartIndex: 229,
                          range: [
                            291,
                            292,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 7,
                    lnumStartIndex: 229,
                    range: [
                      231,
                      237,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 8,
                            lnumStartIndex: 301,
                            range: [
                              310,
                              311,
                            ],
                            type: "Identifier",
                            value: "c",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 301,
                          range: [
                            312,
                            313,
                          ],
                          type: "Percentage",
                          value: "%",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 8,
                            lnumStartIndex: 301,
                            range: [
                              314,
                              315,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 8,
                        lnumStartIndex: 301,
                        range: [
                          316,
                          318,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 301,
                          range: [
                            319,
                            320,
                          ],
                          type: "NumericLiteral",
                          value: "0",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 8,
                      lnumStartIndex: 301,
                      range: [
                        321,
                        324,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 8,
                            lnumStartIndex: 301,
                            range: [
                              325,
                              326,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 301,
                          range: [
                            327,
                            328,
                          ],
                          type: "Carrot",
                          value: "^",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 8,
                            lnumStartIndex: 301,
                            range: [
                              329,
                              330,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 8,
                        lnumStartIndex: 301,
                        range: [
                          331,
                          333,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 8,
                          lnumStartIndex: 301,
                          range: [
                            334,
                            335,
                          ],
                          type: "NumericLiteral",
                          value: "8",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 8,
                    lnumStartIndex: 301,
                    range: [
                      303,
                      309,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
      },
      DoStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 13,
                        lnumStartIndex: 346,
                        range: [
                          371,
                          374,
                        ],
                        type: "NumericLiteral",
                        value: "3.5",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 13,
                        lnumStartIndex: 346,
                        range: [
                          361,
                          365,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 13,
                        lnumStartIndex: 346,
                        range: [
                          366,
                          370,
                        ],
                        type: "Identifier",
                        value: "modf",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 13,
                    lnumStartIndex: 346,
                    range: [
                      354,
                      355,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 13,
                    lnumStartIndex: 346,
                    range: [
                      357,
                      358,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 14,
                          lnumStartIndex: 376,
                          range: [
                            385,
                            386,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 14,
                        lnumStartIndex: 376,
                        range: [
                          387,
                          389,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 14,
                          lnumStartIndex: 376,
                          range: [
                            390,
                            391,
                          ],
                          type: "NumericLiteral",
                          value: "3",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 14,
                      lnumStartIndex: 376,
                      range: [
                        392,
                        395,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 14,
                          lnumStartIndex: 376,
                          range: [
                            396,
                            397,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 14,
                        lnumStartIndex: 376,
                        range: [
                          398,
                          400,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 14,
                          lnumStartIndex: 376,
                          range: [
                            401,
                            404,
                          ],
                          type: "NumericLiteral",
                          value: "0.5",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 14,
                    lnumStartIndex: 376,
                    range: [
                      378,
                      384,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 15,
                          lnumStartIndex: 406,
                          range: [
                            415,
                            419,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 15,
                          lnumStartIndex: 406,
                          range: [
                            420,
                            424,
                          ],
                          type: "Identifier",
                          value: "huge",
                        },
                      },
                      indexer: ".",
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 15,
                      lnumStartIndex: 406,
                      range: [
                        425,
                        426,
                      ],
                      type: "GreaterThan",
                      value: ">",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 15,
                        lnumStartIndex: 406,
                        range: [
                          427,
                          432,
                        ],
                        type: "NumericLiteral",
                        value: "10e30",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 15,
                    lnumStartIndex: 406,
                    range: [
                      408,
                      414,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: UnaryExpression {
                      argument: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 16,
                            lnumStartIndex: 434,
                            range: [
                              444,
                              448,
                            ],
                            type: "Identifier",
                            value: "math",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 16,
                            lnumStartIndex: 434,
                            range: [
                              449,
                              453,
                            ],
                            type: "Identifier",
                            value: "huge",
                          },
                        },
                        indexer: ".",
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 16,
                        lnumStartIndex: 434,
                        range: [
                          443,
                          444,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 16,
                      lnumStartIndex: 434,
                      range: [
                        454,
                        455,
                      ],
                      type: "LessThan",
                      value: "<",
                    },
                    right: UnaryExpression {
                      argument: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 16,
                          lnumStartIndex: 434,
                          range: [
                            457,
                            462,
                          ],
                          type: "NumericLiteral",
                          value: "10e30",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 16,
                        lnumStartIndex: 434,
                        range: [
                          456,
                          457,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 16,
                    lnumStartIndex: 434,
                    range: [
                      436,
                      442,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            IfStatement {
              elseBlock: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 23,
                          lnumStartIndex: 541,
                          range: [
                            552,
                            557,
                          ],
                          type: "StringLiteral",
                          value: '"***"',
                        },
                      },
                    ],
                  },
                ],
              },
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      GroupingExpression {
                        expression: VarargLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 21,
                            lnumStartIndex: 517,
                            range: [
                              529,
                              532,
                            ],
                            type: "VarargLiteral",
                            value: "...",
                          },
                        },
                      },
                    ],
                  },
                ],
              },
              ifCondition: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 20,
                        lnumStartIndex: 485,
                        range: [
                          497,
                          500,
                        ],
                        type: "StringLiteral",
                        value: "'#'",
                      },
                    },
                    VarargLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 20,
                        lnumStartIndex: 485,
                        range: [
                          502,
                          505,
                        ],
                        type: "VarargLiteral",
                        value: "...",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 20,
                      lnumStartIndex: 485,
                      range: [
                        490,
                        496,
                      ],
                      type: "Identifier",
                      value: "select",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 20,
                  lnumStartIndex: 485,
                  range: [
                    507,
                    509,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 20,
                    lnumStartIndex: 485,
                    range: [
                      510,
                      511,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 19,
            lnumStartIndex: 469,
            range: [
              478,
              479,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 19,
              lnumStartIndex: 469,
              range: [
                480,
                483,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  TableConstructor {
                    fieldlist: [
                    ],
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 27,
                    lnumStartIndex: 569,
                    range: [
                      576,
                      584,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 27,
                lnumStartIndex: 569,
                range: [
                  588,
                  590,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 27,
                  lnumStartIndex: 569,
                  range: [
                    591,
                    594,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 27,
              lnumStartIndex: 569,
              range: [
                569,
                575,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: FunctionCallExpression {
                        args: [
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 28,
                              lnumStartIndex: 596,
                              range: [
                                612,
                                619,
                              ],
                              type: "StringLiteral",
                              value: "'+0.01'",
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 28,
                            lnumStartIndex: 596,
                            range: [
                              603,
                              611,
                            ],
                            type: "Identifier",
                            value: "tonumber",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 28,
                        lnumStartIndex: 596,
                        range: [
                          620,
                          622,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: BinaryExpression {
                        left: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 28,
                            lnumStartIndex: 596,
                            range: [
                              623,
                              624,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 28,
                          lnumStartIndex: 596,
                          range: [
                            625,
                            626,
                          ],
                          type: "Divide",
                          value: "/",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 28,
                            lnumStartIndex: 596,
                            range: [
                              627,
                              630,
                            ],
                            type: "NumericLiteral",
                            value: "100",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 28,
                      lnumStartIndex: 596,
                      range: [
                        631,
                        634,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: FunctionCallExpression {
                        args: [
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 28,
                              lnumStartIndex: 596,
                              range: [
                                644,
                                650,
                              ],
                              type: "StringLiteral",
                              value: "'+.01'",
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 28,
                            lnumStartIndex: 596,
                            range: [
                              635,
                              643,
                            ],
                            type: "Identifier",
                            value: "tonumber",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 28,
                        lnumStartIndex: 596,
                        range: [
                          651,
                          653,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 28,
                          lnumStartIndex: 596,
                          range: [
                            654,
                            658,
                          ],
                          type: "NumericLiteral",
                          value: "0.01",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 28,
                    lnumStartIndex: 596,
                    range: [
                      659,
                      662,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 29,
                            lnumStartIndex: 663,
                            range: [
                              674,
                              679,
                            ],
                            type: "StringLiteral",
                            value: "'.01'",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 29,
                          lnumStartIndex: 663,
                          range: [
                            665,
                            673,
                          ],
                          type: "Identifier",
                          value: "tonumber",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 29,
                      lnumStartIndex: 663,
                      range: [
                        680,
                        682,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 29,
                        lnumStartIndex: 663,
                        range: [
                          683,
                          687,
                        ],
                        type: "NumericLiteral",
                        value: "0.01",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 29,
                  lnumStartIndex: 663,
                  range: [
                    688,
                    691,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 29,
                          lnumStartIndex: 663,
                          range: [
                            701,
                            706,
                          ],
                          type: "StringLiteral",
                          value: "'-1.'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 29,
                        lnumStartIndex: 663,
                        range: [
                          692,
                          700,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 29,
                    lnumStartIndex: 663,
                    range: [
                      707,
                      709,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: UnaryExpression {
                    argument: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 29,
                        lnumStartIndex: 663,
                        range: [
                          711,
                          712,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 29,
                      lnumStartIndex: 663,
                      range: [
                        710,
                        711,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 29,
                lnumStartIndex: 663,
                range: [
                  713,
                  716,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 30,
                        lnumStartIndex: 717,
                        range: [
                          728,
                          733,
                        ],
                        type: "StringLiteral",
                        value: "'+1.'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 30,
                      lnumStartIndex: 717,
                      range: [
                        719,
                        727,
                      ],
                      type: "Identifier",
                      value: "tonumber",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 30,
                  lnumStartIndex: 717,
                  range: [
                    734,
                    736,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 30,
                    lnumStartIndex: 717,
                    range: [
                      737,
                      738,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 28,
              lnumStartIndex: 596,
              range: [
                596,
                602,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: FunctionCallExpression {
                        args: [
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 31,
                              lnumStartIndex: 740,
                              range: [
                                756,
                                764,
                              ],
                              type: "StringLiteral",
                              value: "'+ 0.01'",
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 31,
                            lnumStartIndex: 740,
                            range: [
                              747,
                              755,
                            ],
                            type: "Identifier",
                            value: "tonumber",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 31,
                        lnumStartIndex: 740,
                        range: [
                          765,
                          767,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 31,
                          lnumStartIndex: 740,
                          range: [
                            768,
                            771,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 31,
                      lnumStartIndex: 740,
                      range: [
                        772,
                        775,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: FunctionCallExpression {
                        args: [
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 31,
                              lnumStartIndex: 740,
                              range: [
                                785,
                                791,
                              ],
                              type: "StringLiteral",
                              value: "'+.e1'",
                            },
                          },
                        ],
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 31,
                            lnumStartIndex: 740,
                            range: [
                              776,
                              784,
                            ],
                            type: "Identifier",
                            value: "tonumber",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 31,
                        lnumStartIndex: 740,
                        range: [
                          792,
                          794,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 31,
                          lnumStartIndex: 740,
                          range: [
                            795,
                            798,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 31,
                    lnumStartIndex: 740,
                    range: [
                      799,
                      802,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 32,
                            lnumStartIndex: 803,
                            range: [
                              814,
                              818,
                            ],
                            type: "StringLiteral",
                            value: "'1e'",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 32,
                          lnumStartIndex: 803,
                          range: [
                            805,
                            813,
                          ],
                          type: "Identifier",
                          value: "tonumber",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 32,
                      lnumStartIndex: 803,
                      range: [
                        819,
                        821,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 32,
                        lnumStartIndex: 803,
                        range: [
                          822,
                          825,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 32,
                  lnumStartIndex: 803,
                  range: [
                    826,
                    829,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 32,
                          lnumStartIndex: 803,
                          range: [
                            839,
                            846,
                          ],
                          type: "StringLiteral",
                          value: "'1.0e+'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 32,
                        lnumStartIndex: 803,
                        range: [
                          830,
                          838,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 32,
                    lnumStartIndex: 803,
                    range: [
                      847,
                      849,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NilLiteral {
                    token: {
                      isKeyword: true,
                      lnum: 32,
                      lnumStartIndex: 803,
                      range: [
                        850,
                        853,
                      ],
                      type: "NilLiteral",
                      value: "nil",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 32,
                lnumStartIndex: 803,
                range: [
                  854,
                  857,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 33,
                        lnumStartIndex: 858,
                        range: [
                          869,
                          872,
                        ],
                        type: "StringLiteral",
                        value: "'.'",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 33,
                      lnumStartIndex: 858,
                      range: [
                        860,
                        868,
                      ],
                      type: "Identifier",
                      value: "tonumber",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 33,
                  lnumStartIndex: 858,
                  range: [
                    873,
                    875,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NilLiteral {
                  token: {
                    isKeyword: true,
                    lnum: 33,
                    lnumStartIndex: 858,
                    range: [
                      876,
                      879,
                    ],
                    type: "NilLiteral",
                    value: "nil",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 31,
              lnumStartIndex: 740,
              range: [
                740,
                746,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 34,
                      lnumStartIndex: 881,
                      range: [
                        897,
                        902,
                      ],
                      type: "StringLiteral",
                      value: "'-12'",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 34,
                    lnumStartIndex: 881,
                    range: [
                      888,
                      896,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 34,
                lnumStartIndex: 881,
                range: [
                  904,
                  906,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 34,
                      lnumStartIndex: 881,
                      range: [
                        908,
                        910,
                      ],
                      type: "NumericLiteral",
                      value: "10",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 34,
                    lnumStartIndex: 881,
                    range: [
                      907,
                      908,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 34,
                  lnumStartIndex: 881,
                  range: [
                    911,
                    912,
                  ],
                  type: "Minus",
                  value: "-",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 34,
                    lnumStartIndex: 881,
                    range: [
                      913,
                      914,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 34,
              lnumStartIndex: 881,
              range: [
                881,
                887,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 35,
                      lnumStartIndex: 916,
                      range: [
                        932,
                        940,
                      ],
                      type: "StringLiteral",
                      value: "'-1.2e2'",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 35,
                    lnumStartIndex: 916,
                    range: [
                      923,
                      931,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 35,
                lnumStartIndex: 916,
                range: [
                  942,
                  944,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: UnaryExpression {
                argument: UnaryExpression {
                  argument: UnaryExpression {
                    argument: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 35,
                        lnumStartIndex: 916,
                        range: [
                          950,
                          953,
                        ],
                        type: "NumericLiteral",
                        value: "120",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 35,
                      lnumStartIndex: 916,
                      range: [
                        949,
                        950,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 35,
                    lnumStartIndex: 916,
                    range: [
                      947,
                      948,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 35,
                  lnumStartIndex: 916,
                  range: [
                    945,
                    946,
                  ],
                  type: "Minus",
                  value: "-",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 35,
              lnumStartIndex: 916,
              range: [
                916,
                922,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 36,
                          lnumStartIndex: 955,
                          range: [
                            973,
                            979,
                          ],
                          type: "StringLiteral",
                          value: "'1  a'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 36,
                        lnumStartIndex: 955,
                        range: [
                          964,
                          972,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 36,
                    lnumStartIndex: 955,
                    range: [
                      962,
                      963,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 36,
                lnumStartIndex: 955,
                range: [
                  982,
                  984,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 36,
                  lnumStartIndex: 955,
                  range: [
                    985,
                    988,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 36,
              lnumStartIndex: 955,
              range: [
                955,
                961,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 37,
                          lnumStartIndex: 990,
                          range: [
                            1008,
                            1012,
                          ],
                          type: "StringLiteral",
                          value: "'e1'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 37,
                        lnumStartIndex: 990,
                        range: [
                          999,
                          1007,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 37,
                    lnumStartIndex: 990,
                    range: [
                      997,
                      998,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 37,
                lnumStartIndex: 990,
                range: [
                  1015,
                  1017,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 37,
                  lnumStartIndex: 990,
                  range: [
                    1018,
                    1021,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 37,
              lnumStartIndex: 990,
              range: [
                990,
                996,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 38,
                          lnumStartIndex: 1023,
                          range: [
                            1041,
                            1047,
                          ],
                          type: "StringLiteral",
                          value: "'e  1'",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 38,
                        lnumStartIndex: 1023,
                        range: [
                          1032,
                          1040,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 38,
                    lnumStartIndex: 1023,
                    range: [
                      1030,
                      1031,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 1023,
                range: [
                  1050,
                  1052,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 38,
                  lnumStartIndex: 1023,
                  range: [
                    1053,
                    1056,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 38,
              lnumStartIndex: 1023,
              range: [
                1023,
                1029,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 39,
                          lnumStartIndex: 1058,
                          range: [
                            1076,
                            1085,
                          ],
                          type: "StringLiteral",
                          value: "' 3.4.5 '",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 39,
                        lnumStartIndex: 1058,
                        range: [
                          1067,
                          1075,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 39,
                    lnumStartIndex: 1058,
                    range: [
                      1065,
                      1066,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 39,
                lnumStartIndex: 1058,
                range: [
                  1088,
                  1090,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 39,
                  lnumStartIndex: 1058,
                  range: [
                    1091,
                    1094,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 39,
              lnumStartIndex: 1058,
              range: [
                1058,
                1064,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 40,
                          lnumStartIndex: 1096,
                          range: [
                            1114,
                            1116,
                          ],
                          type: "StringLiteral",
                          value: "''",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 40,
                        lnumStartIndex: 1096,
                        range: [
                          1105,
                          1113,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 40,
                    lnumStartIndex: 1096,
                    range: [
                      1103,
                      1104,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 40,
                lnumStartIndex: 1096,
                range: [
                  1119,
                  1121,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 40,
                  lnumStartIndex: 1096,
                  range: [
                    1122,
                    1125,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 40,
              lnumStartIndex: 1096,
              range: [
                1096,
                1102,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 41,
                          lnumStartIndex: 1127,
                          range: [
                            1145,
                            1147,
                          ],
                          type: "StringLiteral",
                          value: "''",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 41,
                          lnumStartIndex: 1127,
                          range: [
                            1149,
                            1150,
                          ],
                          type: "NumericLiteral",
                          value: "8",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 41,
                        lnumStartIndex: 1127,
                        range: [
                          1136,
                          1144,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 41,
                    lnumStartIndex: 1127,
                    range: [
                      1134,
                      1135,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 41,
                lnumStartIndex: 1127,
                range: [
                  1153,
                  1155,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 41,
                  lnumStartIndex: 1127,
                  range: [
                    1156,
                    1159,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 41,
              lnumStartIndex: 1127,
              range: [
                1127,
                1133,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 42,
                          lnumStartIndex: 1161,
                          range: [
                            1179,
                            1183,
                          ],
                          type: "StringLiteral",
                          value: "'  '",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 42,
                        lnumStartIndex: 1161,
                        range: [
                          1170,
                          1178,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 42,
                    lnumStartIndex: 1161,
                    range: [
                      1168,
                      1169,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 42,
                lnumStartIndex: 1161,
                range: [
                  1186,
                  1188,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 42,
                  lnumStartIndex: 1161,
                  range: [
                    1189,
                    1192,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 42,
              lnumStartIndex: 1161,
              range: [
                1161,
                1167,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 43,
                          lnumStartIndex: 1194,
                          range: [
                            1212,
                            1216,
                          ],
                          type: "StringLiteral",
                          value: "'  '",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 43,
                          lnumStartIndex: 1194,
                          range: [
                            1218,
                            1219,
                          ],
                          type: "NumericLiteral",
                          value: "9",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 43,
                        lnumStartIndex: 1194,
                        range: [
                          1203,
                          1211,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 43,
                    lnumStartIndex: 1194,
                    range: [
                      1201,
                      1202,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 43,
                lnumStartIndex: 1194,
                range: [
                  1222,
                  1224,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 43,
                  lnumStartIndex: 1194,
                  range: [
                    1225,
                    1228,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 43,
              lnumStartIndex: 1194,
              range: [
                1194,
                1200,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 44,
                          lnumStartIndex: 1230,
                          range: [
                            1248,
                            1252,
                          ],
                          type: "StringLiteral",
                          value: "'99'",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 44,
                          lnumStartIndex: 1230,
                          range: [
                            1254,
                            1255,
                          ],
                          type: "NumericLiteral",
                          value: "8",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 44,
                        lnumStartIndex: 1230,
                        range: [
                          1239,
                          1247,
                        ],
                        type: "Identifier",
                        value: "tonumber",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 44,
                    lnumStartIndex: 1230,
                    range: [
                      1237,
                      1238,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 44,
                lnumStartIndex: 1230,
                range: [
                  1258,
                  1260,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 44,
                  lnumStartIndex: 1230,
                  range: [
                    1261,
                    1264,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 44,
              lnumStartIndex: 1230,
              range: [
                1230,
                1236,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 45,
                      lnumStartIndex: 1266,
                      range: [
                        1282,
                        1292,
                      ],
                      type: "StringLiteral",
                      value: "'  1010  '",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 45,
                      lnumStartIndex: 1266,
                      range: [
                        1294,
                        1295,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 45,
                    lnumStartIndex: 1266,
                    range: [
                      1273,
                      1281,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 45,
                lnumStartIndex: 1266,
                range: [
                  1297,
                  1299,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 45,
                  lnumStartIndex: 1266,
                  range: [
                    1300,
                    1302,
                  ],
                  type: "NumericLiteral",
                  value: "10",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 45,
              lnumStartIndex: 1266,
              range: [
                1266,
                1272,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 46,
                      lnumStartIndex: 1304,
                      range: [
                        1320,
                        1324,
                      ],
                      type: "StringLiteral",
                      value: "'10'",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 46,
                      lnumStartIndex: 1304,
                      range: [
                        1326,
                        1328,
                      ],
                      type: "NumericLiteral",
                      value: "36",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 46,
                    lnumStartIndex: 1304,
                    range: [
                      1311,
                      1319,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 46,
                lnumStartIndex: 1304,
                range: [
                  1330,
                  1332,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 46,
                  lnumStartIndex: 1304,
                  range: [
                    1333,
                    1335,
                  ],
                  type: "NumericLiteral",
                  value: "36",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 46,
              lnumStartIndex: 1304,
              range: [
                1304,
                1310,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 49,
                      lnumStartIndex: 1451,
                      range: [
                        1467,
                        1473,
                      ],
                      type: "StringLiteral",
                      value: "'fFfa'",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 49,
                      lnumStartIndex: 1451,
                      range: [
                        1475,
                        1477,
                      ],
                      type: "NumericLiteral",
                      value: "15",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 49,
                    lnumStartIndex: 1451,
                    range: [
                      1458,
                      1466,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 49,
                lnumStartIndex: 1451,
                range: [
                  1479,
                  1481,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NilLiteral {
                token: {
                  isKeyword: true,
                  lnum: 49,
                  lnumStartIndex: 1451,
                  range: [
                    1482,
                    1485,
                  ],
                  type: "NilLiteral",
                  value: "nil",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 49,
              lnumStartIndex: 1451,
              range: [
                1451,
                1457,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    FunctionCallExpression {
                      args: [
                        StringLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 51,
                            lnumStartIndex: 1542,
                            range: [
                              1569,
                              1572,
                            ],
                            type: "StringLiteral",
                            value: "'1'",
                          },
                        },
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 51,
                            lnumStartIndex: 1542,
                            range: [
                              1574,
                              1576,
                            ],
                            type: "NumericLiteral",
                            value: "32",
                          },
                        },
                      ],
                      base: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 51,
                            lnumStartIndex: 1542,
                            range: [
                              1558,
                              1564,
                            ],
                            type: "Identifier",
                            value: "string",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 51,
                            lnumStartIndex: 1542,
                            range: [
                              1565,
                              1568,
                            ],
                            type: "Identifier",
                            value: "rep",
                          },
                        },
                        indexer: ".",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 51,
                        lnumStartIndex: 1542,
                        range: [
                          1579,
                          1580,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 51,
                      lnumStartIndex: 1542,
                      range: [
                        1549,
                        1557,
                      ],
                      type: "Identifier",
                      value: "tonumber",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 51,
                  lnumStartIndex: 1542,
                  range: [
                    1582,
                    1583,
                  ],
                  type: "Plus",
                  value: "+",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 51,
                    lnumStartIndex: 1542,
                    range: [
                      1584,
                      1585,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 51,
                lnumStartIndex: 1542,
                range: [
                  1586,
                  1588,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 51,
                    lnumStartIndex: 1542,
                    range: [
                      1589,
                      1590,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 51,
                  lnumStartIndex: 1542,
                  range: [
                    1591,
                    1592,
                  ],
                  type: "Carrot",
                  value: "^",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 51,
                    lnumStartIndex: 1542,
                    range: [
                      1593,
                      1595,
                    ],
                    type: "NumericLiteral",
                    value: "32",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 51,
              lnumStartIndex: 1542,
              range: [
                1542,
                1548,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 53,
                        lnumStartIndex: 1646,
                        range: [
                          1662,
                          1672,
                        ],
                        type: "StringLiteral",
                        value: "'ffffFFFF'",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 53,
                        lnumStartIndex: 1646,
                        range: [
                          1674,
                          1676,
                        ],
                        type: "NumericLiteral",
                        value: "16",
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 53,
                      lnumStartIndex: 1646,
                      range: [
                        1653,
                        1661,
                      ],
                      type: "Identifier",
                      value: "tonumber",
                    },
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 53,
                  lnumStartIndex: 1646,
                  range: [
                    1678,
                    1679,
                  ],
                  type: "Plus",
                  value: "+",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 53,
                    lnumStartIndex: 1646,
                    range: [
                      1680,
                      1681,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 53,
                lnumStartIndex: 1646,
                range: [
                  1682,
                  1684,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 53,
                    lnumStartIndex: 1646,
                    range: [
                      1685,
                      1686,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 53,
                  lnumStartIndex: 1646,
                  range: [
                    1687,
                    1688,
                  ],
                  type: "Carrot",
                  value: "^",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 53,
                    lnumStartIndex: 1646,
                    range: [
                      1689,
                      1691,
                    ],
                    type: "NumericLiteral",
                    value: "32",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 53,
              lnumStartIndex: 1646,
              range: [
                1646,
                1652,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 55,
                  lnumStartIndex: 1694,
                  range: [
                    1701,
                    1704,
                  ],
                  type: "NumericLiteral",
                  value: "1.1",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 55,
                lnumStartIndex: 1694,
                range: [
                  1705,
                  1707,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 55,
                    lnumStartIndex: 1694,
                    range: [
                      1708,
                      1710,
                    ],
                    type: "NumericLiteral",
                    value: "1.",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 55,
                  lnumStartIndex: 1694,
                  range: [
                    1711,
                    1712,
                  ],
                  type: "Plus",
                  value: "+",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 55,
                    lnumStartIndex: 1694,
                    range: [
                      1713,
                      1715,
                    ],
                    type: "NumericLiteral",
                    value: ".1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 55,
              lnumStartIndex: 1694,
              range: [
                1694,
                1700,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 56,
                    lnumStartIndex: 1717,
                    range: [
                      1724,
                      1729,
                    ],
                    type: "NumericLiteral",
                    value: "100.0",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 56,
                  lnumStartIndex: 1717,
                  range: [
                    1730,
                    1732,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 56,
                    lnumStartIndex: 1717,
                    range: [
                      1733,
                      1736,
                    ],
                    type: "NumericLiteral",
                    value: "1E2",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 56,
                lnumStartIndex: 1717,
                range: [
                  1737,
                  1740,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 56,
                    lnumStartIndex: 1717,
                    range: [
                      1741,
                      1744,
                    ],
                    type: "NumericLiteral",
                    value: ".01",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 56,
                  lnumStartIndex: 1717,
                  range: [
                    1745,
                    1747,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 56,
                    lnumStartIndex: 1717,
                    range: [
                      1748,
                      1752,
                    ],
                    type: "NumericLiteral",
                    value: "1e-2",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 56,
              lnumStartIndex: 1717,
              range: [
                1717,
                1723,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 57,
                    lnumStartIndex: 1754,
                    range: [
                      1761,
                      1777,
                    ],
                    type: "NumericLiteral",
                    value: "1111111111111111",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 57,
                  lnumStartIndex: 1754,
                  range: [
                    1778,
                    1779,
                  ],
                  type: "Minus",
                  value: "-",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 57,
                    lnumStartIndex: 1754,
                    range: [
                      1780,
                      1796,
                    ],
                    type: "NumericLiteral",
                    value: "1111111111111110",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 57,
                lnumStartIndex: 1754,
                range: [
                  1797,
                  1799,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 57,
                  lnumStartIndex: 1754,
                  range: [
                    1800,
                    1811,
                  ],
                  type: "NumericLiteral",
                  value: "1000.00e-03",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 57,
              lnumStartIndex: 1754,
              range: [
                1754,
                1760,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 59,
                  lnumStartIndex: 1837,
                  range: [
                    1844,
                    1847,
                  ],
                  type: "NumericLiteral",
                  value: "1.1",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 59,
                lnumStartIndex: 1837,
                range: [
                  1848,
                  1850,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 59,
                    lnumStartIndex: 1837,
                    range: [
                      1851,
                      1855,
                    ],
                    type: "StringLiteral",
                    value: "'1.'",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 59,
                  lnumStartIndex: 1837,
                  range: [
                    1856,
                    1857,
                  ],
                  type: "Plus",
                  value: "+",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 59,
                    lnumStartIndex: 1837,
                    range: [
                      1858,
                      1862,
                    ],
                    type: "StringLiteral",
                    value: "'.1'",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 59,
              lnumStartIndex: 1837,
              range: [
                1837,
                1843,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 60,
                    lnumStartIndex: 1864,
                    range: [
                      1871,
                      1889,
                    ],
                    type: "StringLiteral",
                    value: "'1111111111111111'",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 60,
                  lnumStartIndex: 1864,
                  range: [
                    1890,
                    1891,
                  ],
                  type: "Minus",
                  value: "-",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 60,
                    lnumStartIndex: 1864,
                    range: [
                      1892,
                      1910,
                    ],
                    type: "StringLiteral",
                    value: "'1111111111111110'",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 60,
                lnumStartIndex: 1864,
                range: [
                  1911,
                  1913,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 60,
                      lnumStartIndex: 1864,
                      range: [
                        1923,
                        1941,
                      ],
                      type: "StringLiteral",
                      value: '"  +0.001e+3 \\
\\\\t"',
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 60,
                    lnumStartIndex: 1864,
                    range: [
                      1914,
                      1922,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 60,
              lnumStartIndex: 1864,
              range: [
                1864,
                1870,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            IfStatement {
              elseBlock: null,
              elseifBlocks: [
              ],
              elseifConditions: [
              ],
              ifBlock: Block {
                statements: [
                  AssignmentStatement {
                    init: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 63,
                          lnumStartIndex: 1969,
                          range: [
                            1997,
                            2003,
                          ],
                          type: "NumericLiteral",
                          value: "10E-10",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 63,
                          lnumStartIndex: 1969,
                          range: [
                            1989,
                            1994,
                          ],
                          type: "Identifier",
                          value: "limit",
                        },
                      },
                    ],
                  },
                ],
              },
              ifCondition: UnaryExpression {
                argument: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 63,
                    lnumStartIndex: 1969,
                    range: [
                      1978,
                      1983,
                    ],
                    type: "Identifier",
                    value: "limit",
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 63,
                  lnumStartIndex: 1969,
                  range: [
                    1974,
                    1977,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
            },
            ReturnStatement {
              arguments: [
                BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 64,
                            lnumStartIndex: 2008,
                            range: [
                              2026,
                              2027,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 64,
                          lnumStartIndex: 2008,
                          range: [
                            2028,
                            2029,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 64,
                            lnumStartIndex: 2008,
                            range: [
                              2030,
                              2031,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 64,
                          lnumStartIndex: 2008,
                          range: [
                            2017,
                            2021,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 64,
                          lnumStartIndex: 2008,
                          range: [
                            2022,
                            2025,
                          ],
                          type: "Identifier",
                          value: "abs",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 64,
                    lnumStartIndex: 2008,
                    range: [
                      2033,
                      2035,
                    ],
                    type: "LessThanEqual",
                    value: "<=",
                  },
                  right: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 64,
                      lnumStartIndex: 2008,
                      range: [
                        2036,
                        2041,
                      ],
                      type: "Identifier",
                      value: "limit",
                    },
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 62,
            lnumStartIndex: 1944,
            range: [
              1953,
              1955,
            ],
            type: "Identifier",
            value: "eq",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 62,
              lnumStartIndex: 1944,
              range: [
                1956,
                1957,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 62,
              lnumStartIndex: 1944,
              range: [
                1959,
                1960,
              ],
              type: "Identifier",
              value: "b",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 62,
              lnumStartIndex: 1944,
              range: [
                1962,
                1967,
              ],
              type: "Identifier",
              value: "limit",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 67,
                    lnumStartIndex: 2047,
                    range: [
                      2054,
                      2061,
                    ],
                    type: "NumericLiteral",
                    value: "0.1e-30",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 67,
                  lnumStartIndex: 2047,
                  range: [
                    2062,
                    2063,
                  ],
                  type: "GreaterThan",
                  value: ">",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 67,
                    lnumStartIndex: 2047,
                    range: [
                      2064,
                      2071,
                    ],
                    type: "NumericLiteral",
                    value: "0.9E-31",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 67,
                lnumStartIndex: 2047,
                range: [
                  2072,
                  2075,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 67,
                    lnumStartIndex: 2047,
                    range: [
                      2076,
                      2082,
                    ],
                    type: "NumericLiteral",
                    value: "0.9E30",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 67,
                  lnumStartIndex: 2047,
                  range: [
                    2083,
                    2084,
                  ],
                  type: "LessThan",
                  value: "<",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 67,
                    lnumStartIndex: 2047,
                    range: [
                      2085,
                      2091,
                    ],
                    type: "NumericLiteral",
                    value: "0.1e31",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 67,
              lnumStartIndex: 2047,
              range: [
                2047,
                2053,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 69,
                  lnumStartIndex: 2094,
                  range: [
                    2101,
                    2109,
                  ],
                  type: "NumericLiteral",
                  value: "0.123456",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 69,
                lnumStartIndex: 2094,
                range: [
                  2110,
                  2111,
                ],
                type: "GreaterThan",
                value: ">",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 69,
                  lnumStartIndex: 2094,
                  range: [
                    2112,
                    2120,
                  ],
                  type: "NumericLiteral",
                  value: "0.123455",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 69,
              lnumStartIndex: 2094,
              range: [
                2094,
                2100,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 71,
                      lnumStartIndex: 2123,
                      range: [
                        2139,
                        2149,
                      ],
                      type: "StringLiteral",
                      value: "'+1.23E30'",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 71,
                    lnumStartIndex: 2123,
                    range: [
                      2130,
                      2138,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 71,
                lnumStartIndex: 2123,
                range: [
                  2151,
                  2153,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 71,
                    lnumStartIndex: 2123,
                    range: [
                      2154,
                      2158,
                    ],
                    type: "NumericLiteral",
                    value: "1.23",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 71,
                  lnumStartIndex: 2123,
                  range: [
                    2159,
                    2160,
                  ],
                  type: "Star",
                  value: "*",
                },
                right: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 71,
                      lnumStartIndex: 2123,
                      range: [
                        2161,
                        2163,
                      ],
                      type: "NumericLiteral",
                      value: "10",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 71,
                    lnumStartIndex: 2123,
                    range: [
                      2164,
                      2165,
                    ],
                    type: "Carrot",
                    value: "^",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 71,
                      lnumStartIndex: 2123,
                      range: [
                        2166,
                        2168,
                      ],
                      type: "NumericLiteral",
                      value: "30",
                    },
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 71,
              lnumStartIndex: 2123,
              range: [
                2123,
                2129,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 74,
                          lnumStartIndex: 2198,
                          range: [
                            2210,
                            2211,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 74,
                        lnumStartIndex: 2198,
                        range: [
                          2212,
                          2213,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 74,
                          lnumStartIndex: 2198,
                          range: [
                            2214,
                            2215,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 74,
                    lnumStartIndex: 2198,
                    range: [
                      2205,
                      2208,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 74,
                  lnumStartIndex: 2198,
                  range: [
                    2217,
                    2220,
                  ],
                  type: "And",
                  value: "and",
                },
                right: GroupingExpression {
                  expression: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 74,
                        lnumStartIndex: 2198,
                        range: [
                          2222,
                          2223,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 74,
                      lnumStartIndex: 2198,
                      range: [
                        2224,
                        2225,
                      ],
                      type: "LessThan",
                      value: "<",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 74,
                        lnumStartIndex: 2198,
                        range: [
                          2226,
                          2227,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 74,
                lnumStartIndex: 2198,
                range: [
                  2229,
                  2232,
                ],
                type: "And",
                value: "and",
              },
              right: UnaryExpression {
                argument: GroupingExpression {
                  expression: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 74,
                        lnumStartIndex: 2198,
                        range: [
                          2238,
                          2239,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 74,
                      lnumStartIndex: 2198,
                      range: [
                        2240,
                        2241,
                      ],
                      type: "LessThan",
                      value: "<",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 74,
                        lnumStartIndex: 2198,
                        range: [
                          2242,
                          2243,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 74,
                  lnumStartIndex: 2198,
                  range: [
                    2233,
                    2236,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 74,
              lnumStartIndex: 2198,
              range: [
                2198,
                2204,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 75,
                          lnumStartIndex: 2246,
                          range: [
                            2258,
                            2261,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 75,
                        lnumStartIndex: 2246,
                        range: [
                          2262,
                          2263,
                        ],
                        type: "LessThan",
                        value: "<",
                      },
                      right: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 75,
                          lnumStartIndex: 2246,
                          range: [
                            2264,
                            2267,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 75,
                    lnumStartIndex: 2246,
                    range: [
                      2253,
                      2256,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 75,
                  lnumStartIndex: 2246,
                  range: [
                    2269,
                    2272,
                  ],
                  type: "And",
                  value: "and",
                },
                right: GroupingExpression {
                  expression: BinaryExpression {
                    left: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 75,
                        lnumStartIndex: 2246,
                        range: [
                          2274,
                          2277,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 75,
                      lnumStartIndex: 2246,
                      range: [
                        2278,
                        2279,
                      ],
                      type: "LessThan",
                      value: "<",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 75,
                        lnumStartIndex: 2246,
                        range: [
                          2280,
                          2283,
                        ],
                        type: "StringLiteral",
                        value: "'b'",
                      },
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 75,
                lnumStartIndex: 2246,
                range: [
                  2285,
                  2288,
                ],
                type: "And",
                value: "and",
              },
              right: UnaryExpression {
                argument: GroupingExpression {
                  expression: BinaryExpression {
                    left: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 75,
                        lnumStartIndex: 2246,
                        range: [
                          2294,
                          2297,
                        ],
                        type: "StringLiteral",
                        value: "'b'",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 75,
                      lnumStartIndex: 2246,
                      range: [
                        2298,
                        2299,
                      ],
                      type: "LessThan",
                      value: "<",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 75,
                        lnumStartIndex: 2246,
                        range: [
                          2300,
                          2303,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 75,
                  lnumStartIndex: 2246,
                  range: [
                    2289,
                    2292,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 75,
              lnumStartIndex: 2246,
              range: [
                2246,
                2252,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 76,
                        lnumStartIndex: 2306,
                        range: [
                          2314,
                          2315,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 76,
                      lnumStartIndex: 2306,
                      range: [
                        2316,
                        2318,
                      ],
                      type: "LessThanEqual",
                      value: "<=",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 76,
                        lnumStartIndex: 2306,
                        range: [
                          2319,
                          2320,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 76,
                  lnumStartIndex: 2306,
                  range: [
                    2322,
                    2325,
                  ],
                  type: "And",
                  value: "and",
                },
                right: GroupingExpression {
                  expression: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 76,
                        lnumStartIndex: 2306,
                        range: [
                          2327,
                          2328,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 76,
                      lnumStartIndex: 2306,
                      range: [
                        2329,
                        2331,
                      ],
                      type: "LessThanEqual",
                      value: "<=",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 76,
                        lnumStartIndex: 2306,
                        range: [
                          2332,
                          2333,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 76,
                lnumStartIndex: 2306,
                range: [
                  2335,
                  2338,
                ],
                type: "And",
                value: "and",
              },
              right: UnaryExpression {
                argument: GroupingExpression {
                  expression: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 76,
                        lnumStartIndex: 2306,
                        range: [
                          2344,
                          2345,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 76,
                      lnumStartIndex: 2306,
                      range: [
                        2346,
                        2348,
                      ],
                      type: "LessThanEqual",
                      value: "<=",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 76,
                        lnumStartIndex: 2306,
                        range: [
                          2349,
                          2350,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 76,
                  lnumStartIndex: 2306,
                  range: [
                    2339,
                    2342,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 76,
              lnumStartIndex: 2306,
              range: [
                2306,
                2312,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 77,
                        lnumStartIndex: 2353,
                        range: [
                          2361,
                          2364,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 77,
                      lnumStartIndex: 2353,
                      range: [
                        2365,
                        2367,
                      ],
                      type: "LessThanEqual",
                      value: "<=",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 77,
                        lnumStartIndex: 2353,
                        range: [
                          2368,
                          2371,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 77,
                  lnumStartIndex: 2353,
                  range: [
                    2373,
                    2376,
                  ],
                  type: "And",
                  value: "and",
                },
                right: GroupingExpression {
                  expression: BinaryExpression {
                    left: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 77,
                        lnumStartIndex: 2353,
                        range: [
                          2378,
                          2381,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 77,
                      lnumStartIndex: 2353,
                      range: [
                        2382,
                        2384,
                      ],
                      type: "LessThanEqual",
                      value: "<=",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 77,
                        lnumStartIndex: 2353,
                        range: [
                          2385,
                          2388,
                        ],
                        type: "StringLiteral",
                        value: "'b'",
                      },
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 77,
                lnumStartIndex: 2353,
                range: [
                  2390,
                  2393,
                ],
                type: "And",
                value: "and",
              },
              right: UnaryExpression {
                argument: GroupingExpression {
                  expression: BinaryExpression {
                    left: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 77,
                        lnumStartIndex: 2353,
                        range: [
                          2399,
                          2402,
                        ],
                        type: "StringLiteral",
                        value: "'b'",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 77,
                      lnumStartIndex: 2353,
                      range: [
                        2403,
                        2405,
                      ],
                      type: "LessThanEqual",
                      value: "<=",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 77,
                        lnumStartIndex: 2353,
                        range: [
                          2406,
                          2409,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 77,
                  lnumStartIndex: 2353,
                  range: [
                    2394,
                    2397,
                  ],
                  type: "Not",
                  value: "not",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 77,
              lnumStartIndex: 2353,
              range: [
                2353,
                2359,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 78,
                          lnumStartIndex: 2412,
                          range: [
                            2424,
                            2425,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 78,
                        lnumStartIndex: 2412,
                        range: [
                          2426,
                          2427,
                        ],
                        type: "GreaterThan",
                        value: ">",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 78,
                          lnumStartIndex: 2412,
                          range: [
                            2428,
                            2429,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 78,
                    lnumStartIndex: 2412,
                    range: [
                      2419,
                      2422,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 78,
                  lnumStartIndex: 2412,
                  range: [
                    2431,
                    2434,
                  ],
                  type: "And",
                  value: "and",
                },
                right: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 78,
                          lnumStartIndex: 2412,
                          range: [
                            2440,
                            2441,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 78,
                        lnumStartIndex: 2412,
                        range: [
                          2442,
                          2443,
                        ],
                        type: "GreaterThan",
                        value: ">",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 78,
                          lnumStartIndex: 2412,
                          range: [
                            2444,
                            2445,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 78,
                    lnumStartIndex: 2412,
                    range: [
                      2435,
                      2438,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 78,
                lnumStartIndex: 2412,
                range: [
                  2447,
                  2450,
                ],
                type: "And",
                value: "and",
              },
              right: GroupingExpression {
                expression: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 78,
                      lnumStartIndex: 2412,
                      range: [
                        2452,
                        2453,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 78,
                    lnumStartIndex: 2412,
                    range: [
                      2454,
                      2455,
                    ],
                    type: "GreaterThan",
                    value: ">",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 78,
                      lnumStartIndex: 2412,
                      range: [
                        2456,
                        2457,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 78,
              lnumStartIndex: 2412,
              range: [
                2412,
                2418,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 79,
                          lnumStartIndex: 2460,
                          range: [
                            2472,
                            2475,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 79,
                        lnumStartIndex: 2460,
                        range: [
                          2476,
                          2477,
                        ],
                        type: "GreaterThan",
                        value: ">",
                      },
                      right: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 79,
                          lnumStartIndex: 2460,
                          range: [
                            2478,
                            2481,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 79,
                    lnumStartIndex: 2460,
                    range: [
                      2467,
                      2470,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 79,
                  lnumStartIndex: 2460,
                  range: [
                    2483,
                    2486,
                  ],
                  type: "And",
                  value: "and",
                },
                right: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 79,
                          lnumStartIndex: 2460,
                          range: [
                            2492,
                            2495,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 79,
                        lnumStartIndex: 2460,
                        range: [
                          2496,
                          2497,
                        ],
                        type: "GreaterThan",
                        value: ">",
                      },
                      right: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 79,
                          lnumStartIndex: 2460,
                          range: [
                            2498,
                            2501,
                          ],
                          type: "StringLiteral",
                          value: "'b'",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 79,
                    lnumStartIndex: 2460,
                    range: [
                      2487,
                      2490,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 79,
                lnumStartIndex: 2460,
                range: [
                  2503,
                  2506,
                ],
                type: "And",
                value: "and",
              },
              right: GroupingExpression {
                expression: BinaryExpression {
                  left: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 79,
                      lnumStartIndex: 2460,
                      range: [
                        2508,
                        2511,
                      ],
                      type: "StringLiteral",
                      value: "'b'",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 79,
                    lnumStartIndex: 2460,
                    range: [
                      2512,
                      2513,
                    ],
                    type: "GreaterThan",
                    value: ">",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 79,
                      lnumStartIndex: 2460,
                      range: [
                        2514,
                        2517,
                      ],
                      type: "StringLiteral",
                      value: "'a'",
                    },
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 79,
              lnumStartIndex: 2460,
              range: [
                2460,
                2466,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 80,
                        lnumStartIndex: 2520,
                        range: [
                          2528,
                          2529,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 80,
                      lnumStartIndex: 2520,
                      range: [
                        2530,
                        2532,
                      ],
                      type: "GreaterThanEqual",
                      value: ">=",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 80,
                        lnumStartIndex: 2520,
                        range: [
                          2533,
                          2534,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 80,
                  lnumStartIndex: 2520,
                  range: [
                    2536,
                    2539,
                  ],
                  type: "And",
                  value: "and",
                },
                right: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 80,
                          lnumStartIndex: 2520,
                          range: [
                            2545,
                            2546,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 80,
                        lnumStartIndex: 2520,
                        range: [
                          2547,
                          2549,
                        ],
                        type: "GreaterThanEqual",
                        value: ">=",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 80,
                          lnumStartIndex: 2520,
                          range: [
                            2550,
                            2551,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 80,
                    lnumStartIndex: 2520,
                    range: [
                      2540,
                      2543,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 80,
                lnumStartIndex: 2520,
                range: [
                  2553,
                  2556,
                ],
                type: "And",
                value: "and",
              },
              right: GroupingExpression {
                expression: BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 80,
                      lnumStartIndex: 2520,
                      range: [
                        2558,
                        2559,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 80,
                    lnumStartIndex: 2520,
                    range: [
                      2560,
                      2562,
                    ],
                    type: "GreaterThanEqual",
                    value: ">=",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 80,
                      lnumStartIndex: 2520,
                      range: [
                        2563,
                        2564,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 80,
              lnumStartIndex: 2520,
              range: [
                2520,
                2526,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: GroupingExpression {
                  expression: BinaryExpression {
                    left: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 81,
                        lnumStartIndex: 2567,
                        range: [
                          2575,
                          2578,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 81,
                      lnumStartIndex: 2567,
                      range: [
                        2579,
                        2581,
                      ],
                      type: "GreaterThanEqual",
                      value: ">=",
                    },
                    right: StringLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 81,
                        lnumStartIndex: 2567,
                        range: [
                          2582,
                          2585,
                        ],
                        type: "StringLiteral",
                        value: "'a'",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 81,
                  lnumStartIndex: 2567,
                  range: [
                    2587,
                    2590,
                  ],
                  type: "And",
                  value: "and",
                },
                right: UnaryExpression {
                  argument: GroupingExpression {
                    expression: BinaryExpression {
                      left: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 81,
                          lnumStartIndex: 2567,
                          range: [
                            2596,
                            2599,
                          ],
                          type: "StringLiteral",
                          value: "'a'",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 81,
                        lnumStartIndex: 2567,
                        range: [
                          2600,
                          2602,
                        ],
                        type: "GreaterThanEqual",
                        value: ">=",
                      },
                      right: StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 81,
                          lnumStartIndex: 2567,
                          range: [
                            2603,
                            2606,
                          ],
                          type: "StringLiteral",
                          value: "'b'",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 81,
                    lnumStartIndex: 2567,
                    range: [
                      2591,
                      2594,
                    ],
                    type: "Not",
                    value: "not",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 81,
                lnumStartIndex: 2567,
                range: [
                  2608,
                  2611,
                ],
                type: "And",
                value: "and",
              },
              right: GroupingExpression {
                expression: BinaryExpression {
                  left: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 81,
                      lnumStartIndex: 2567,
                      range: [
                        2613,
                        2616,
                      ],
                      type: "StringLiteral",
                      value: "'b'",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 81,
                    lnumStartIndex: 2567,
                    range: [
                      2617,
                      2619,
                    ],
                    type: "GreaterThanEqual",
                    value: ">=",
                  },
                  right: StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 81,
                      lnumStartIndex: 2567,
                      range: [
                        2620,
                        2623,
                      ],
                      type: "StringLiteral",
                      value: "'a'",
                    },
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 81,
              lnumStartIndex: 2567,
              range: [
                2567,
                2573,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 84,
                      lnumStartIndex: 2651,
                      range: [
                        2659,
                        2660,
                      ],
                      type: "NumericLiteral",
                      value: "4",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 84,
                    lnumStartIndex: 2651,
                    range: [
                      2658,
                      2659,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 84,
                  lnumStartIndex: 2651,
                  range: [
                    2661,
                    2662,
                  ],
                  type: "Percentage",
                  value: "%",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 84,
                    lnumStartIndex: 2651,
                    range: [
                      2663,
                      2664,
                    ],
                    type: "NumericLiteral",
                    value: "3",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 84,
                lnumStartIndex: 2651,
                range: [
                  2665,
                  2667,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 84,
                  lnumStartIndex: 2651,
                  range: [
                    2668,
                    2669,
                  ],
                  type: "NumericLiteral",
                  value: "2",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 84,
              lnumStartIndex: 2651,
              range: [
                2651,
                2657,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 85,
                    lnumStartIndex: 2671,
                    range: [
                      2678,
                      2679,
                    ],
                    type: "NumericLiteral",
                    value: "4",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 85,
                  lnumStartIndex: 2671,
                  range: [
                    2680,
                    2681,
                  ],
                  type: "Percentage",
                  value: "%",
                },
                right: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 85,
                      lnumStartIndex: 2671,
                      range: [
                        2683,
                        2684,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 85,
                    lnumStartIndex: 2671,
                    range: [
                      2682,
                      2683,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 85,
                lnumStartIndex: 2671,
                range: [
                  2685,
                  2687,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: UnaryExpression {
                argument: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 85,
                    lnumStartIndex: 2671,
                    range: [
                      2689,
                      2690,
                    ],
                    type: "NumericLiteral",
                    value: "2",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 85,
                  lnumStartIndex: 2671,
                  range: [
                    2688,
                    2689,
                  ],
                  type: "Minus",
                  value: "-",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 85,
              lnumStartIndex: 2671,
              range: [
                2671,
                2677,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 86,
                      lnumStartIndex: 2692,
                      range: [
                        2699,
                        2703,
                      ],
                      type: "Identifier",
                      value: "math",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 86,
                      lnumStartIndex: 2692,
                      range: [
                        2704,
                        2706,
                      ],
                      type: "Identifier",
                      value: "pi",
                    },
                  },
                  indexer: ".",
                },
                operator: {
                  isKeyword: false,
                  lnum: 86,
                  lnumStartIndex: 2692,
                  range: [
                    2707,
                    2708,
                  ],
                  type: "Minus",
                  value: "-",
                },
                right: BinaryExpression {
                  left: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 86,
                        lnumStartIndex: 2692,
                        range: [
                          2709,
                          2713,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 86,
                        lnumStartIndex: 2692,
                        range: [
                          2714,
                          2716,
                        ],
                        type: "Identifier",
                        value: "pi",
                      },
                    },
                    indexer: ".",
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 86,
                    lnumStartIndex: 2692,
                    range: [
                      2717,
                      2718,
                    ],
                    type: "Percentage",
                    value: "%",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 86,
                      lnumStartIndex: 2692,
                      range: [
                        2719,
                        2720,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 86,
                lnumStartIndex: 2692,
                range: [
                  2721,
                  2723,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 86,
                  lnumStartIndex: 2692,
                  range: [
                    2724,
                    2725,
                  ],
                  type: "NumericLiteral",
                  value: "3",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 86,
              lnumStartIndex: 2692,
              range: [
                2692,
                2698,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 87,
                      lnumStartIndex: 2727,
                      range: [
                        2734,
                        2738,
                      ],
                      type: "Identifier",
                      value: "math",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 87,
                      lnumStartIndex: 2727,
                      range: [
                        2739,
                        2741,
                      ],
                      type: "Identifier",
                      value: "pi",
                    },
                  },
                  indexer: ".",
                },
                operator: {
                  isKeyword: false,
                  lnum: 87,
                  lnumStartIndex: 2727,
                  range: [
                    2742,
                    2743,
                  ],
                  type: "Minus",
                  value: "-",
                },
                right: BinaryExpression {
                  left: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 87,
                        lnumStartIndex: 2727,
                        range: [
                          2744,
                          2748,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 87,
                        lnumStartIndex: 2727,
                        range: [
                          2749,
                          2751,
                        ],
                        type: "Identifier",
                        value: "pi",
                      },
                    },
                    indexer: ".",
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 87,
                    lnumStartIndex: 2727,
                    range: [
                      2752,
                      2753,
                    ],
                    type: "Percentage",
                    value: "%",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 87,
                      lnumStartIndex: 2727,
                      range: [
                        2754,
                        2759,
                      ],
                      type: "NumericLiteral",
                      value: "0.001",
                    },
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 87,
                lnumStartIndex: 2727,
                range: [
                  2760,
                  2762,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 87,
                  lnumStartIndex: 2727,
                  range: [
                    2763,
                    2768,
                  ],
                  type: "NumericLiteral",
                  value: "3.141",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 87,
              lnumStartIndex: 2727,
              range: [
                2727,
                2733,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionLocalStatement {
        block: Block {
          statements: [
            ReturnStatement {
              arguments: [
                BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 90,
                          lnumStartIndex: 2800,
                          range: [
                            2809,
                            2810,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 90,
                        lnumStartIndex: 2800,
                        range: [
                          2811,
                          2812,
                        ],
                        type: "Divide",
                        value: "/",
                      },
                      right: BinaryExpression {
                        left: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 90,
                            lnumStartIndex: 2800,
                            range: [
                              2813,
                              2814,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 90,
                          lnumStartIndex: 2800,
                          range: [
                            2815,
                            2816,
                          ],
                          type: "Carrot",
                          value: "^",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 90,
                            lnumStartIndex: 2800,
                            range: [
                              2817,
                              2818,
                            ],
                            type: "Identifier",
                            value: "n",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 90,
                      lnumStartIndex: 2800,
                      range: [
                        2819,
                        2820,
                      ],
                      type: "Percentage",
                      value: "%",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 90,
                        lnumStartIndex: 2800,
                        range: [
                          2821,
                          2822,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 90,
                    lnumStartIndex: 2800,
                    range: [
                      2823,
                      2825,
                    ],
                    type: "GreaterThanEqual",
                    value: ">=",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 90,
                      lnumStartIndex: 2800,
                      range: [
                        2826,
                        2827,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 89,
            lnumStartIndex: 2771,
            range: [
              2786,
              2793,
            ],
            type: "Identifier",
            value: "testbit",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 89,
              lnumStartIndex: 2771,
              range: [
                2794,
                2795,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 89,
              lnumStartIndex: 2771,
              range: [
                2797,
                2798,
              ],
              type: "Identifier",
              value: "n",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                BinaryExpression {
                  left: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        UnaryExpression {
                          argument: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 93,
                              lnumStartIndex: 2833,
                              range: [
                                2853,
                                2856,
                              ],
                              type: "NumericLiteral",
                              value: "9.8",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 93,
                            lnumStartIndex: 2833,
                            range: [
                              2852,
                              2853,
                            ],
                            type: "Minus",
                            value: "-",
                          },
                        },
                      ],
                      base: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 93,
                            lnumStartIndex: 2833,
                            range: [
                              2843,
                              2847,
                            ],
                            type: "Identifier",
                            value: "math",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 93,
                            lnumStartIndex: 2833,
                            range: [
                              2848,
                              2851,
                            ],
                            type: "Identifier",
                            value: "sin",
                          },
                        },
                        indexer: ".",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 93,
                      lnumStartIndex: 2833,
                      range: [
                        2858,
                        2859,
                      ],
                      type: "Carrot",
                      value: "^",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 93,
                        lnumStartIndex: 2833,
                        range: [
                          2860,
                          2861,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 93,
                    lnumStartIndex: 2833,
                    range: [
                      2862,
                      2863,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: BinaryExpression {
                    left: FunctionCallExpression {
                      args: [
                        UnaryExpression {
                          argument: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 93,
                              lnumStartIndex: 2833,
                              range: [
                                2874,
                                2877,
                              ],
                              type: "NumericLiteral",
                              value: "9.8",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 93,
                            lnumStartIndex: 2833,
                            range: [
                              2873,
                              2874,
                            ],
                            type: "Minus",
                            value: "-",
                          },
                        },
                      ],
                      base: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 93,
                            lnumStartIndex: 2833,
                            range: [
                              2864,
                              2868,
                            ],
                            type: "Identifier",
                            value: "math",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 93,
                            lnumStartIndex: 2833,
                            range: [
                              2869,
                              2872,
                            ],
                            type: "Identifier",
                            value: "cos",
                          },
                        },
                        indexer: ".",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 93,
                      lnumStartIndex: 2833,
                      range: [
                        2879,
                        2880,
                      ],
                      type: "Carrot",
                      value: "^",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 93,
                        lnumStartIndex: 2833,
                        range: [
                          2881,
                          2882,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                },
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 93,
                    lnumStartIndex: 2833,
                    range: [
                      2884,
                      2885,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 93,
                  lnumStartIndex: 2833,
                  range: [
                    2840,
                    2842,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 93,
              lnumStartIndex: 2833,
              range: [
                2833,
                2839,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                FunctionCallExpression {
                  args: [
                    BinaryExpression {
                      left: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 94,
                            lnumStartIndex: 2888,
                            range: [
                              2907,
                              2911,
                            ],
                            type: "Identifier",
                            value: "math",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 94,
                            lnumStartIndex: 2888,
                            range: [
                              2912,
                              2914,
                            ],
                            type: "Identifier",
                            value: "pi",
                          },
                        },
                        indexer: ".",
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 94,
                        lnumStartIndex: 2888,
                        range: [
                          2915,
                          2916,
                        ],
                        type: "Divide",
                        value: "/",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 94,
                          lnumStartIndex: 2888,
                          range: [
                            2917,
                            2918,
                          ],
                          type: "NumericLiteral",
                          value: "4",
                        },
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 94,
                        lnumStartIndex: 2888,
                        range: [
                          2898,
                          2902,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 94,
                        lnumStartIndex: 2888,
                        range: [
                          2903,
                          2906,
                        ],
                        type: "Identifier",
                        value: "tan",
                      },
                    },
                    indexer: ".",
                  },
                },
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 94,
                    lnumStartIndex: 2888,
                    range: [
                      2921,
                      2922,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 94,
                  lnumStartIndex: 2888,
                  range: [
                    2895,
                    2897,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 94,
              lnumStartIndex: 2888,
              range: [
                2888,
                2894,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      BinaryExpression {
                        left: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 95,
                              lnumStartIndex: 2925,
                              range: [
                                2944,
                                2948,
                              ],
                              type: "Identifier",
                              value: "math",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 95,
                              lnumStartIndex: 2925,
                              range: [
                                2949,
                                2951,
                              ],
                              type: "Identifier",
                              value: "pi",
                            },
                          },
                          indexer: ".",
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2925,
                          range: [
                            2952,
                            2953,
                          ],
                          type: "Divide",
                          value: "/",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 95,
                            lnumStartIndex: 2925,
                            range: [
                              2954,
                              2955,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2925,
                          range: [
                            2935,
                            2939,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2925,
                          range: [
                            2940,
                            2943,
                          ],
                          type: "Identifier",
                          value: "sin",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 95,
                      lnumStartIndex: 2925,
                      range: [
                        2958,
                        2959,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 95,
                    lnumStartIndex: 2925,
                    range: [
                      2932,
                      2934,
                    ],
                    type: "Identifier",
                    value: "eq",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 95,
                lnumStartIndex: 2925,
                range: [
                  2961,
                  2964,
                ],
                type: "And",
                value: "and",
              },
              right: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      BinaryExpression {
                        left: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 95,
                              lnumStartIndex: 2925,
                              range: [
                                2977,
                                2981,
                              ],
                              type: "Identifier",
                              value: "math",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 95,
                              lnumStartIndex: 2925,
                              range: [
                                2982,
                                2984,
                              ],
                              type: "Identifier",
                              value: "pi",
                            },
                          },
                          indexer: ".",
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2925,
                          range: [
                            2985,
                            2986,
                          ],
                          type: "Divide",
                          value: "/",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 95,
                            lnumStartIndex: 2925,
                            range: [
                              2987,
                              2988,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2925,
                          range: [
                            2968,
                            2972,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2925,
                          range: [
                            2973,
                            2976,
                          ],
                          type: "Identifier",
                          value: "cos",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 95,
                      lnumStartIndex: 2925,
                      range: [
                        2991,
                        2992,
                      ],
                      type: "NumericLiteral",
                      value: "0",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 95,
                    lnumStartIndex: 2925,
                    range: [
                      2965,
                      2967,
                    ],
                    type: "Identifier",
                    value: "eq",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 95,
              lnumStartIndex: 2925,
              range: [
                2925,
                2931,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: FunctionCallExpression {
                  args: [
                    FunctionCallExpression {
                      args: [
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3015,
                              3016,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                      ],
                      base: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3005,
                              3009,
                            ],
                            type: "Identifier",
                            value: "math",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3010,
                              3014,
                            ],
                            type: "Identifier",
                            value: "atan",
                          },
                        },
                        indexer: ".",
                      },
                    },
                    BinaryExpression {
                      left: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3019,
                              3023,
                            ],
                            type: "Identifier",
                            value: "math",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3024,
                              3026,
                            ],
                            type: "Identifier",
                            value: "pi",
                          },
                        },
                        indexer: ".",
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 96,
                        lnumStartIndex: 2995,
                        range: [
                          3027,
                          3028,
                        ],
                        type: "Divide",
                        value: "/",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 96,
                          lnumStartIndex: 2995,
                          range: [
                            3029,
                            3030,
                          ],
                          type: "NumericLiteral",
                          value: "4",
                        },
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 96,
                      lnumStartIndex: 2995,
                      range: [
                        3002,
                        3004,
                      ],
                      type: "Identifier",
                      value: "eq",
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 96,
                  lnumStartIndex: 2995,
                  range: [
                    3032,
                    3035,
                  ],
                  type: "And",
                  value: "and",
                },
                right: FunctionCallExpression {
                  args: [
                    FunctionCallExpression {
                      args: [
                        NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3049,
                              3050,
                            ],
                            type: "NumericLiteral",
                            value: "0",
                          },
                        },
                      ],
                      base: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3039,
                              3043,
                            ],
                            type: "Identifier",
                            value: "math",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3044,
                              3048,
                            ],
                            type: "Identifier",
                            value: "acos",
                          },
                        },
                        indexer: ".",
                      },
                    },
                    BinaryExpression {
                      left: MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3053,
                              3057,
                            ],
                            type: "Identifier",
                            value: "math",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2995,
                            range: [
                              3058,
                              3060,
                            ],
                            type: "Identifier",
                            value: "pi",
                          },
                        },
                        indexer: ".",
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 96,
                        lnumStartIndex: 2995,
                        range: [
                          3061,
                          3062,
                        ],
                        type: "Divide",
                        value: "/",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 96,
                          lnumStartIndex: 2995,
                          range: [
                            3063,
                            3064,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                  ],
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 96,
                      lnumStartIndex: 2995,
                      range: [
                        3036,
                        3038,
                      ],
                      type: "Identifier",
                      value: "eq",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 96,
                lnumStartIndex: 2995,
                range: [
                  3066,
                  3069,
                ],
                type: "And",
                value: "and",
              },
              right: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 97,
                          lnumStartIndex: 3070,
                          range: [
                            3085,
                            3086,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 97,
                          lnumStartIndex: 3070,
                          range: [
                            3075,
                            3079,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 97,
                          lnumStartIndex: 3070,
                          range: [
                            3080,
                            3084,
                          ],
                          type: "Identifier",
                          value: "asin",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  BinaryExpression {
                    left: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 97,
                          lnumStartIndex: 3070,
                          range: [
                            3089,
                            3093,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 97,
                          lnumStartIndex: 3070,
                          range: [
                            3094,
                            3096,
                          ],
                          type: "Identifier",
                          value: "pi",
                        },
                      },
                      indexer: ".",
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 97,
                      lnumStartIndex: 3070,
                      range: [
                        3097,
                        3098,
                      ],
                      type: "Divide",
                      value: "/",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 97,
                        lnumStartIndex: 3070,
                        range: [
                          3099,
                          3100,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 97,
                    lnumStartIndex: 3070,
                    range: [
                      3072,
                      3074,
                    ],
                    type: "Identifier",
                    value: "eq",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 96,
              lnumStartIndex: 2995,
              range: [
                2995,
                3001,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      BinaryExpression {
                        left: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 98,
                              lnumStartIndex: 3103,
                              range: [
                                3122,
                                3126,
                              ],
                              type: "Identifier",
                              value: "math",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 98,
                              lnumStartIndex: 3103,
                              range: [
                                3127,
                                3129,
                              ],
                              type: "Identifier",
                              value: "pi",
                            },
                          },
                          indexer: ".",
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 3103,
                          range: [
                            3130,
                            3131,
                          ],
                          type: "Divide",
                          value: "/",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 98,
                            lnumStartIndex: 3103,
                            range: [
                              3132,
                              3133,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 3103,
                          range: [
                            3113,
                            3117,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 3103,
                          range: [
                            3118,
                            3121,
                          ],
                          type: "Identifier",
                          value: "deg",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 98,
                      lnumStartIndex: 3103,
                      range: [
                        3136,
                        3138,
                      ],
                      type: "NumericLiteral",
                      value: "90",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 98,
                    lnumStartIndex: 3103,
                    range: [
                      3110,
                      3112,
                    ],
                    type: "Identifier",
                    value: "eq",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 98,
                lnumStartIndex: 3103,
                range: [
                  3140,
                  3143,
                ],
                type: "And",
                value: "and",
              },
              right: FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 3103,
                          range: [
                            3156,
                            3158,
                          ],
                          type: "NumericLiteral",
                          value: "90",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 3103,
                          range: [
                            3147,
                            3151,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 3103,
                          range: [
                            3152,
                            3155,
                          ],
                          type: "Identifier",
                          value: "rad",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  BinaryExpression {
                    left: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 3103,
                          range: [
                            3161,
                            3165,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 3103,
                          range: [
                            3166,
                            3168,
                          ],
                          type: "Identifier",
                          value: "pi",
                        },
                      },
                      indexer: ".",
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 98,
                      lnumStartIndex: 3103,
                      range: [
                        3169,
                        3170,
                      ],
                      type: "Divide",
                      value: "/",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 98,
                        lnumStartIndex: 3103,
                        range: [
                          3171,
                          3172,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 98,
                    lnumStartIndex: 3103,
                    range: [
                      3144,
                      3146,
                    ],
                    type: "Identifier",
                    value: "eq",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 98,
              lnumStartIndex: 3103,
              range: [
                3103,
                3109,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 99,
                        lnumStartIndex: 3175,
                        range: [
                          3192,
                          3194,
                        ],
                        type: "NumericLiteral",
                        value: "10",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 99,
                      lnumStartIndex: 3175,
                      range: [
                        3191,
                        3192,
                      ],
                      type: "Minus",
                      value: "-",
                    },
                  },
                ],
                base: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 99,
                      lnumStartIndex: 3175,
                      range: [
                        3182,
                        3186,
                      ],
                      type: "Identifier",
                      value: "math",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 99,
                      lnumStartIndex: 3175,
                      range: [
                        3187,
                        3190,
                      ],
                      type: "Identifier",
                      value: "abs",
                    },
                  },
                  indexer: ".",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 99,
                lnumStartIndex: 3175,
                range: [
                  3196,
                  3198,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 99,
                  lnumStartIndex: 3175,
                  range: [
                    3199,
                    3201,
                  ],
                  type: "NumericLiteral",
                  value: "10",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 99,
              lnumStartIndex: 3175,
              range: [
                3175,
                3181,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 100,
                        lnumStartIndex: 3203,
                        range: [
                          3224,
                          3225,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 100,
                        lnumStartIndex: 3203,
                        range: [
                          3227,
                          3228,
                        ],
                        type: "NumericLiteral",
                        value: "0",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 100,
                        lnumStartIndex: 3203,
                        range: [
                          3213,
                          3217,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 100,
                        lnumStartIndex: 3203,
                        range: [
                          3218,
                          3223,
                        ],
                        type: "Identifier",
                        value: "atan2",
                      },
                    },
                    indexer: ".",
                  },
                },
                BinaryExpression {
                  left: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 100,
                        lnumStartIndex: 3203,
                        range: [
                          3231,
                          3235,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 100,
                        lnumStartIndex: 3203,
                        range: [
                          3236,
                          3238,
                        ],
                        type: "Identifier",
                        value: "pi",
                      },
                    },
                    indexer: ".",
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 100,
                    lnumStartIndex: 3203,
                    range: [
                      3239,
                      3240,
                    ],
                    type: "Divide",
                    value: "/",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 100,
                      lnumStartIndex: 3203,
                      range: [
                        3241,
                        3242,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 100,
                  lnumStartIndex: 3203,
                  range: [
                    3210,
                    3212,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 100,
              lnumStartIndex: 3203,
              range: [
                3203,
                3209,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 101,
                      lnumStartIndex: 3245,
                      range: [
                        3262,
                        3265,
                      ],
                      type: "NumericLiteral",
                      value: "4.5",
                    },
                  },
                ],
                base: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 101,
                      lnumStartIndex: 3245,
                      range: [
                        3252,
                        3256,
                      ],
                      type: "Identifier",
                      value: "math",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 101,
                      lnumStartIndex: 3245,
                      range: [
                        3257,
                        3261,
                      ],
                      type: "Identifier",
                      value: "ceil",
                    },
                  },
                  indexer: ".",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 101,
                lnumStartIndex: 3245,
                range: [
                  3267,
                  3269,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 101,
                  lnumStartIndex: 3245,
                  range: [
                    3270,
                    3273,
                  ],
                  type: "NumericLiteral",
                  value: "5.0",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 101,
              lnumStartIndex: 3245,
              range: [
                3245,
                3251,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 102,
                      lnumStartIndex: 3275,
                      range: [
                        3293,
                        3296,
                      ],
                      type: "NumericLiteral",
                      value: "4.5",
                    },
                  },
                ],
                base: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 102,
                      lnumStartIndex: 3275,
                      range: [
                        3282,
                        3286,
                      ],
                      type: "Identifier",
                      value: "math",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 102,
                      lnumStartIndex: 3275,
                      range: [
                        3287,
                        3292,
                      ],
                      type: "Identifier",
                      value: "floor",
                    },
                  },
                  indexer: ".",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 102,
                lnumStartIndex: 3275,
                range: [
                  3298,
                  3300,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 102,
                  lnumStartIndex: 3275,
                  range: [
                    3301,
                    3304,
                  ],
                  type: "NumericLiteral",
                  value: "4.0",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 102,
              lnumStartIndex: 3275,
              range: [
                3275,
                3281,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 103,
                      lnumStartIndex: 3306,
                      range: [
                        3322,
                        3324,
                      ],
                      type: "NumericLiteral",
                      value: "10",
                    },
                  },
                  NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 103,
                      lnumStartIndex: 3306,
                      range: [
                        3326,
                        3327,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                ],
                base: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 103,
                      lnumStartIndex: 3306,
                      range: [
                        3313,
                        3317,
                      ],
                      type: "Identifier",
                      value: "math",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 103,
                      lnumStartIndex: 3306,
                      range: [
                        3318,
                        3321,
                      ],
                      type: "Identifier",
                      value: "mod",
                    },
                  },
                  indexer: ".",
                },
              },
              operator: {
                isKeyword: false,
                lnum: 103,
                lnumStartIndex: 3306,
                range: [
                  3329,
                  3331,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 103,
                  lnumStartIndex: 3306,
                  range: [
                    3332,
                    3333,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 103,
              lnumStartIndex: 3306,
              range: [
                3306,
                3312,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 104,
                          lnumStartIndex: 3335,
                          range: [
                            3355,
                            3357,
                          ],
                          type: "NumericLiteral",
                          value: "10",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 104,
                          lnumStartIndex: 3335,
                          range: [
                            3345,
                            3349,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 104,
                          lnumStartIndex: 3335,
                          range: [
                            3350,
                            3354,
                          ],
                          type: "Identifier",
                          value: "sqrt",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 104,
                    lnumStartIndex: 3335,
                    range: [
                      3359,
                      3360,
                    ],
                    type: "Carrot",
                    value: "^",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 104,
                      lnumStartIndex: 3335,
                      range: [
                        3361,
                        3362,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 104,
                    lnumStartIndex: 3335,
                    range: [
                      3364,
                      3366,
                    ],
                    type: "NumericLiteral",
                    value: "10",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 104,
                  lnumStartIndex: 3335,
                  range: [
                    3342,
                    3344,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 104,
              lnumStartIndex: 3335,
              range: [
                3335,
                3341,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 105,
                        lnumStartIndex: 3369,
                        range: [
                          3390,
                          3391,
                        ],
                        type: "NumericLiteral",
                        value: "2",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 105,
                        lnumStartIndex: 3369,
                        range: [
                          3379,
                          3383,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 105,
                        lnumStartIndex: 3369,
                        range: [
                          3384,
                          3389,
                        ],
                        type: "Identifier",
                        value: "log10",
                      },
                    },
                    indexer: ".",
                  },
                },
                BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 105,
                          lnumStartIndex: 3369,
                          range: [
                            3403,
                            3404,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 105,
                          lnumStartIndex: 3369,
                          range: [
                            3394,
                            3398,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 105,
                          lnumStartIndex: 3369,
                          range: [
                            3399,
                            3402,
                          ],
                          type: "Identifier",
                          value: "log",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 105,
                    lnumStartIndex: 3369,
                    range: [
                      3406,
                      3407,
                    ],
                    type: "Divide",
                    value: "/",
                  },
                  right: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 105,
                          lnumStartIndex: 3369,
                          range: [
                            3417,
                            3419,
                          ],
                          type: "NumericLiteral",
                          value: "10",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 105,
                          lnumStartIndex: 3369,
                          range: [
                            3408,
                            3412,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 105,
                          lnumStartIndex: 3369,
                          range: [
                            3413,
                            3416,
                          ],
                          type: "Identifier",
                          value: "log",
                        },
                      },
                      indexer: ".",
                    },
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 105,
                  lnumStartIndex: 3369,
                  range: [
                    3376,
                    3378,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 105,
              lnumStartIndex: 3369,
              range: [
                3369,
                3375,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 106,
                        lnumStartIndex: 3423,
                        range: [
                          3442,
                          3443,
                        ],
                        type: "NumericLiteral",
                        value: "0",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 106,
                        lnumStartIndex: 3423,
                        range: [
                          3433,
                          3437,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 106,
                        lnumStartIndex: 3423,
                        range: [
                          3438,
                          3441,
                        ],
                        type: "Identifier",
                        value: "exp",
                      },
                    },
                    indexer: ".",
                  },
                },
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 106,
                    lnumStartIndex: 3423,
                    range: [
                      3446,
                      3447,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 106,
                  lnumStartIndex: 3423,
                  range: [
                    3430,
                    3432,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 106,
              lnumStartIndex: 3423,
              range: [
                3423,
                3429,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 3450,
                        range: [
                          3469,
                          3471,
                        ],
                        type: "NumericLiteral",
                        value: "10",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 3450,
                        range: [
                          3460,
                          3464,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 3450,
                        range: [
                          3465,
                          3468,
                        ],
                        type: "Identifier",
                        value: "sin",
                      },
                    },
                    indexer: ".",
                  },
                },
                FunctionCallExpression {
                  args: [
                    BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 107,
                          lnumStartIndex: 3450,
                          range: [
                            3483,
                            3485,
                          ],
                          type: "NumericLiteral",
                          value: "10",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 3450,
                        range: [
                          3486,
                          3487,
                        ],
                        type: "Percentage",
                        value: "%",
                      },
                      right: GroupingExpression {
                        expression: BinaryExpression {
                          left: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 107,
                              lnumStartIndex: 3450,
                              range: [
                                3489,
                                3490,
                              ],
                              type: "NumericLiteral",
                              value: "2",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 107,
                            lnumStartIndex: 3450,
                            range: [
                              3491,
                              3492,
                            ],
                            type: "Star",
                            value: "*",
                          },
                          right: MemberExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 107,
                                lnumStartIndex: 3450,
                                range: [
                                  3493,
                                  3497,
                                ],
                                type: "Identifier",
                                value: "math",
                              },
                            },
                            identifier: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 107,
                                lnumStartIndex: 3450,
                                range: [
                                  3498,
                                  3500,
                                ],
                                type: "Identifier",
                                value: "pi",
                              },
                            },
                            indexer: ".",
                          },
                        },
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 3450,
                        range: [
                          3474,
                          3478,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 3450,
                        range: [
                          3479,
                          3482,
                        ],
                        type: "Identifier",
                        value: "sin",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 107,
                  lnumStartIndex: 3450,
                  range: [
                    3457,
                    3459,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 107,
              lnumStartIndex: 3450,
              range: [
                3450,
                3456,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      LocalStatement {
        init: [
          FunctionCallExpression {
            args: [
              MemberExpression {
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 108,
                    lnumStartIndex: 3505,
                    range: [
                      3529,
                      3533,
                    ],
                    type: "Identifier",
                    value: "math",
                  },
                },
                identifier: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 108,
                    lnumStartIndex: 3505,
                    range: [
                      3534,
                      3536,
                    ],
                    type: "Identifier",
                    value: "pi",
                  },
                },
                indexer: ".",
              },
            ],
            base: MemberExpression {
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 108,
                  lnumStartIndex: 3505,
                  range: [
                    3518,
                    3522,
                  ],
                  type: "Identifier",
                  value: "math",
                },
              },
              identifier: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 108,
                  lnumStartIndex: 3505,
                  range: [
                    3523,
                    3528,
                  ],
                  type: "Identifier",
                  value: "frexp",
                },
              },
              indexer: ".",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 108,
              lnumStartIndex: 3505,
              range: [
                3511,
                3512,
              ],
              type: "Identifier",
              value: "v",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 108,
              lnumStartIndex: 3505,
              range: [
                3514,
                3515,
              ],
              type: "Identifier",
              value: "e",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 109,
                        lnumStartIndex: 3538,
                        range: [
                          3559,
                          3560,
                        ],
                        type: "Identifier",
                        value: "v",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 109,
                        lnumStartIndex: 3538,
                        range: [
                          3562,
                          3563,
                        ],
                        type: "Identifier",
                        value: "e",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 109,
                        lnumStartIndex: 3538,
                        range: [
                          3548,
                          3552,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 109,
                        lnumStartIndex: 3538,
                        range: [
                          3553,
                          3558,
                        ],
                        type: "Identifier",
                        value: "ldexp",
                      },
                    },
                    indexer: ".",
                  },
                },
                MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 109,
                      lnumStartIndex: 3538,
                      range: [
                        3566,
                        3570,
                      ],
                      type: "Identifier",
                      value: "math",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 109,
                      lnumStartIndex: 3538,
                      range: [
                        3571,
                        3573,
                      ],
                      type: "Identifier",
                      value: "pi",
                    },
                  },
                  indexer: ".",
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 109,
                  lnumStartIndex: 3538,
                  range: [
                    3545,
                    3547,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 109,
              lnumStartIndex: 3538,
              range: [
                3538,
                3544,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 111,
                        lnumStartIndex: 3577,
                        range: [
                          3597,
                          3600,
                        ],
                        type: "NumericLiteral",
                        value: "3.5",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 111,
                        lnumStartIndex: 3577,
                        range: [
                          3587,
                          3591,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 111,
                        lnumStartIndex: 3577,
                        range: [
                          3592,
                          3596,
                        ],
                        type: "Identifier",
                        value: "tanh",
                      },
                    },
                    indexer: ".",
                  },
                },
                BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 111,
                          lnumStartIndex: 3577,
                          range: [
                            3613,
                            3616,
                          ],
                          type: "NumericLiteral",
                          value: "3.5",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 111,
                          lnumStartIndex: 3577,
                          range: [
                            3603,
                            3607,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 111,
                          lnumStartIndex: 3577,
                          range: [
                            3608,
                            3612,
                          ],
                          type: "Identifier",
                          value: "sinh",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 111,
                    lnumStartIndex: 3577,
                    range: [
                      3618,
                      3619,
                    ],
                    type: "Divide",
                    value: "/",
                  },
                  right: FunctionCallExpression {
                    args: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 111,
                          lnumStartIndex: 3577,
                          range: [
                            3630,
                            3633,
                          ],
                          type: "NumericLiteral",
                          value: "3.5",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 111,
                          lnumStartIndex: 3577,
                          range: [
                            3620,
                            3624,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 111,
                          lnumStartIndex: 3577,
                          range: [
                            3625,
                            3629,
                          ],
                          type: "Identifier",
                          value: "cosh",
                        },
                      },
                      indexer: ".",
                    },
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 111,
                  lnumStartIndex: 3577,
                  range: [
                    3584,
                    3586,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 111,
              lnumStartIndex: 3577,
              range: [
                3577,
                3583,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 113,
                      lnumStartIndex: 3638,
                      range: [
                        3654,
                        3664,
                      ],
                      type: "StringLiteral",
                      value: "' 1.3e-2 '",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 113,
                    lnumStartIndex: 3638,
                    range: [
                      3645,
                      3653,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 113,
                lnumStartIndex: 3638,
                range: [
                  3666,
                  3668,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 113,
                  lnumStartIndex: 3638,
                  range: [
                    3669,
                    3675,
                  ],
                  type: "NumericLiteral",
                  value: "1.3e-2",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 113,
              lnumStartIndex: 3638,
              range: [
                3638,
                3644,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 114,
                      lnumStartIndex: 3677,
                      range: [
                        3693,
                        3714,
                      ],
                      type: "StringLiteral",
                      value: "' -1.00000000000001 '",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 114,
                    lnumStartIndex: 3677,
                    range: [
                      3684,
                      3692,
                    ],
                    type: "Identifier",
                    value: "tonumber",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 114,
                lnumStartIndex: 3677,
                range: [
                  3716,
                  3718,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: UnaryExpression {
                argument: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 114,
                    lnumStartIndex: 3677,
                    range: [
                      3720,
                      3736,
                    ],
                    type: "NumericLiteral",
                    value: "1.00000000000001",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 114,
                  lnumStartIndex: 3677,
                  range: [
                    3719,
                    3720,
                  ],
                  type: "Minus",
                  value: "-",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 114,
              lnumStartIndex: 3677,
              range: [
                3677,
                3683,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 118,
                    lnumStartIndex: 3784,
                    range: [
                      3791,
                      3798,
                    ],
                    type: "NumericLiteral",
                    value: "8388609",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 118,
                  lnumStartIndex: 3784,
                  range: [
                    3799,
                    3800,
                  ],
                  type: "Plus",
                  value: "+",
                },
                right: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 118,
                      lnumStartIndex: 3784,
                      range: [
                        3802,
                        3809,
                      ],
                      type: "NumericLiteral",
                      value: "8388609",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 118,
                    lnumStartIndex: 3784,
                    range: [
                      3801,
                      3802,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 118,
                lnumStartIndex: 3784,
                range: [
                  3810,
                  3812,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 118,
                  lnumStartIndex: 3784,
                  range: [
                    3813,
                    3814,
                  ],
                  type: "NumericLiteral",
                  value: "0",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 118,
              lnumStartIndex: 3784,
              range: [
                3784,
                3790,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 119,
                    lnumStartIndex: 3816,
                    range: [
                      3823,
                      3830,
                    ],
                    type: "NumericLiteral",
                    value: "8388608",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 119,
                  lnumStartIndex: 3816,
                  range: [
                    3831,
                    3832,
                  ],
                  type: "Plus",
                  value: "+",
                },
                right: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 119,
                      lnumStartIndex: 3816,
                      range: [
                        3834,
                        3841,
                      ],
                      type: "NumericLiteral",
                      value: "8388608",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 119,
                    lnumStartIndex: 3816,
                    range: [
                      3833,
                      3834,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 119,
                lnumStartIndex: 3816,
                range: [
                  3842,
                  3844,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 119,
                  lnumStartIndex: 3816,
                  range: [
                    3845,
                    3846,
                  ],
                  type: "NumericLiteral",
                  value: "0",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 119,
              lnumStartIndex: 3816,
              range: [
                3816,
                3822,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 120,
                    lnumStartIndex: 3848,
                    range: [
                      3855,
                      3862,
                    ],
                    type: "NumericLiteral",
                    value: "8388607",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 120,
                  lnumStartIndex: 3848,
                  range: [
                    3863,
                    3864,
                  ],
                  type: "Plus",
                  value: "+",
                },
                right: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 120,
                      lnumStartIndex: 3848,
                      range: [
                        3866,
                        3873,
                      ],
                      type: "NumericLiteral",
                      value: "8388607",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 120,
                    lnumStartIndex: 3848,
                    range: [
                      3865,
                      3866,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 120,
                lnumStartIndex: 3848,
                range: [
                  3874,
                  3876,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 120,
                  lnumStartIndex: 3848,
                  range: [
                    3877,
                    3878,
                  ],
                  type: "NumericLiteral",
                  value: "0",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 120,
              lnumStartIndex: 3848,
              range: [
                3848,
                3854,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      IfStatement {
        elseBlock: null,
        elseifBlocks: [
        ],
        elseifConditions: [
        ],
        ifBlock: Block {
          statements: [
            ReturnStatement {
              arguments: [
              ],
            },
          ],
        },
        ifCondition: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 122,
                lnumStartIndex: 3881,
                range: [
                  3891,
                  3893,
                ],
                type: "Identifier",
                value: "_G",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 122,
                lnumStartIndex: 3881,
                range: [
                  3895,
                  3902,
                ],
                type: "StringLiteral",
                value: '"_soft"',
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 122,
              lnumStartIndex: 3881,
              range: [
                3884,
                3890,
              ],
              type: "Identifier",
              value: "rawget",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          FunctionCallExpression {
            args: [
            ],
            base: MemberExpression {
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 124,
                  lnumStartIndex: 3921,
                  range: [
                    3925,
                    3927,
                  ],
                  type: "Identifier",
                  value: "io",
                },
              },
              identifier: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 124,
                  lnumStartIndex: 3921,
                  range: [
                    3928,
                    3935,
                  ],
                  type: "Identifier",
                  value: "tmpfile",
                },
              },
              indexer: ".",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 124,
              lnumStartIndex: 3921,
              range: [
                3921,
                3922,
              ],
              type: "Identifier",
              value: "f",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 125,
                lnumStartIndex: 3938,
                range: [
                  3945,
                  3946,
                ],
                type: "Identifier",
                value: "f",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 125,
              lnumStartIndex: 3938,
              range: [
                3938,
                3944,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 126,
                lnumStartIndex: 3948,
                range: [
                  3956,
                  3963,
                ],
                type: "StringLiteral",
                value: '"a = {"',
              },
            },
          ],
          base: MemberExpression {
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 126,
                lnumStartIndex: 3948,
                range: [
                  3948,
                  3949,
                ],
                type: "Identifier",
                value: "f",
              },
            },
            identifier: Identifier {
              token: {
                isKeyword: false,
                lnum: 126,
                lnumStartIndex: 3948,
                range: [
                  3950,
                  3955,
                ],
                type: "Identifier",
                value: "write",
              },
            },
            indexer: ":",
          },
        },
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 127,
              lnumStartIndex: 3965,
              range: [
                3969,
                3970,
              ],
              type: "NumericLiteral",
              value: "1",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 127,
              lnumStartIndex: 3965,
              range: [
                3965,
                3966,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      RepeatStatement {
        block: Block {
          statements: [
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 129,
                      lnumStartIndex: 3978,
                      range: [
                        3988,
                        3991,
                      ],
                      type: "StringLiteral",
                      value: '"{"',
                    },
                  },
                  FunctionCallExpression {
                    args: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 129,
                          lnumStartIndex: 3978,
                          range: [
                            4002,
                            4003,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 129,
                          lnumStartIndex: 3978,
                          range: [
                            3993,
                            3997,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 129,
                          lnumStartIndex: 3978,
                          range: [
                            3998,
                            4001,
                          ],
                          type: "Identifier",
                          value: "sin",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 129,
                      lnumStartIndex: 3978,
                      range: [
                        4006,
                        4010,
                      ],
                      type: "StringLiteral",
                      value: '", "',
                    },
                  },
                  FunctionCallExpression {
                    args: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 129,
                          lnumStartIndex: 3978,
                          range: [
                            4021,
                            4022,
                          ],
                          type: "Identifier",
                          value: "i",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 129,
                          lnumStartIndex: 3978,
                          range: [
                            4012,
                            4016,
                          ],
                          type: "Identifier",
                          value: "math",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 129,
                          lnumStartIndex: 3978,
                          range: [
                            4017,
                            4020,
                          ],
                          type: "Identifier",
                          value: "cos",
                        },
                      },
                      indexer: ".",
                    },
                  },
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 129,
                      lnumStartIndex: 3978,
                      range: [
                        4025,
                        4029,
                      ],
                      type: "StringLiteral",
                      value: '", "',
                    },
                  },
                  BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 129,
                        lnumStartIndex: 3978,
                        range: [
                          4031,
                          4032,
                        ],
                        type: "Identifier",
                        value: "i",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 129,
                      lnumStartIndex: 3978,
                      range: [
                        4033,
                        4034,
                      ],
                      type: "Divide",
                      value: "/",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 129,
                        lnumStartIndex: 3978,
                        range: [
                          4035,
                          4036,
                        ],
                        type: "NumericLiteral",
                        value: "3",
                      },
                    },
                  },
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 129,
                      lnumStartIndex: 3978,
                      range: [
                        4038,
                        4044,
                      ],
                      type: "StringLiteral",
                      value: '"},\\
"',
                    },
                  },
                ],
                base: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 129,
                      lnumStartIndex: 3978,
                      range: [
                        3980,
                        3981,
                      ],
                      type: "Identifier",
                      value: "f",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 129,
                      lnumStartIndex: 3978,
                      range: [
                        3982,
                        3987,
                      ],
                      type: "Identifier",
                      value: "write",
                    },
                  },
                  indexer: ":",
                },
              },
            },
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 130,
                      lnumStartIndex: 4046,
                      range: [
                        4052,
                        4053,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 130,
                    lnumStartIndex: 4046,
                    range: [
                      4054,
                      4055,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 130,
                      lnumStartIndex: 4046,
                      range: [
                        4056,
                        4057,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 130,
                    lnumStartIndex: 4046,
                    range: [
                      4048,
                      4049,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
              ],
            },
          ],
        },
        condition: BinaryExpression {
          left: Identifier {
            token: {
              isKeyword: false,
              lnum: 131,
              lnumStartIndex: 4058,
              range: [
                4064,
                4065,
              ],
              type: "Identifier",
              value: "i",
            },
          },
          operator: {
            isKeyword: false,
            lnum: 131,
            lnumStartIndex: 4058,
            range: [
              4066,
              4067,
            ],
            type: "GreaterThan",
            value: ">",
          },
          right: NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 131,
              lnumStartIndex: 4058,
              range: [
                4068,
                4072,
              ],
              type: "NumericLiteral",
              value: "1000",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 132,
                lnumStartIndex: 4073,
                range: [
                  4081,
                  4084,
                ],
                type: "StringLiteral",
                value: '"}"',
              },
            },
          ],
          base: MemberExpression {
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 132,
                lnumStartIndex: 4073,
                range: [
                  4073,
                  4074,
                ],
                type: "Identifier",
                value: "f",
              },
            },
            identifier: Identifier {
              token: {
                isKeyword: false,
                lnum: 132,
                lnumStartIndex: 4073,
                range: [
                  4075,
                  4080,
                ],
                type: "Identifier",
                value: "write",
              },
            },
            indexer: ":",
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 133,
                lnumStartIndex: 4086,
                range: [
                  4093,
                  4098,
                ],
                type: "StringLiteral",
                value: '"set"',
              },
            },
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 133,
                lnumStartIndex: 4086,
                range: [
                  4100,
                  4101,
                ],
                type: "NumericLiteral",
                value: "0",
              },
            },
          ],
          base: MemberExpression {
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 133,
                lnumStartIndex: 4086,
                range: [
                  4086,
                  4087,
                ],
                type: "Identifier",
                value: "f",
              },
            },
            identifier: Identifier {
              token: {
                isKeyword: false,
                lnum: 133,
                lnumStartIndex: 4086,
                range: [
                  4088,
                  4092,
                ],
                type: "Identifier",
                value: "seek",
              },
            },
            indexer: ":",
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
          ],
          base: FunctionCallExpression {
            args: [
              FunctionCallExpression {
                args: [
                  FunctionCallExpression {
                    args: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 134,
                          lnumStartIndex: 4103,
                          range: [
                            4128,
                            4132,
                          ],
                          type: "StringLiteral",
                          value: "'*a'",
                        },
                      },
                    ],
                    base: MemberExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 134,
                          lnumStartIndex: 4103,
                          range: [
                            4121,
                            4122,
                          ],
                          type: "Identifier",
                          value: "f",
                        },
                      },
                      identifier: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 134,
                          lnumStartIndex: 4103,
                          range: [
                            4123,
                            4127,
                          ],
                          type: "Identifier",
                          value: "read",
                        },
                      },
                      indexer: ":",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 134,
                    lnumStartIndex: 4103,
                    range: [
                      4110,
                      4120,
                    ],
                    type: "Identifier",
                    value: "loadstring",
                  },
                },
              },
            ],
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 134,
                lnumStartIndex: 4103,
                range: [
                  4103,
                  4109,
                ],
                type: "Identifier",
                value: "assert",
              },
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
              ],
              base: MemberExpression {
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 135,
                    lnumStartIndex: 4138,
                    range: [
                      4145,
                      4146,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
                identifier: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 135,
                    lnumStartIndex: 4138,
                    range: [
                      4147,
                      4152,
                    ],
                    type: "Identifier",
                    value: "close",
                  },
                },
                indexer: ":",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 135,
              lnumStartIndex: 4138,
              range: [
                4138,
                4144,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                IndexExpression {
                  base: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 137,
                        lnumStartIndex: 4157,
                        range: [
                          4167,
                          4168,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 137,
                        lnumStartIndex: 4157,
                        range: [
                          4169,
                          4172,
                        ],
                        type: "NumericLiteral",
                        value: "300",
                      },
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 137,
                      lnumStartIndex: 4157,
                      range: [
                        4174,
                        4175,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 137,
                        lnumStartIndex: 4157,
                        range: [
                          4187,
                          4190,
                        ],
                        type: "NumericLiteral",
                        value: "300",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 137,
                        lnumStartIndex: 4157,
                        range: [
                          4178,
                          4182,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 137,
                        lnumStartIndex: 4157,
                        range: [
                          4183,
                          4186,
                        ],
                        type: "Identifier",
                        value: "sin",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 137,
                  lnumStartIndex: 4157,
                  range: [
                    4164,
                    4166,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 137,
              lnumStartIndex: 4157,
              range: [
                4157,
                4163,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                IndexExpression {
                  base: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 138,
                        lnumStartIndex: 4194,
                        range: [
                          4204,
                          4205,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 138,
                        lnumStartIndex: 4194,
                        range: [
                          4206,
                          4209,
                        ],
                        type: "NumericLiteral",
                        value: "600",
                      },
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 138,
                      lnumStartIndex: 4194,
                      range: [
                        4211,
                        4212,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 138,
                        lnumStartIndex: 4194,
                        range: [
                          4224,
                          4227,
                        ],
                        type: "NumericLiteral",
                        value: "600",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 138,
                        lnumStartIndex: 4194,
                        range: [
                          4215,
                          4219,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 138,
                        lnumStartIndex: 4194,
                        range: [
                          4220,
                          4223,
                        ],
                        type: "Identifier",
                        value: "sin",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 138,
                  lnumStartIndex: 4194,
                  range: [
                    4201,
                    4203,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 138,
              lnumStartIndex: 4194,
              range: [
                4194,
                4200,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                IndexExpression {
                  base: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 139,
                        lnumStartIndex: 4231,
                        range: [
                          4241,
                          4242,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 139,
                        lnumStartIndex: 4231,
                        range: [
                          4243,
                          4246,
                        ],
                        type: "NumericLiteral",
                        value: "500",
                      },
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 139,
                      lnumStartIndex: 4231,
                      range: [
                        4248,
                        4249,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 139,
                        lnumStartIndex: 4231,
                        range: [
                          4261,
                          4264,
                        ],
                        type: "NumericLiteral",
                        value: "500",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 139,
                        lnumStartIndex: 4231,
                        range: [
                          4252,
                          4256,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 139,
                        lnumStartIndex: 4231,
                        range: [
                          4257,
                          4260,
                        ],
                        type: "Identifier",
                        value: "cos",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 139,
                  lnumStartIndex: 4231,
                  range: [
                    4238,
                    4240,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 139,
              lnumStartIndex: 4231,
              range: [
                4231,
                4237,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                IndexExpression {
                  base: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 140,
                        lnumStartIndex: 4268,
                        range: [
                          4278,
                          4279,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 140,
                        lnumStartIndex: 4268,
                        range: [
                          4280,
                          4283,
                        ],
                        type: "NumericLiteral",
                        value: "800",
                      },
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 140,
                      lnumStartIndex: 4268,
                      range: [
                        4285,
                        4286,
                      ],
                      type: "NumericLiteral",
                      value: "2",
                    },
                  },
                },
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 140,
                        lnumStartIndex: 4268,
                        range: [
                          4298,
                          4301,
                        ],
                        type: "NumericLiteral",
                        value: "800",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 140,
                        lnumStartIndex: 4268,
                        range: [
                          4289,
                          4293,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 140,
                        lnumStartIndex: 4268,
                        range: [
                          4294,
                          4297,
                        ],
                        type: "Identifier",
                        value: "cos",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 140,
                  lnumStartIndex: 4268,
                  range: [
                    4275,
                    4277,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 140,
              lnumStartIndex: 4268,
              range: [
                4268,
                4274,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                IndexExpression {
                  base: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 141,
                        lnumStartIndex: 4305,
                        range: [
                          4315,
                          4316,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 141,
                        lnumStartIndex: 4305,
                        range: [
                          4317,
                          4320,
                        ],
                        type: "NumericLiteral",
                        value: "200",
                      },
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 141,
                      lnumStartIndex: 4305,
                      range: [
                        4322,
                        4323,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
                BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 141,
                      lnumStartIndex: 4305,
                      range: [
                        4326,
                        4329,
                      ],
                      type: "NumericLiteral",
                      value: "200",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 141,
                    lnumStartIndex: 4305,
                    range: [
                      4330,
                      4331,
                    ],
                    type: "Divide",
                    value: "/",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 141,
                      lnumStartIndex: 4305,
                      range: [
                        4332,
                        4333,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 141,
                  lnumStartIndex: 4305,
                  range: [
                    4312,
                    4314,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 141,
              lnumStartIndex: 4305,
              range: [
                4305,
                4311,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionCallExpression {
              args: [
                IndexExpression {
                  base: IndexExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 142,
                        lnumStartIndex: 4336,
                        range: [
                          4346,
                          4347,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    index: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 142,
                        lnumStartIndex: 4336,
                        range: [
                          4348,
                          4352,
                        ],
                        type: "NumericLiteral",
                        value: "1000",
                      },
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 142,
                      lnumStartIndex: 4336,
                      range: [
                        4354,
                        4355,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
                BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 142,
                      lnumStartIndex: 4336,
                      range: [
                        4358,
                        4362,
                      ],
                      type: "NumericLiteral",
                      value: "1000",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 142,
                    lnumStartIndex: 4336,
                    range: [
                      4363,
                      4364,
                    ],
                    type: "Divide",
                    value: "/",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 142,
                      lnumStartIndex: 4336,
                      range: [
                        4365,
                        4366,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 142,
                    lnumStartIndex: 4336,
                    range: [
                      4368,
                      4373,
                    ],
                    type: "NumericLiteral",
                    value: "0.001",
                  },
                },
              ],
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 142,
                  lnumStartIndex: 4336,
                  range: [
                    4343,
                    4345,
                  ],
                  type: "Identifier",
                  value: "eq",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 142,
              lnumStartIndex: 4336,
              range: [
                4336,
                4342,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 143,
                lnumStartIndex: 4376,
                range: [
                  4382,
                  4385,
                ],
                type: "StringLiteral",
                value: "'+'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 143,
              lnumStartIndex: 4376,
              range: [
                4376,
                4381,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
      DoStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                BinaryExpression {
                  left: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 146,
                      lnumStartIndex: 4406,
                      range: [
                        4420,
                        4426,
                      ],
                      type: "NumericLiteral",
                      value: "10e500",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 146,
                    lnumStartIndex: 4406,
                    range: [
                      4427,
                      4428,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 146,
                      lnumStartIndex: 4406,
                      range: [
                        4429,
                        4435,
                      ],
                      type: "NumericLiteral",
                      value: "10e400",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 146,
                    lnumStartIndex: 4406,
                    range: [
                      4414,
                      4417,
                    ],
                    type: "Identifier",
                    value: "NaN",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 147,
                        lnumStartIndex: 4436,
                        range: [
                          4445,
                          4448,
                        ],
                        type: "Identifier",
                        value: "NaN",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 147,
                      lnumStartIndex: 4436,
                      range: [
                        4449,
                        4451,
                      ],
                      type: "TildaEqual",
                      value: "~=",
                    },
                    right: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 147,
                        lnumStartIndex: 4436,
                        range: [
                          4452,
                          4455,
                        ],
                        type: "Identifier",
                        value: "NaN",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 147,
                    lnumStartIndex: 4436,
                    range: [
                      4438,
                      4444,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 148,
                            lnumStartIndex: 4457,
                            range: [
                              4471,
                              4474,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 148,
                          lnumStartIndex: 4457,
                          range: [
                            4475,
                            4476,
                          ],
                          type: "LessThan",
                          value: "<",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 148,
                            lnumStartIndex: 4457,
                            range: [
                              4477,
                              4480,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 148,
                      lnumStartIndex: 4457,
                      range: [
                        4466,
                        4469,
                      ],
                      type: "Not",
                      value: "not",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 148,
                    lnumStartIndex: 4457,
                    range: [
                      4459,
                      4465,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 149,
                            lnumStartIndex: 4483,
                            range: [
                              4497,
                              4500,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 149,
                          lnumStartIndex: 4483,
                          range: [
                            4501,
                            4503,
                          ],
                          type: "LessThanEqual",
                          value: "<=",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 149,
                            lnumStartIndex: 4483,
                            range: [
                              4504,
                              4507,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 149,
                      lnumStartIndex: 4483,
                      range: [
                        4492,
                        4495,
                      ],
                      type: "Not",
                      value: "not",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 149,
                    lnumStartIndex: 4483,
                    range: [
                      4485,
                      4491,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 150,
                            lnumStartIndex: 4510,
                            range: [
                              4524,
                              4527,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 150,
                          lnumStartIndex: 4510,
                          range: [
                            4528,
                            4529,
                          ],
                          type: "GreaterThan",
                          value: ">",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 150,
                            lnumStartIndex: 4510,
                            range: [
                              4530,
                              4533,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 150,
                      lnumStartIndex: 4510,
                      range: [
                        4519,
                        4522,
                      ],
                      type: "Not",
                      value: "not",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 150,
                    lnumStartIndex: 4510,
                    range: [
                      4512,
                      4518,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 151,
                            lnumStartIndex: 4536,
                            range: [
                              4550,
                              4553,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 151,
                          lnumStartIndex: 4536,
                          range: [
                            4554,
                            4556,
                          ],
                          type: "GreaterThanEqual",
                          value: ">=",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 151,
                            lnumStartIndex: 4536,
                            range: [
                              4557,
                              4560,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 151,
                      lnumStartIndex: 4536,
                      range: [
                        4545,
                        4548,
                      ],
                      type: "Not",
                      value: "not",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 151,
                    lnumStartIndex: 4536,
                    range: [
                      4538,
                      4544,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: GroupingExpression {
                      expression: BinaryExpression {
                        left: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 152,
                            lnumStartIndex: 4563,
                            range: [
                              4577,
                              4578,
                            ],
                            type: "NumericLiteral",
                            value: "0",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 152,
                          lnumStartIndex: 4563,
                          range: [
                            4579,
                            4580,
                          ],
                          type: "LessThan",
                          value: "<",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 152,
                            lnumStartIndex: 4563,
                            range: [
                              4581,
                              4584,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 152,
                      lnumStartIndex: 4563,
                      range: [
                        4572,
                        4575,
                      ],
                      type: "Not",
                      value: "not",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 152,
                    lnumStartIndex: 4563,
                    range: [
                      4565,
                      4571,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 153,
                            lnumStartIndex: 4587,
                            range: [
                              4601,
                              4604,
                            ],
                            type: "Identifier",
                            value: "NaN",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 153,
                          lnumStartIndex: 4587,
                          range: [
                            4605,
                            4606,
                          ],
                          type: "LessThan",
                          value: "<",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 153,
                            lnumStartIndex: 4587,
                            range: [
                              4607,
                              4608,
                            ],
                            type: "NumericLiteral",
                            value: "0",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 153,
                      lnumStartIndex: 4587,
                      range: [
                        4596,
                        4599,
                      ],
                      type: "Not",
                      value: "not",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 153,
                    lnumStartIndex: 4587,
                    range: [
                      4589,
                      4595,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            LocalStatement {
              init: [
                TableConstructor {
                  fieldlist: [
                  ],
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 154,
                    lnumStartIndex: 4611,
                    range: [
                      4619,
                      4620,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: FunctionCallExpression {
                      args: [
                        FunctionExpression {
                          block: Block {
                            statements: [
                              AssignmentStatement {
                                init: [
                                  NumericLiteral {
                                    token: {
                                      isKeyword: false,
                                      lnum: 155,
                                      lnumStartIndex: 4626,
                                      range: [
                                        4665,
                                        4666,
                                      ],
                                      type: "NumericLiteral",
                                      value: "1",
                                    },
                                  },
                                ],
                                variables: [
                                  IndexExpression {
                                    base: Identifier {
                                      token: {
                                        isKeyword: false,
                                        lnum: 155,
                                        lnumStartIndex: 4626,
                                        range: [
                                          4656,
                                          4657,
                                        ],
                                        type: "Identifier",
                                        value: "a",
                                      },
                                    },
                                    index: Identifier {
                                      token: {
                                        isKeyword: false,
                                        lnum: 155,
                                        lnumStartIndex: 4626,
                                        range: [
                                          4658,
                                          4661,
                                        ],
                                        type: "Identifier",
                                        value: "NaN",
                                      },
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                          parlist: [
                          ],
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 155,
                          lnumStartIndex: 4626,
                          range: [
                            4639,
                            4644,
                          ],
                          type: "Identifier",
                          value: "pcall",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 155,
                      lnumStartIndex: 4626,
                      range: [
                        4635,
                        4638,
                      ],
                      type: "Not",
                      value: "not",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 155,
                    lnumStartIndex: 4626,
                    range: [
                      4628,
                      4634,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: IndexExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 156,
                          lnumStartIndex: 4673,
                          range: [
                            4682,
                            4683,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      index: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 156,
                          lnumStartIndex: 4673,
                          range: [
                            4684,
                            4687,
                          ],
                          type: "Identifier",
                          value: "NaN",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 156,
                      lnumStartIndex: 4673,
                      range: [
                        4689,
                        4691,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 156,
                        lnumStartIndex: 4673,
                        range: [
                          4692,
                          4695,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 156,
                    lnumStartIndex: 4673,
                    range: [
                      4675,
                      4681,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            AssignmentStatement {
              init: [
                NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 157,
                    lnumStartIndex: 4697,
                    range: [
                      4706,
                      4707,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              ],
              variables: [
                IndexExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 157,
                      lnumStartIndex: 4697,
                      range: [
                        4699,
                        4700,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                  index: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 157,
                      lnumStartIndex: 4697,
                      range: [
                        4701,
                        4702,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  UnaryExpression {
                    argument: FunctionCallExpression {
                      args: [
                        FunctionExpression {
                          block: Block {
                            statements: [
                              AssignmentStatement {
                                init: [
                                  NumericLiteral {
                                    token: {
                                      isKeyword: false,
                                      lnum: 158,
                                      lnumStartIndex: 4708,
                                      range: [
                                        4747,
                                        4748,
                                      ],
                                      type: "NumericLiteral",
                                      value: "1",
                                    },
                                  },
                                ],
                                variables: [
                                  IndexExpression {
                                    base: Identifier {
                                      token: {
                                        isKeyword: false,
                                        lnum: 158,
                                        lnumStartIndex: 4708,
                                        range: [
                                          4738,
                                          4739,
                                        ],
                                        type: "Identifier",
                                        value: "a",
                                      },
                                    },
                                    index: Identifier {
                                      token: {
                                        isKeyword: false,
                                        lnum: 158,
                                        lnumStartIndex: 4708,
                                        range: [
                                          4740,
                                          4743,
                                        ],
                                        type: "Identifier",
                                        value: "NaN",
                                      },
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                          parlist: [
                          ],
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 158,
                          lnumStartIndex: 4708,
                          range: [
                            4721,
                            4726,
                          ],
                          type: "Identifier",
                          value: "pcall",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 158,
                      lnumStartIndex: 4708,
                      range: [
                        4717,
                        4720,
                      ],
                      type: "Not",
                      value: "not",
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 158,
                    lnumStartIndex: 4708,
                    range: [
                      4710,
                      4716,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: IndexExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 159,
                          lnumStartIndex: 4755,
                          range: [
                            4764,
                            4765,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      index: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 159,
                          lnumStartIndex: 4755,
                          range: [
                            4766,
                            4769,
                          ],
                          type: "Identifier",
                          value: "NaN",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 159,
                      lnumStartIndex: 4755,
                      range: [
                        4771,
                        4773,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 159,
                        lnumStartIndex: 4755,
                        range: [
                          4774,
                          4777,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 159,
                    lnumStartIndex: 4755,
                    range: [
                      4757,
                      4763,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 162,
                lnumStartIndex: 4784,
                range: [
                  4792,
                  4804,
                ],
                type: "StringLiteral",
                value: '"checktable"',
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 162,
              lnumStartIndex: 4784,
              range: [
                4784,
                4791,
              ],
              type: "Identifier",
              value: "require",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 163,
                lnumStartIndex: 4805,
                range: [
                  4810,
                  4811,
                ],
                type: "Identifier",
                value: "a",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 163,
              lnumStartIndex: 4805,
              range: [
                4805,
                4809,
              ],
              type: "Identifier",
              value: "stat",
            },
          },
        },
      },
      AssignmentStatement {
        init: [
          NilLiteral {
            token: {
              isKeyword: true,
              lnum: 165,
              lnumStartIndex: 4814,
              range: [
                4818,
                4821,
              ],
              type: "NilLiteral",
              value: "nil",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 165,
              lnumStartIndex: 4814,
              range: [
                4814,
                4815,
              ],
              type: "Identifier",
              value: "a",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          StringLiteral {
            token: {
              isKeyword: false,
              lnum: 169,
              lnumStartIndex: 4856,
              range: [
                4869,
                4873,
              ],
              type: "StringLiteral",
              value: "'10'",
            },
          },
          StringLiteral {
            token: {
              isKeyword: false,
              lnum: 169,
              lnumStartIndex: 4856,
              range: [
                4875,
                4879,
              ],
              type: "StringLiteral",
              value: "'20'",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 169,
              lnumStartIndex: 4856,
              range: [
                4862,
                4863,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 169,
              lnumStartIndex: 4856,
              range: [
                4865,
                4866,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 170,
                            lnumStartIndex: 4880,
                            range: [
                              4887,
                              4888,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 170,
                          lnumStartIndex: 4880,
                          range: [
                            4889,
                            4890,
                          ],
                          type: "Star",
                          value: "*",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 170,
                            lnumStartIndex: 4880,
                            range: [
                              4891,
                              4892,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 170,
                        lnumStartIndex: 4880,
                        range: [
                          4893,
                          4895,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 170,
                          lnumStartIndex: 4880,
                          range: [
                            4896,
                            4899,
                          ],
                          type: "NumericLiteral",
                          value: "200",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 170,
                      lnumStartIndex: 4880,
                      range: [
                        4900,
                        4903,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 170,
                            lnumStartIndex: 4880,
                            range: [
                              4904,
                              4905,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 170,
                          lnumStartIndex: 4880,
                          range: [
                            4906,
                            4907,
                          ],
                          type: "Plus",
                          value: "+",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 170,
                            lnumStartIndex: 4880,
                            range: [
                              4908,
                              4909,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 170,
                        lnumStartIndex: 4880,
                        range: [
                          4910,
                          4912,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 170,
                          lnumStartIndex: 4880,
                          range: [
                            4913,
                            4915,
                          ],
                          type: "NumericLiteral",
                          value: "30",
                        },
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 170,
                    lnumStartIndex: 4880,
                    range: [
                      4916,
                      4919,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: BinaryExpression {
                    left: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 170,
                          lnumStartIndex: 4880,
                          range: [
                            4920,
                            4921,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 170,
                        lnumStartIndex: 4880,
                        range: [
                          4922,
                          4923,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                      right: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 170,
                          lnumStartIndex: 4880,
                          range: [
                            4924,
                            4925,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 170,
                      lnumStartIndex: 4880,
                      range: [
                        4926,
                        4928,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: UnaryExpression {
                      argument: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 170,
                          lnumStartIndex: 4880,
                          range: [
                            4930,
                            4932,
                          ],
                          type: "NumericLiteral",
                          value: "10",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 170,
                        lnumStartIndex: 4880,
                        range: [
                          4929,
                          4930,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                  },
                },
                operator: {
                  isKeyword: true,
                  lnum: 170,
                  lnumStartIndex: 4880,
                  range: [
                    4933,
                    4936,
                  ],
                  type: "And",
                  value: "and",
                },
                right: BinaryExpression {
                  left: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 170,
                        lnumStartIndex: 4880,
                        range: [
                          4937,
                          4938,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 170,
                      lnumStartIndex: 4880,
                      range: [
                        4939,
                        4940,
                      ],
                      type: "Divide",
                      value: "/",
                    },
                    right: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 170,
                        lnumStartIndex: 4880,
                        range: [
                          4941,
                          4942,
                        ],
                        type: "Identifier",
                        value: "b",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 170,
                    lnumStartIndex: 4880,
                    range: [
                      4943,
                      4945,
                    ],
                    type: "DoubleEqual",
                    value: "==",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 170,
                      lnumStartIndex: 4880,
                      range: [
                        4946,
                        4949,
                      ],
                      type: "NumericLiteral",
                      value: "0.5",
                    },
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 170,
                lnumStartIndex: 4880,
                range: [
                  4950,
                  4953,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: UnaryExpression {
                  argument: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 170,
                      lnumStartIndex: 4880,
                      range: [
                        4955,
                        4956,
                      ],
                      type: "Identifier",
                      value: "b",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 170,
                    lnumStartIndex: 4880,
                    range: [
                      4954,
                      4955,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 170,
                  lnumStartIndex: 4880,
                  range: [
                    4957,
                    4959,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 170,
                      lnumStartIndex: 4880,
                      range: [
                        4961,
                        4963,
                      ],
                      type: "NumericLiteral",
                      value: "20",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 170,
                    lnumStartIndex: 4880,
                    range: [
                      4960,
                      4961,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 170,
              lnumStartIndex: 4880,
              range: [
                4880,
                4886,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 171,
                    lnumStartIndex: 4965,
                    range: [
                      4972,
                      4973,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 171,
                  lnumStartIndex: 4965,
                  range: [
                    4974,
                    4976,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 171,
                    lnumStartIndex: 4965,
                    range: [
                      4977,
                      4981,
                    ],
                    type: "StringLiteral",
                    value: "'10'",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 171,
                lnumStartIndex: 4965,
                range: [
                  4982,
                  4985,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 171,
                    lnumStartIndex: 4965,
                    range: [
                      4986,
                      4987,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 171,
                  lnumStartIndex: 4965,
                  range: [
                    4988,
                    4990,
                  ],
                  type: "DoubleEqual",
                  value: "==",
                },
                right: StringLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 171,
                    lnumStartIndex: 4965,
                    range: [
                      4991,
                      4995,
                    ],
                    type: "StringLiteral",
                    value: "'20'",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 171,
              lnumStartIndex: 4965,
              range: [
                4965,
                4971,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 174,
                lnumStartIndex: 4999,
                range: [
                  5015,
                  5016,
                ],
                type: "NumericLiteral",
                value: "0",
              },
            },
          ],
          base: MemberExpression {
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 174,
                lnumStartIndex: 4999,
                range: [
                  4999,
                  5003,
                ],
                type: "Identifier",
                value: "math",
              },
            },
            identifier: Identifier {
              token: {
                isKeyword: false,
                lnum: 174,
                lnumStartIndex: 4999,
                range: [
                  5004,
                  5014,
                ],
                type: "Identifier",
                value: "randomseed",
              },
            },
            indexer: ".",
          },
        },
      },
      LocalStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 176,
              lnumStartIndex: 5019,
              range: [
                5029,
                5030,
              ],
              type: "NumericLiteral",
              value: "0",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 176,
              lnumStartIndex: 5019,
              range: [
                5025,
                5026,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 177,
              lnumStartIndex: 5031,
              range: [
                5043,
                5044,
              ],
              type: "NumericLiteral",
              value: "0",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 177,
              lnumStartIndex: 5031,
              range: [
                5037,
                5040,
              ],
              type: "Identifier",
              value: "Max",
            },
          },
        ],
      },
      LocalStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 178,
              lnumStartIndex: 5045,
              range: [
                5057,
                5058,
              ],
              type: "NumericLiteral",
              value: "2",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 178,
              lnumStartIndex: 5045,
              range: [
                5051,
                5054,
              ],
              type: "Identifier",
              value: "Min",
            },
          },
        ],
      },
      RepeatStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                FunctionCallExpression {
                  args: [
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 180,
                        lnumStartIndex: 5066,
                        range: [
                          5078,
                          5082,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 180,
                        lnumStartIndex: 5066,
                        range: [
                          5083,
                          5089,
                        ],
                        type: "Identifier",
                        value: "random",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 180,
                    lnumStartIndex: 5066,
                    range: [
                      5074,
                      5075,
                    ],
                    type: "Identifier",
                    value: "t",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 181,
                        lnumStartIndex: 5092,
                        range: [
                          5109,
                          5112,
                        ],
                        type: "Identifier",
                        value: "Max",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 181,
                        lnumStartIndex: 5092,
                        range: [
                          5114,
                          5115,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 181,
                        lnumStartIndex: 5092,
                        range: [
                          5100,
                          5104,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 181,
                        lnumStartIndex: 5092,
                        range: [
                          5105,
                          5108,
                        ],
                        type: "Identifier",
                        value: "max",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 181,
                    lnumStartIndex: 5092,
                    range: [
                      5094,
                      5097,
                    ],
                    type: "Identifier",
                    value: "Max",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 182,
                        lnumStartIndex: 5117,
                        range: [
                          5134,
                          5137,
                        ],
                        type: "Identifier",
                        value: "Min",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 182,
                        lnumStartIndex: 5117,
                        range: [
                          5139,
                          5140,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 182,
                        lnumStartIndex: 5117,
                        range: [
                          5125,
                          5129,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 182,
                        lnumStartIndex: 5117,
                        range: [
                          5130,
                          5133,
                        ],
                        type: "Identifier",
                        value: "min",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 182,
                    lnumStartIndex: 5117,
                    range: [
                      5119,
                      5122,
                    ],
                    type: "Identifier",
                    value: "Min",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 183,
                      lnumStartIndex: 5142,
                      range: [
                        5148,
                        5149,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 183,
                    lnumStartIndex: 5142,
                    range: [
                      5150,
                      5151,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 183,
                      lnumStartIndex: 5142,
                      range: [
                        5152,
                        5153,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 183,
                    lnumStartIndex: 5142,
                    range: [
                      5144,
                      5145,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: FunctionCallExpression {
                    args: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 184,
                          lnumStartIndex: 5154,
                          range: [
                            5166,
                            5169,
                          ],
                          type: "Identifier",
                          value: "Max",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 184,
                          lnumStartIndex: 5154,
                          range: [
                            5171,
                            5172,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 184,
                          lnumStartIndex: 5154,
                          range: [
                            5174,
                            5179,
                          ],
                          type: "NumericLiteral",
                          value: "0.001",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 184,
                        lnumStartIndex: 5154,
                        range: [
                          5163,
                          5165,
                        ],
                        type: "Identifier",
                        value: "eq",
                      },
                    },
                  },
                  operator: {
                    isKeyword: true,
                    lnum: 184,
                    lnumStartIndex: 5154,
                    range: [
                      5181,
                      5184,
                    ],
                    type: "And",
                    value: "and",
                  },
                  right: FunctionCallExpression {
                    args: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 184,
                          lnumStartIndex: 5154,
                          range: [
                            5188,
                            5191,
                          ],
                          type: "Identifier",
                          value: "Min",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 184,
                          lnumStartIndex: 5154,
                          range: [
                            5193,
                            5194,
                          ],
                          type: "NumericLiteral",
                          value: "0",
                        },
                      },
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 184,
                          lnumStartIndex: 5154,
                          range: [
                            5196,
                            5201,
                          ],
                          type: "NumericLiteral",
                          value: "0.001",
                        },
                      },
                    ],
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 184,
                        lnumStartIndex: 5154,
                        range: [
                          5185,
                          5187,
                        ],
                        type: "Identifier",
                        value: "eq",
                      },
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 184,
                    lnumStartIndex: 5154,
                    range: [
                      5156,
                      5160,
                    ],
                    type: "Identifier",
                    value: "flag",
                  },
                },
              ],
            },
          ],
        },
        condition: BinaryExpression {
          left: Identifier {
            token: {
              isKeyword: false,
              lnum: 185,
              lnumStartIndex: 5203,
              range: [
                5209,
                5213,
              ],
              type: "Identifier",
              value: "flag",
            },
          },
          operator: {
            isKeyword: true,
            lnum: 185,
            lnumStartIndex: 5203,
            range: [
              5214,
              5216,
            ],
            type: "Or",
            value: "or",
          },
          right: BinaryExpression {
            left: Identifier {
              token: {
                isKeyword: false,
                lnum: 185,
                lnumStartIndex: 5203,
                range: [
                  5217,
                  5218,
                ],
                type: "Identifier",
                value: "i",
              },
            },
            operator: {
              isKeyword: false,
              lnum: 185,
              lnumStartIndex: 5203,
              range: [
                5219,
                5220,
              ],
              type: "GreaterThan",
              value: ">",
            },
            right: NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 185,
                lnumStartIndex: 5203,
                range: [
                  5221,
                  5226,
                ],
                type: "NumericLiteral",
                value: "10000",
              },
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 186,
                    lnumStartIndex: 5227,
                    range: [
                      5234,
                      5235,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 186,
                  lnumStartIndex: 5227,
                  range: [
                    5236,
                    5238,
                  ],
                  type: "LessThanEqual",
                  value: "<=",
                },
                right: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 186,
                    lnumStartIndex: 5227,
                    range: [
                      5239,
                      5242,
                    ],
                    type: "Identifier",
                    value: "Min",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 186,
                lnumStartIndex: 5227,
                range: [
                  5243,
                  5246,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 186,
                    lnumStartIndex: 5227,
                    range: [
                      5247,
                      5250,
                    ],
                    type: "Identifier",
                    value: "Max",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 186,
                  lnumStartIndex: 5227,
                  range: [
                    5251,
                    5252,
                  ],
                  type: "LessThan",
                  value: "<",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 186,
                    lnumStartIndex: 5227,
                    range: [
                      5253,
                      5254,
                    ],
                    type: "NumericLiteral",
                    value: "1",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 186,
              lnumStartIndex: 5227,
              range: [
                5227,
                5233,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 187,
                lnumStartIndex: 5256,
                range: [
                  5263,
                  5267,
                ],
                type: "Identifier",
                value: "flag",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 187,
              lnumStartIndex: 5256,
              range: [
                5256,
                5262,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      ForNumericStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 190,
                        lnumStartIndex: 5288,
                        range: [
                          5312,
                          5313,
                        ],
                        type: "NumericLiteral",
                        value: "5",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 190,
                        lnumStartIndex: 5288,
                        range: [
                          5300,
                          5304,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 190,
                        lnumStartIndex: 5288,
                        range: [
                          5305,
                          5311,
                        ],
                        type: "Identifier",
                        value: "random",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 190,
                    lnumStartIndex: 5288,
                    range: [
                      5296,
                      5297,
                    ],
                    type: "Identifier",
                    value: "t",
                  },
                },
              ],
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: BinaryExpression {
                      left: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 5315,
                          range: [
                            5324,
                            5325,
                          ],
                          type: "NumericLiteral",
                          value: "1",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 191,
                        lnumStartIndex: 5315,
                        range: [
                          5326,
                          5328,
                        ],
                        type: "LessThanEqual",
                        value: "<=",
                      },
                      right: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 5315,
                          range: [
                            5329,
                            5330,
                          ],
                          type: "Identifier",
                          value: "t",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 191,
                      lnumStartIndex: 5315,
                      range: [
                        5331,
                        5334,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 5315,
                          range: [
                            5335,
                            5336,
                          ],
                          type: "Identifier",
                          value: "t",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 191,
                        lnumStartIndex: 5315,
                        range: [
                          5337,
                          5339,
                        ],
                        type: "LessThanEqual",
                        value: "<=",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 191,
                          lnumStartIndex: 5315,
                          range: [
                            5340,
                            5341,
                          ],
                          type: "NumericLiteral",
                          value: "5",
                        },
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 191,
                    lnumStartIndex: 5315,
                    range: [
                      5317,
                      5323,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
        end: NumericLiteral {
          token: {
            isKeyword: false,
            lnum: 189,
            lnumStartIndex: 5271,
            range: [
              5282,
              5284,
            ],
            type: "NumericLiteral",
            value: "10",
          },
        },
        start: NumericLiteral {
          token: {
            isKeyword: false,
            lnum: 189,
            lnumStartIndex: 5271,
            range: [
              5279,
              5280,
            ],
            type: "NumericLiteral",
            value: "1",
          },
        },
        step: undefined,
        variable: Identifier {
          token: {
            isKeyword: false,
            lnum: 189,
            lnumStartIndex: 5271,
            range: [
              5275,
              5276,
            ],
            type: "Identifier",
            value: "i",
          },
        },
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 194,
              lnumStartIndex: 5348,
              range: [
                5352,
                5353,
              ],
              type: "NumericLiteral",
              value: "0",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 194,
              lnumStartIndex: 5348,
              range: [
                5348,
                5349,
              ],
              type: "Identifier",
              value: "i",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          UnaryExpression {
            argument: NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 195,
                lnumStartIndex: 5354,
                range: [
                  5361,
                  5364,
                ],
                type: "NumericLiteral",
                value: "200",
              },
            },
            operator: {
              isKeyword: false,
              lnum: 195,
              lnumStartIndex: 5354,
              range: [
                5360,
                5361,
              ],
              type: "Minus",
              value: "-",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 195,
              lnumStartIndex: 5354,
              range: [
                5354,
                5357,
              ],
              type: "Identifier",
              value: "Max",
            },
          },
        ],
      },
      AssignmentStatement {
        init: [
          NumericLiteral {
            token: {
              isKeyword: false,
              lnum: 196,
              lnumStartIndex: 5365,
              range: [
                5371,
                5374,
              ],
              type: "NumericLiteral",
              value: "200",
            },
          },
        ],
        variables: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 196,
              lnumStartIndex: 5365,
              range: [
                5365,
                5368,
              ],
              type: "Identifier",
              value: "Min",
            },
          },
        ],
      },
      RepeatStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    UnaryExpression {
                      argument: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 198,
                          lnumStartIndex: 5382,
                          range: [
                            5407,
                            5409,
                          ],
                          type: "NumericLiteral",
                          value: "10",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 198,
                        lnumStartIndex: 5382,
                        range: [
                          5406,
                          5407,
                        ],
                        type: "Minus",
                        value: "-",
                      },
                    },
                    NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 198,
                        lnumStartIndex: 5382,
                        range: [
                          5411,
                          5412,
                        ],
                        type: "NumericLiteral",
                        value: "0",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 198,
                        lnumStartIndex: 5382,
                        range: [
                          5394,
                          5398,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 198,
                        lnumStartIndex: 5382,
                        range: [
                          5399,
                          5405,
                        ],
                        type: "Identifier",
                        value: "random",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 198,
                    lnumStartIndex: 5382,
                    range: [
                      5390,
                      5391,
                    ],
                    type: "Identifier",
                    value: "t",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 199,
                        lnumStartIndex: 5414,
                        range: [
                          5431,
                          5434,
                        ],
                        type: "Identifier",
                        value: "Max",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 199,
                        lnumStartIndex: 5414,
                        range: [
                          5436,
                          5437,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 199,
                        lnumStartIndex: 5414,
                        range: [
                          5422,
                          5426,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 199,
                        lnumStartIndex: 5414,
                        range: [
                          5427,
                          5430,
                        ],
                        type: "Identifier",
                        value: "max",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 199,
                    lnumStartIndex: 5414,
                    range: [
                      5416,
                      5419,
                    ],
                    type: "Identifier",
                    value: "Max",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 200,
                        lnumStartIndex: 5439,
                        range: [
                          5456,
                          5459,
                        ],
                        type: "Identifier",
                        value: "Min",
                      },
                    },
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 200,
                        lnumStartIndex: 5439,
                        range: [
                          5461,
                          5462,
                        ],
                        type: "Identifier",
                        value: "t",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 200,
                        lnumStartIndex: 5439,
                        range: [
                          5447,
                          5451,
                        ],
                        type: "Identifier",
                        value: "math",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 200,
                        lnumStartIndex: 5439,
                        range: [
                          5452,
                          5455,
                        ],
                        type: "Identifier",
                        value: "min",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 200,
                    lnumStartIndex: 5439,
                    range: [
                      5441,
                      5444,
                    ],
                    type: "Identifier",
                    value: "Min",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                BinaryExpression {
                  left: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 201,
                      lnumStartIndex: 5464,
                      range: [
                        5470,
                        5471,
                      ],
                      type: "Identifier",
                      value: "i",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 201,
                    lnumStartIndex: 5464,
                    range: [
                      5472,
                      5473,
                    ],
                    type: "Plus",
                    value: "+",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 201,
                      lnumStartIndex: 5464,
                      range: [
                        5474,
                        5475,
                      ],
                      type: "NumericLiteral",
                      value: "1",
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 201,
                    lnumStartIndex: 5464,
                    range: [
                      5466,
                      5467,
                    ],
                    type: "Identifier",
                    value: "i",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                GroupingExpression {
                  expression: BinaryExpression {
                    left: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 202,
                          lnumStartIndex: 5476,
                          range: [
                            5486,
                            5489,
                          ],
                          type: "Identifier",
                          value: "Max",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 202,
                        lnumStartIndex: 5476,
                        range: [
                          5490,
                          5492,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 202,
                          lnumStartIndex: 5476,
                          range: [
                            5493,
                            5494,
                          ],
                          type: "NumericLiteral",
                          value: "0",
                        },
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 202,
                      lnumStartIndex: 5476,
                      range: [
                        5495,
                        5498,
                      ],
                      type: "And",
                      value: "and",
                    },
                    right: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 202,
                          lnumStartIndex: 5476,
                          range: [
                            5499,
                            5502,
                          ],
                          type: "Identifier",
                          value: "Min",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 202,
                        lnumStartIndex: 5476,
                        range: [
                          5503,
                          5505,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: UnaryExpression {
                        argument: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 202,
                            lnumStartIndex: 5476,
                            range: [
                              5507,
                              5509,
                            ],
                            type: "NumericLiteral",
                            value: "10",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 202,
                          lnumStartIndex: 5476,
                          range: [
                            5506,
                            5507,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                    },
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 202,
                    lnumStartIndex: 5476,
                    range: [
                      5478,
                      5482,
                    ],
                    type: "Identifier",
                    value: "flag",
                  },
                },
              ],
            },
          ],
        },
        condition: BinaryExpression {
          left: Identifier {
            token: {
              isKeyword: false,
              lnum: 203,
              lnumStartIndex: 5511,
              range: [
                5517,
                5521,
              ],
              type: "Identifier",
              value: "flag",
            },
          },
          operator: {
            isKeyword: true,
            lnum: 203,
            lnumStartIndex: 5511,
            range: [
              5522,
              5524,
            ],
            type: "Or",
            value: "or",
          },
          right: BinaryExpression {
            left: Identifier {
              token: {
                isKeyword: false,
                lnum: 203,
                lnumStartIndex: 5511,
                range: [
                  5525,
                  5526,
                ],
                type: "Identifier",
                value: "i",
              },
            },
            operator: {
              isKeyword: false,
              lnum: 203,
              lnumStartIndex: 5511,
              range: [
                5527,
                5528,
              ],
              type: "GreaterThan",
              value: ">",
            },
            right: NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 203,
                lnumStartIndex: 5511,
                range: [
                  5529,
                  5534,
                ],
                type: "NumericLiteral",
                value: "10000",
              },
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: BinaryExpression {
                left: UnaryExpression {
                  argument: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 204,
                      lnumStartIndex: 5535,
                      range: [
                        5543,
                        5545,
                      ],
                      type: "NumericLiteral",
                      value: "10",
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 204,
                    lnumStartIndex: 5535,
                    range: [
                      5542,
                      5543,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 204,
                  lnumStartIndex: 5535,
                  range: [
                    5546,
                    5548,
                  ],
                  type: "LessThanEqual",
                  value: "<=",
                },
                right: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 204,
                    lnumStartIndex: 5535,
                    range: [
                      5549,
                      5552,
                    ],
                    type: "Identifier",
                    value: "Min",
                  },
                },
              },
              operator: {
                isKeyword: true,
                lnum: 204,
                lnumStartIndex: 5535,
                range: [
                  5553,
                  5556,
                ],
                type: "And",
                value: "and",
              },
              right: BinaryExpression {
                left: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 204,
                    lnumStartIndex: 5535,
                    range: [
                      5557,
                      5560,
                    ],
                    type: "Identifier",
                    value: "Max",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 204,
                  lnumStartIndex: 5535,
                  range: [
                    5561,
                    5563,
                  ],
                  type: "LessThanEqual",
                  value: "<=",
                },
                right: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 204,
                    lnumStartIndex: 5535,
                    range: [
                      5564,
                      5565,
                    ],
                    type: "NumericLiteral",
                    value: "0",
                  },
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 204,
              lnumStartIndex: 5535,
              range: [
                5535,
                5541,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 205,
                lnumStartIndex: 5567,
                range: [
                  5574,
                  5578,
                ],
                type: "Identifier",
                value: "flag",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 205,
              lnumStartIndex: 5567,
              range: [
                5567,
                5573,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 208,
                lnumStartIndex: 5583,
                range: [
                  5589,
                  5593,
                ],
                type: "StringLiteral",
                value: "'OK'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 208,
              lnumStartIndex: 5583,
              range: [
                5583,
                5588,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
    ],
  },
}
`;
