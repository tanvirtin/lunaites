export const snapshot = {};

snapshot[`5.1_code 1`] = `
Chunk {
  block: Block {
    statements: [
      IfStatement {
        elseBlock: null,
        elseifBlocks: [
        ],
        elseifConditions: [
        ],
        ifBlock: Block {
          statements: [
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  StringLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 2,
                      lnumStartIndex: 17,
                      range: [
                        38,
                        96,
                      ],
                      type: "StringLiteral",
                      value: "'\\\\a\\
 >>> testC not active: skipping opcode tests <<<\\
\\\\a'",
                    },
                  },
                ],
                base: GroupingExpression {
                  expression: BinaryExpression {
                    left: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 2,
                        lnumStartIndex: 17,
                        range: [
                          20,
                          27,
                        ],
                        type: "Identifier",
                        value: "Message",
                      },
                    },
                    operator: {
                      isKeyword: true,
                      lnum: 2,
                      lnumStartIndex: 17,
                      range: [
                        28,
                        30,
                      ],
                      type: "Or",
                      value: "or",
                    },
                    right: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 2,
                        lnumStartIndex: 17,
                        range: [
                          31,
                          36,
                        ],
                        type: "Identifier",
                        value: "print",
                      },
                    },
                  },
                },
              },
            },
            ReturnStatement {
              arguments: [
              ],
            },
          ],
        },
        ifCondition: BinaryExpression {
          left: Identifier {
            token: {
              isKeyword: false,
              lnum: 1,
              lnumStartIndex: 0,
              range: [
                3,
                4,
              ],
              type: "Identifier",
              value: "T",
            },
          },
          operator: {
            isKeyword: false,
            lnum: 1,
            lnumStartIndex: 0,
            range: [
              5,
              7,
            ],
            type: "DoubleEqual",
            value: "==",
          },
          right: NilLiteral {
            token: {
              isKeyword: true,
              lnum: 1,
              lnumStartIndex: 0,
              range: [
                8,
                11,
              ],
              type: "NilLiteral",
              value: "nil",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 5,
                lnumStartIndex: 111,
                range: [
                  117,
                  160,
                ],
                type: "StringLiteral",
                value: '"testing code generation and optimizations"',
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 5,
              lnumStartIndex: 111,
              range: [
                111,
                116,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
      DoStatement {
        block: Block {
          statements: [
            FunctionLocalStatement {
              block: Block {
                statements: [
                  ForGenericStatement {
                    block: Block {
                      statements: [
                      ],
                    },
                    iterators: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 11,
                          lnumStartIndex: 236,
                          range: [
                            255,
                            256,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 11,
                          lnumStartIndex: 236,
                          range: [
                            244,
                            245,
                          ],
                          type: "Identifier",
                          value: "k",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 11,
                          lnumStartIndex: 236,
                          range: [
                            247,
                            248,
                          ],
                          type: "Identifier",
                          value: "v",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 11,
                          lnumStartIndex: 236,
                          range: [
                            250,
                            251,
                          ],
                          type: "Identifier",
                          value: "w",
                        },
                      },
                    ],
                  },
                ],
              },
              funcname: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 10,
                  lnumStartIndex: 214,
                  range: [
                    231,
                    232,
                  ],
                  type: "Identifier",
                  value: "f",
                },
              },
              parlist: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 10,
                    lnumStartIndex: 214,
                    range: [
                      233,
                      234,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
              ],
            },
          ],
        },
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            LocalStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 17,
                        lnumStartIndex: 299,
                        range: [
                          322,
                          323,
                        ],
                        type: "Identifier",
                        value: "f",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 17,
                        lnumStartIndex: 299,
                        range: [
                          311,
                          312,
                        ],
                        type: "Identifier",
                        value: "T",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 17,
                        lnumStartIndex: 299,
                        range: [
                          313,
                          321,
                        ],
                        type: "Identifier",
                        value: "listcode",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 17,
                    lnumStartIndex: 299,
                    range: [
                      307,
                      308,
                    ],
                    type: "Identifier",
                    value: "c",
                  },
                },
              ],
            },
            ForNumericStatement {
              block: Block {
                statements: [
                  FunctionCallStatement {
                    expression: FunctionCallExpression {
                      args: [
                        FunctionCallExpression {
                          args: [
                            IndexExpression {
                              base: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 20,
                                  lnumStartIndex: 374,
                                  range: [
                                    397,
                                    398,
                                  ],
                                  type: "Identifier",
                                  value: "c",
                                },
                              },
                              index: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 20,
                                  lnumStartIndex: 374,
                                  range: [
                                    399,
                                    400,
                                  ],
                                  type: "Identifier",
                                  value: "i",
                                },
                              },
                            },
                            BinaryExpression {
                              left: BinaryExpression {
                                left: StringLiteral {
                                  token: {
                                    isKeyword: false,
                                    lnum: 20,
                                    lnumStartIndex: 374,
                                    range: [
                                      403,
                                      407,
                                    ],
                                    type: "StringLiteral",
                                    value: "'- '",
                                  },
                                },
                                operator: {
                                  isKeyword: false,
                                  lnum: 20,
                                  lnumStartIndex: 374,
                                  range: [
                                    408,
                                    410,
                                  ],
                                  type: "DoubleDot",
                                  value: "..",
                                },
                                right: IndexExpression {
                                  base: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 20,
                                      lnumStartIndex: 374,
                                      range: [
                                        411,
                                        414,
                                      ],
                                      type: "Identifier",
                                      value: "arg",
                                    },
                                  },
                                  index: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 20,
                                      lnumStartIndex: 374,
                                      range: [
                                        415,
                                        416,
                                      ],
                                      type: "Identifier",
                                      value: "i",
                                    },
                                  },
                                },
                              },
                              operator: {
                                isKeyword: false,
                                lnum: 20,
                                lnumStartIndex: 374,
                                range: [
                                  418,
                                  420,
                                ],
                                type: "DoubleDot",
                                value: "..",
                              },
                              right: StringLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 20,
                                  lnumStartIndex: 374,
                                  range: [
                                    421,
                                    427,
                                  ],
                                  type: "StringLiteral",
                                  value: "' *%d'",
                                },
                              },
                            },
                          ],
                          base: MemberExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 20,
                                lnumStartIndex: 374,
                                range: [
                                  385,
                                  391,
                                ],
                                type: "Identifier",
                                value: "string",
                              },
                            },
                            identifier: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 20,
                                lnumStartIndex: 374,
                                range: [
                                  392,
                                  396,
                                ],
                                type: "Identifier",
                                value: "find",
                              },
                            },
                            indexer: ".",
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 20,
                          lnumStartIndex: 374,
                          range: [
                            378,
                            384,
                          ],
                          type: "Identifier",
                          value: "assert",
                        },
                      },
                    },
                  },
                ],
              },
              end: MemberExpression {
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 18,
                    lnumStartIndex: 325,
                    range: [
                      338,
                      341,
                    ],
                    type: "Identifier",
                    value: "arg",
                  },
                },
                identifier: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 18,
                    lnumStartIndex: 325,
                    range: [
                      342,
                      343,
                    ],
                    type: "Identifier",
                    value: "n",
                  },
                },
                indexer: ".",
              },
              start: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 18,
                  lnumStartIndex: 325,
                  range: [
                    335,
                    336,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
              step: undefined,
              variable: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 18,
                  lnumStartIndex: 325,
                  range: [
                    331,
                    332,
                  ],
                  type: "Identifier",
                  value: "i",
                },
              },
            },
            FunctionCallStatement {
              expression: FunctionCallExpression {
                args: [
                  BinaryExpression {
                    left: IndexExpression {
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 22,
                          lnumStartIndex: 436,
                          range: [
                            445,
                            446,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      index: BinaryExpression {
                        left: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 22,
                              lnumStartIndex: 436,
                              range: [
                                447,
                                450,
                              ],
                              type: "Identifier",
                              value: "arg",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 22,
                              lnumStartIndex: 436,
                              range: [
                                451,
                                452,
                              ],
                              type: "Identifier",
                              value: "n",
                            },
                          },
                          indexer: ".",
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 22,
                          lnumStartIndex: 436,
                          range: [
                            453,
                            454,
                          ],
                          type: "Plus",
                          value: "+",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 22,
                            lnumStartIndex: 436,
                            range: [
                              455,
                              456,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 22,
                      lnumStartIndex: 436,
                      range: [
                        458,
                        460,
                      ],
                      type: "DoubleEqual",
                      value: "==",
                    },
                    right: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 22,
                        lnumStartIndex: 436,
                        range: [
                          461,
                          464,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 22,
                    lnumStartIndex: 436,
                    range: [
                      438,
                      444,
                    ],
                    type: "Identifier",
                    value: "assert",
                  },
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 16,
            lnumStartIndex: 276,
            range: [
              285,
              290,
            ],
            type: "Identifier",
            value: "check",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 16,
              lnumStartIndex: 276,
              range: [
                291,
                292,
              ],
              type: "Identifier",
              value: "f",
            },
          },
          VarargLiteral {
            token: {
              isKeyword: false,
              lnum: 16,
              lnumStartIndex: 276,
              range: [
                294,
                297,
              ],
              type: "VarargLiteral",
              value: "...",
            },
          },
        ],
      },
      FunctionDeclarationStatement {
        block: Block {
          statements: [
            AssignmentStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 26,
                        lnumStartIndex: 497,
                        range: [
                          514,
                          515,
                        ],
                        type: "Identifier",
                        value: "a",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 26,
                        lnumStartIndex: 497,
                        range: [
                          503,
                          504,
                        ],
                        type: "Identifier",
                        value: "T",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 26,
                        lnumStartIndex: 497,
                        range: [
                          505,
                          513,
                        ],
                        type: "Identifier",
                        value: "listcode",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 26,
                    lnumStartIndex: 497,
                    range: [
                      499,
                      500,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
              ],
            },
            AssignmentStatement {
              init: [
                FunctionCallExpression {
                  args: [
                    Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 27,
                        lnumStartIndex: 517,
                        range: [
                          534,
                          535,
                        ],
                        type: "Identifier",
                        value: "b",
                      },
                    },
                  ],
                  base: MemberExpression {
                    base: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 27,
                        lnumStartIndex: 517,
                        range: [
                          523,
                          524,
                        ],
                        type: "Identifier",
                        value: "T",
                      },
                    },
                    identifier: Identifier {
                      token: {
                        isKeyword: false,
                        lnum: 27,
                        lnumStartIndex: 517,
                        range: [
                          525,
                          533,
                        ],
                        type: "Identifier",
                        value: "listcode",
                      },
                    },
                    indexer: ".",
                  },
                },
              ],
              variables: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 27,
                    lnumStartIndex: 517,
                    range: [
                      519,
                      520,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
              ],
            },
            ForNumericStatement {
              block: Block {
                statements: [
                  AssignmentStatement {
                    init: [
                      FunctionCallExpression {
                        args: [
                          IndexExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 29,
                                lnumStartIndex: 567,
                                range: [
                                  590,
                                  591,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                            index: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 29,
                                lnumStartIndex: 567,
                                range: [
                                  592,
                                  593,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          },
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 29,
                              lnumStartIndex: 567,
                              range: [
                                596,
                                602,
                              ],
                              type: "StringLiteral",
                              value: "'%b()'",
                            },
                          },
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 29,
                              lnumStartIndex: 567,
                              range: [
                                604,
                                606,
                              ],
                              type: "StringLiteral",
                              value: "''",
                            },
                          },
                        ],
                        base: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 29,
                              lnumStartIndex: 567,
                              range: [
                                578,
                                584,
                              ],
                              type: "Identifier",
                              value: "string",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 29,
                              lnumStartIndex: 567,
                              range: [
                                585,
                                589,
                              ],
                              type: "Identifier",
                              value: "gsub",
                            },
                          },
                          indexer: ".",
                        },
                      },
                    ],
                    variables: [
                      IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 29,
                            lnumStartIndex: 567,
                            range: [
                              571,
                              572,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        index: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 29,
                            lnumStartIndex: 567,
                            range: [
                              573,
                              574,
                            ],
                            type: "Identifier",
                            value: "i",
                          },
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      FunctionCallExpression {
                        args: [
                          IndexExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 30,
                                lnumStartIndex: 630,
                                range: [
                                  653,
                                  654,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                            index: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 30,
                                lnumStartIndex: 630,
                                range: [
                                  655,
                                  656,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          },
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 30,
                              lnumStartIndex: 630,
                              range: [
                                659,
                                665,
                              ],
                              type: "StringLiteral",
                              value: "'%b()'",
                            },
                          },
                          StringLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 30,
                              lnumStartIndex: 630,
                              range: [
                                667,
                                669,
                              ],
                              type: "StringLiteral",
                              value: "''",
                            },
                          },
                        ],
                        base: MemberExpression {
                          base: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 30,
                              lnumStartIndex: 630,
                              range: [
                                641,
                                647,
                              ],
                              type: "Identifier",
                              value: "string",
                            },
                          },
                          identifier: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 30,
                              lnumStartIndex: 630,
                              range: [
                                648,
                                652,
                              ],
                              type: "Identifier",
                              value: "gsub",
                            },
                          },
                          indexer: ".",
                        },
                      },
                    ],
                    variables: [
                      IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 30,
                            lnumStartIndex: 630,
                            range: [
                              634,
                              635,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        index: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 30,
                            lnumStartIndex: 630,
                            range: [
                              636,
                              637,
                            ],
                            type: "Identifier",
                            value: "i",
                          },
                        },
                      },
                    ],
                  },
                  FunctionCallStatement {
                    expression: FunctionCallExpression {
                      args: [
                        BinaryExpression {
                          left: IndexExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 31,
                                lnumStartIndex: 693,
                                range: [
                                  704,
                                  705,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                            index: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 31,
                                lnumStartIndex: 693,
                                range: [
                                  706,
                                  707,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 31,
                            lnumStartIndex: 693,
                            range: [
                              709,
                              711,
                            ],
                            type: "DoubleEqual",
                            value: "==",
                          },
                          right: IndexExpression {
                            base: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 31,
                                lnumStartIndex: 693,
                                range: [
                                  712,
                                  713,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                            index: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 31,
                                lnumStartIndex: 693,
                                range: [
                                  714,
                                  715,
                                ],
                                type: "Identifier",
                                value: "i",
                              },
                            },
                          },
                        },
                      ],
                      base: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 31,
                          lnumStartIndex: 693,
                          range: [
                            697,
                            703,
                          ],
                          type: "Identifier",
                          value: "assert",
                        },
                      },
                    },
                  },
                ],
              },
              end: FunctionCallExpression {
                args: [
                  Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 28,
                      lnumStartIndex: 537,
                      range: [
                        561,
                        562,
                      ],
                      type: "Identifier",
                      value: "a",
                    },
                  },
                ],
                base: MemberExpression {
                  base: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 28,
                      lnumStartIndex: 537,
                      range: [
                        550,
                        555,
                      ],
                      type: "Identifier",
                      value: "table",
                    },
                  },
                  identifier: Identifier {
                    token: {
                      isKeyword: false,
                      lnum: 28,
                      lnumStartIndex: 537,
                      range: [
                        556,
                        560,
                      ],
                      type: "Identifier",
                      value: "getn",
                    },
                  },
                  indexer: ".",
                },
              },
              start: NumericLiteral {
                token: {
                  isKeyword: false,
                  lnum: 28,
                  lnumStartIndex: 537,
                  range: [
                    547,
                    548,
                  ],
                  type: "NumericLiteral",
                  value: "1",
                },
              },
              step: undefined,
              variable: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 28,
                  lnumStartIndex: 537,
                  range: [
                    543,
                    544,
                  ],
                  type: "Identifier",
                  value: "i",
                },
              },
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 25,
            lnumStartIndex: 471,
            range: [
              480,
              490,
            ],
            type: "Identifier",
            value: "checkequal",
          },
        },
        parlist: [
          Identifier {
            token: {
              isKeyword: false,
              lnum: 25,
              lnumStartIndex: 471,
              range: [
                491,
                492,
              ],
              type: "Identifier",
              value: "a",
            },
          },
          Identifier {
            token: {
              isKeyword: false,
              lnum: 25,
              lnumStartIndex: 471,
              range: [
                494,
                495,
              ],
              type: "Identifier",
              value: "b",
            },
          },
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  FunctionCallStatement {
                    expression: FunctionCallExpression {
                      args: [
                        TableConstructor {
                          fieldlist: [
                            TableValue {
                              value: FunctionCallExpression {
                                args: [
                                ],
                                base: Identifier {
                                  token: {
                                    isKeyword: false,
                                    lnum: 37,
                                    lnumStartIndex: 773,
                                    range: [
                                      794,
                                      795,
                                    ],
                                    type: "Identifier",
                                    value: "f",
                                  },
                                },
                              },
                            },
                          ],
                        },
                      ],
                      base: GroupingExpression {
                        expression: FunctionExpression {
                          block: Block {
                            statements: [
                            ],
                          },
                          parlist: [
                          ],
                        },
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 800,
                range: [
                  805,
                  814,
                ],
                type: "StringLiteral",
                value: "'CLOSURE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 800,
                range: [
                  816,
                  826,
                ],
                type: "StringLiteral",
                value: "'NEWTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 800,
                range: [
                  828,
                  839,
                ],
                type: "StringLiteral",
                value: "'GETGLOBAL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 800,
                range: [
                  841,
                  847,
                ],
                type: "StringLiteral",
                value: "'CALL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 800,
                range: [
                  849,
                  858,
                ],
                type: "StringLiteral",
                value: "'SETLIST'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 800,
                range: [
                  860,
                  866,
                ],
                type: "StringLiteral",
                value: "'CALL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 38,
                lnumStartIndex: 800,
                range: [
                  868,
                  876,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 36,
              lnumStartIndex: 756,
              range: [
                756,
                761,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 43,
                          lnumStartIndex: 921,
                          range: [
                            929,
                            930,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 43,
                          lnumStartIndex: 921,
                          range: [
                            932,
                            933,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 43,
                          lnumStartIndex: 921,
                          range: [
                            935,
                            936,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                    ],
                  },
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 44,
                          lnumStartIndex: 937,
                          range: [
                            945,
                            946,
                          ],
                          type: "Identifier",
                          value: "d",
                        },
                      },
                    ],
                  },
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 45,
                          lnumStartIndex: 948,
                          range: [
                            956,
                            957,
                          ],
                          type: "Identifier",
                          value: "e",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 46,
                          lnumStartIndex: 959,
                          range: [
                            965,
                            968,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 46,
                          lnumStartIndex: 959,
                          range: [
                            961,
                            962,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 47,
                          lnumStartIndex: 970,
                          range: [
                            976,
                            979,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 47,
                          lnumStartIndex: 970,
                          range: [
                            972,
                            973,
                          ],
                          type: "Identifier",
                          value: "d",
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 48,
                lnumStartIndex: 980,
                range: [
                  985,
                  993,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 42,
              lnumStartIndex: 904,
              range: [
                904,
                909,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 52,
                          lnumStartIndex: 1014,
                          range: [
                            1045,
                            1046,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 52,
                    lnumStartIndex: 1014,
                    range: [
                      1029,
                      1030,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 52,
                    lnumStartIndex: 1014,
                    range: [
                      1032,
                      1033,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 52,
                    lnumStartIndex: 1014,
                    range: [
                      1035,
                      1036,
                    ],
                    type: "Identifier",
                    value: "c",
                  },
                },
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 52,
                lnumStartIndex: 1014,
                range: [
                  1052,
                  1060,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 52,
              lnumStartIndex: 1014,
              range: [
                1014,
                1019,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  WhileStatement {
                    block: Block {
                      statements: [
                        LocalStatement {
                          init: [
                            UnaryExpression {
                              argument: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 56,
                                  lnumStartIndex: 1082,
                                  range: [
                                    1124,
                                    1125,
                                  ],
                                  type: "NumericLiteral",
                                  value: "1",
                                },
                              },
                              operator: {
                                isKeyword: false,
                                lnum: 56,
                                lnumStartIndex: 1082,
                                range: [
                                  1123,
                                  1124,
                                ],
                                type: "Minus",
                                value: "-",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 56,
                                lnumStartIndex: 1082,
                                range: [
                                  1119,
                                  1120,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    condition: BooleanLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 56,
                        lnumStartIndex: 1082,
                        range: [
                          1105,
                          1109,
                        ],
                        type: "BooleanLiteral",
                        value: "true",
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 57,
                lnumStartIndex: 1135,
                range: [
                  1137,
                  1144,
                ],
                type: "StringLiteral",
                value: "'LOADK'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 57,
                lnumStartIndex: 1135,
                range: [
                  1146,
                  1151,
                ],
                type: "StringLiteral",
                value: "'JMP'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 57,
                lnumStartIndex: 1135,
                range: [
                  1153,
                  1161,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 56,
              lnumStartIndex: 1082,
              range: [
                1082,
                1087,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  WhileStatement {
                    block: Block {
                      statements: [
                        LocalStatement {
                          init: [
                            UnaryExpression {
                              argument: NumericLiteral {
                                token: {
                                  isKeyword: false,
                                  lnum: 59,
                                  lnumStartIndex: 1164,
                                  range: [
                                    1203,
                                    1204,
                                  ],
                                  type: "NumericLiteral",
                                  value: "1",
                                },
                              },
                              operator: {
                                isKeyword: false,
                                lnum: 59,
                                lnumStartIndex: 1164,
                                range: [
                                  1202,
                                  1203,
                                ],
                                type: "Minus",
                                value: "-",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 59,
                                lnumStartIndex: 1164,
                                range: [
                                  1198,
                                  1199,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    condition: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 59,
                        lnumStartIndex: 1164,
                        range: [
                          1187,
                          1188,
                        ],
                        type: "NumericLiteral",
                        value: "1",
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 60,
                lnumStartIndex: 1214,
                range: [
                  1216,
                  1223,
                ],
                type: "StringLiteral",
                value: "'LOADK'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 60,
                lnumStartIndex: 1214,
                range: [
                  1225,
                  1230,
                ],
                type: "StringLiteral",
                value: "'JMP'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 60,
                lnumStartIndex: 1214,
                range: [
                  1232,
                  1240,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 59,
              lnumStartIndex: 1164,
              range: [
                1164,
                1169,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  RepeatStatement {
                    block: Block {
                      statements: [
                        LocalStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 62,
                                lnumStartIndex: 1243,
                                range: [
                                  1277,
                                  1278,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 62,
                                lnumStartIndex: 1243,
                                range: [
                                  1273,
                                  1274,
                                ],
                                type: "Identifier",
                                value: "x",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    condition: BooleanLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 62,
                        lnumStartIndex: 1243,
                        range: [
                          1285,
                          1290,
                        ],
                        type: "BooleanLiteral",
                        value: "false",
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 63,
                lnumStartIndex: 1296,
                range: [
                  1298,
                  1305,
                ],
                type: "StringLiteral",
                value: "'LOADK'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 63,
                lnumStartIndex: 1296,
                range: [
                  1307,
                  1312,
                ],
                type: "StringLiteral",
                value: "'JMP'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 63,
                lnumStartIndex: 1296,
                range: [
                  1314,
                  1322,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 62,
              lnumStartIndex: 1243,
              range: [
                1243,
                1248,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  RepeatStatement {
                    block: Block {
                      statements: [
                        LocalStatement {
                          init: [
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 65,
                                lnumStartIndex: 1325,
                                range: [
                                  1355,
                                  1356,
                                ],
                                type: "Identifier",
                                value: "x",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    condition: NilLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 65,
                        lnumStartIndex: 1325,
                        range: [
                          1363,
                          1366,
                        ],
                        type: "NilLiteral",
                        value: "nil",
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 66,
                lnumStartIndex: 1372,
                range: [
                  1374,
                  1383,
                ],
                type: "StringLiteral",
                value: "'LOADNIL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 66,
                lnumStartIndex: 1372,
                range: [
                  1385,
                  1390,
                ],
                type: "StringLiteral",
                value: "'JMP'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 66,
                lnumStartIndex: 1372,
                range: [
                  1392,
                  1400,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 65,
              lnumStartIndex: 1325,
              range: [
                1325,
                1330,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  RepeatStatement {
                    block: Block {
                      statements: [
                        LocalStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 68,
                                lnumStartIndex: 1403,
                                range: [
                                  1437,
                                  1438,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 68,
                                lnumStartIndex: 1403,
                                range: [
                                  1433,
                                  1434,
                                ],
                                type: "Identifier",
                                value: "x",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    condition: BooleanLiteral {
                      token: {
                        isKeyword: true,
                        lnum: 68,
                        lnumStartIndex: 1403,
                        range: [
                          1445,
                          1449,
                        ],
                        type: "BooleanLiteral",
                        value: "true",
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 69,
                lnumStartIndex: 1455,
                range: [
                  1457,
                  1464,
                ],
                type: "StringLiteral",
                value: "'LOADK'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 69,
                lnumStartIndex: 1455,
                range: [
                  1466,
                  1474,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 68,
              lnumStartIndex: 1403,
              range: [
                1403,
                1408,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      BinaryExpression {
                        left: BinaryExpression {
                          left: BinaryExpression {
                            left: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 73,
                                lnumStartIndex: 1501,
                                range: [
                                  1535,
                                  1536,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 73,
                              lnumStartIndex: 1501,
                              range: [
                                1537,
                                1539,
                              ],
                              type: "DoubleDot",
                              value: "..",
                            },
                            right: Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 73,
                                lnumStartIndex: 1501,
                                range: [
                                  1540,
                                  1541,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 73,
                            lnumStartIndex: 1501,
                            range: [
                              1542,
                              1544,
                            ],
                            type: "DoubleDot",
                            value: "..",
                          },
                          right: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 73,
                              lnumStartIndex: 1501,
                              range: [
                                1545,
                                1546,
                              ],
                              type: "Identifier",
                              value: "c",
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 73,
                          lnumStartIndex: 1501,
                          range: [
                            1547,
                            1549,
                          ],
                          type: "DoubleDot",
                          value: "..",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 73,
                            lnumStartIndex: 1501,
                            range: [
                              1550,
                              1551,
                            ],
                            type: "Identifier",
                            value: "d",
                          },
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 73,
                    lnumStartIndex: 1501,
                    range: [
                      1516,
                      1517,
                    ],
                    type: "Identifier",
                    value: "a",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 73,
                    lnumStartIndex: 1501,
                    range: [
                      1519,
                      1520,
                    ],
                    type: "Identifier",
                    value: "b",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 73,
                    lnumStartIndex: 1501,
                    range: [
                      1522,
                      1523,
                    ],
                    type: "Identifier",
                    value: "c",
                  },
                },
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 73,
                    lnumStartIndex: 1501,
                    range: [
                      1525,
                      1526,
                    ],
                    type: "Identifier",
                    value: "d",
                  },
                },
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 74,
                lnumStartIndex: 1557,
                range: [
                  1559,
                  1565,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 74,
                lnumStartIndex: 1557,
                range: [
                  1567,
                  1573,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 74,
                lnumStartIndex: 1557,
                range: [
                  1575,
                  1581,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 74,
                lnumStartIndex: 1557,
                range: [
                  1583,
                  1589,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 74,
                lnumStartIndex: 1557,
                range: [
                  1591,
                  1599,
                ],
                type: "StringLiteral",
                value: "'CONCAT'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 74,
                lnumStartIndex: 1557,
                range: [
                  1601,
                  1609,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 73,
              lnumStartIndex: 1501,
              range: [
                1501,
                1506,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      UnaryExpression {
                        argument: UnaryExpression {
                          argument: NilLiteral {
                            token: {
                              isKeyword: true,
                              lnum: 77,
                              lnumStartIndex: 1619,
                              range: [
                                1651,
                                1654,
                              ],
                              type: "NilLiteral",
                              value: "nil",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 77,
                            lnumStartIndex: 1619,
                            range: [
                              1647,
                              1650,
                            ],
                            type: "Not",
                            value: "not",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 77,
                          lnumStartIndex: 1619,
                          range: [
                            1643,
                            1646,
                          ],
                          type: "Not",
                          value: "not",
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 77,
                lnumStartIndex: 1619,
                range: [
                  1660,
                  1670,
                ],
                type: "StringLiteral",
                value: "'LOADBOOL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 77,
                lnumStartIndex: 1619,
                range: [
                  1672,
                  1680,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 77,
              lnumStartIndex: 1619,
              range: [
                1619,
                1624,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      UnaryExpression {
                        argument: UnaryExpression {
                          argument: BooleanLiteral {
                            token: {
                              isKeyword: true,
                              lnum: 78,
                              lnumStartIndex: 1682,
                              range: [
                                1714,
                                1719,
                              ],
                              type: "BooleanLiteral",
                              value: "false",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 78,
                            lnumStartIndex: 1682,
                            range: [
                              1710,
                              1713,
                            ],
                            type: "Not",
                            value: "not",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 78,
                          lnumStartIndex: 1682,
                          range: [
                            1706,
                            1709,
                          ],
                          type: "Not",
                          value: "not",
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 78,
                lnumStartIndex: 1682,
                range: [
                  1725,
                  1735,
                ],
                type: "StringLiteral",
                value: "'LOADBOOL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 78,
                lnumStartIndex: 1682,
                range: [
                  1737,
                  1745,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 78,
              lnumStartIndex: 1682,
              range: [
                1682,
                1687,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      UnaryExpression {
                        argument: UnaryExpression {
                          argument: BooleanLiteral {
                            token: {
                              isKeyword: true,
                              lnum: 79,
                              lnumStartIndex: 1747,
                              range: [
                                1779,
                                1783,
                              ],
                              type: "BooleanLiteral",
                              value: "true",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 79,
                            lnumStartIndex: 1747,
                            range: [
                              1775,
                              1778,
                            ],
                            type: "Not",
                            value: "not",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 79,
                          lnumStartIndex: 1747,
                          range: [
                            1771,
                            1774,
                          ],
                          type: "Not",
                          value: "not",
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 79,
                lnumStartIndex: 1747,
                range: [
                  1789,
                  1799,
                ],
                type: "StringLiteral",
                value: "'LOADBOOL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 79,
                lnumStartIndex: 1747,
                range: [
                  1801,
                  1809,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 79,
              lnumStartIndex: 1747,
              range: [
                1747,
                1752,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  ReturnStatement {
                    arguments: [
                      UnaryExpression {
                        argument: UnaryExpression {
                          argument: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 80,
                              lnumStartIndex: 1811,
                              range: [
                                1843,
                                1844,
                              ],
                              type: "NumericLiteral",
                              value: "1",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 80,
                            lnumStartIndex: 1811,
                            range: [
                              1839,
                              1842,
                            ],
                            type: "Not",
                            value: "not",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 80,
                          lnumStartIndex: 1811,
                          range: [
                            1835,
                            1838,
                          ],
                          type: "Not",
                          value: "not",
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 80,
                lnumStartIndex: 1811,
                range: [
                  1850,
                  1860,
                ],
                type: "StringLiteral",
                value: "'LOADBOOL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 80,
                lnumStartIndex: 1811,
                range: [
                  1862,
                  1870,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 80,
              lnumStartIndex: 1811,
              range: [
                1811,
                1816,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 84,
                          lnumStartIndex: 1917,
                          range: [
                            1925,
                            1926,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 84,
                          lnumStartIndex: 1917,
                          range: [
                            1928,
                            1929,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 84,
                          lnumStartIndex: 1917,
                          range: [
                            1931,
                            1932,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 84,
                          lnumStartIndex: 1917,
                          range: [
                            1934,
                            1935,
                          ],
                          type: "Identifier",
                          value: "d",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 85,
                            lnumStartIndex: 1936,
                            range: [
                              1942,
                              1943,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 85,
                          lnumStartIndex: 1936,
                          range: [
                            1944,
                            1945,
                          ],
                          type: "Star",
                          value: "*",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 85,
                            lnumStartIndex: 1936,
                            range: [
                              1946,
                              1947,
                            ],
                            type: "NumericLiteral",
                            value: "2",
                          },
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 85,
                          lnumStartIndex: 1936,
                          range: [
                            1938,
                            1939,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      UnaryExpression {
                        argument: GroupingExpression {
                          expression: BinaryExpression {
                            left: GroupingExpression {
                              expression: BinaryExpression {
                                left: BinaryExpression {
                                  left: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 86,
                                      lnumStartIndex: 1948,
                                      range: [
                                        1966,
                                        1967,
                                      ],
                                      type: "Identifier",
                                      value: "a",
                                    },
                                  },
                                  operator: {
                                    isKeyword: false,
                                    lnum: 86,
                                    lnumStartIndex: 1948,
                                    range: [
                                      1968,
                                      1969,
                                    ],
                                    type: "Plus",
                                    value: "+",
                                  },
                                  right: BinaryExpression {
                                    left: Identifier {
                                      token: {
                                        isKeyword: false,
                                        lnum: 86,
                                        lnumStartIndex: 1948,
                                        range: [
                                          1970,
                                          1971,
                                        ],
                                        type: "Identifier",
                                        value: "d",
                                      },
                                    },
                                    operator: {
                                      isKeyword: false,
                                      lnum: 86,
                                      lnumStartIndex: 1948,
                                      range: [
                                        1972,
                                        1973,
                                      ],
                                      type: "Divide",
                                      value: "/",
                                    },
                                    right: UnaryExpression {
                                      argument: NumericLiteral {
                                        token: {
                                          isKeyword: false,
                                          lnum: 86,
                                          lnumStartIndex: 1948,
                                          range: [
                                            1975,
                                            1979,
                                          ],
                                          type: "NumericLiteral",
                                          value: "20.5",
                                        },
                                      },
                                      operator: {
                                        isKeyword: false,
                                        lnum: 86,
                                        lnumStartIndex: 1948,
                                        range: [
                                          1974,
                                          1975,
                                        ],
                                        type: "Minus",
                                        value: "-",
                                      },
                                    },
                                  },
                                },
                                operator: {
                                  isKeyword: false,
                                  lnum: 86,
                                  lnumStartIndex: 1948,
                                  range: [
                                    1980,
                                    1981,
                                  ],
                                  type: "Minus",
                                  value: "-",
                                },
                                right: IndexExpression {
                                  base: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 86,
                                      lnumStartIndex: 1948,
                                      range: [
                                        1982,
                                        1983,
                                      ],
                                      type: "Identifier",
                                      value: "a",
                                    },
                                  },
                                  index: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 86,
                                      lnumStartIndex: 1948,
                                      range: [
                                        1984,
                                        1985,
                                      ],
                                      type: "Identifier",
                                      value: "b",
                                    },
                                  },
                                },
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 86,
                              lnumStartIndex: 1948,
                              range: [
                                1988,
                                1989,
                              ],
                              type: "Carrot",
                              value: "^",
                            },
                            right: MemberExpression {
                              base: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 86,
                                  lnumStartIndex: 1948,
                                  range: [
                                    1990,
                                    1991,
                                  ],
                                  type: "Identifier",
                                  value: "a",
                                },
                              },
                              identifier: Identifier {
                                token: {
                                  isKeyword: false,
                                  lnum: 86,
                                  lnumStartIndex: 1948,
                                  range: [
                                    1992,
                                    1993,
                                  ],
                                  type: "Identifier",
                                  value: "x",
                                },
                              },
                              indexer: ".",
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 86,
                          lnumStartIndex: 1948,
                          range: [
                            1963,
                            1964,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 86,
                          lnumStartIndex: 1948,
                          range: [
                            1996,
                            1997,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                    variables: [
                      IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 86,
                            lnumStartIndex: 1948,
                            range: [
                              1950,
                              1951,
                            ],
                            type: "Identifier",
                            value: "c",
                          },
                        },
                        index: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 86,
                            lnumStartIndex: 1948,
                            range: [
                              1952,
                              1953,
                            ],
                            type: "NumericLiteral",
                            value: "4",
                          },
                        },
                      },
                      IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 86,
                            lnumStartIndex: 1948,
                            range: [
                              1956,
                              1957,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        index: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 86,
                            lnumStartIndex: 1948,
                            range: [
                              1958,
                              1959,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 88,
                lnumStartIndex: 2003,
                range: [
                  2005,
                  2010,
                ],
                type: "StringLiteral",
                value: "'MUL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 89,
                lnumStartIndex: 2012,
                range: [
                  2014,
                  2019,
                ],
                type: "StringLiteral",
                value: "'DIV'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 89,
                lnumStartIndex: 2012,
                range: [
                  2021,
                  2026,
                ],
                type: "StringLiteral",
                value: "'ADD'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 89,
                lnumStartIndex: 2012,
                range: [
                  2028,
                  2038,
                ],
                type: "StringLiteral",
                value: "'GETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 89,
                lnumStartIndex: 2012,
                range: [
                  2040,
                  2045,
                ],
                type: "StringLiteral",
                value: "'SUB'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 89,
                lnumStartIndex: 2012,
                range: [
                  2047,
                  2057,
                ],
                type: "StringLiteral",
                value: "'GETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 89,
                lnumStartIndex: 2012,
                range: [
                  2059,
                  2064,
                ],
                type: "StringLiteral",
                value: "'POW'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 90,
                lnumStartIndex: 2066,
                range: [
                  2068,
                  2073,
                ],
                type: "StringLiteral",
                value: "'UNM'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 90,
                lnumStartIndex: 2066,
                range: [
                  2075,
                  2085,
                ],
                type: "StringLiteral",
                value: "'SETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 90,
                lnumStartIndex: 2066,
                range: [
                  2087,
                  2097,
                ],
                type: "StringLiteral",
                value: "'SETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 90,
                lnumStartIndex: 2066,
                range: [
                  2099,
                  2107,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 83,
              lnumStartIndex: 1900,
              range: [
                1900,
                1905,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2158,
                          range: [
                            2166,
                            2167,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 95,
                          lnumStartIndex: 2158,
                          range: [
                            2169,
                            2170,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 96,
                          lnumStartIndex: 2171,
                          range: [
                            2179,
                            2180,
                          ],
                          type: "NumericLiteral",
                          value: "0",
                        },
                      },
                    ],
                    variables: [
                      MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2171,
                            range: [
                              2173,
                              2174,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 96,
                            lnumStartIndex: 2171,
                            range: [
                              2175,
                              2176,
                            ],
                            type: "Identifier",
                            value: "x",
                          },
                        },
                        indexer: ".",
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 97,
                          lnumStartIndex: 2181,
                          range: [
                            2189,
                            2190,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                    variables: [
                      MemberExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 97,
                            lnumStartIndex: 2181,
                            range: [
                              2183,
                              2184,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        identifier: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 97,
                            lnumStartIndex: 2181,
                            range: [
                              2185,
                              2186,
                            ],
                            type: "Identifier",
                            value: "x",
                          },
                        },
                        indexer: ".",
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      StringLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 98,
                          lnumStartIndex: 2191,
                          range: [
                            2200,
                            2203,
                          ],
                          type: "StringLiteral",
                          value: "'y'",
                        },
                      },
                    ],
                    variables: [
                      IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 98,
                            lnumStartIndex: 2191,
                            range: [
                              2193,
                              2194,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        index: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 98,
                            lnumStartIndex: 2191,
                            range: [
                              2195,
                              2196,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      BinaryExpression {
                        left: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 99,
                            lnumStartIndex: 2204,
                            range: [
                              2210,
                              2211,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 99,
                          lnumStartIndex: 2204,
                          range: [
                            2212,
                            2213,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 99,
                            lnumStartIndex: 2204,
                            range: [
                              2214,
                              2215,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 99,
                          lnumStartIndex: 2204,
                          range: [
                            2206,
                            2207,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      BinaryExpression {
                        left: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 100,
                            lnumStartIndex: 2216,
                            range: [
                              2222,
                              2223,
                            ],
                            type: "NumericLiteral",
                            value: "1",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 100,
                          lnumStartIndex: 2216,
                          range: [
                            2224,
                            2225,
                          ],
                          type: "Divide",
                          value: "/",
                        },
                        right: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 100,
                            lnumStartIndex: 2216,
                            range: [
                              2226,
                              2227,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 100,
                          lnumStartIndex: 2216,
                          range: [
                            2218,
                            2219,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      BinaryExpression {
                        left: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 101,
                            lnumStartIndex: 2228,
                            range: [
                              2234,
                              2235,
                            ],
                            type: "NumericLiteral",
                            value: "5",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 101,
                          lnumStartIndex: 2228,
                          range: [
                            2236,
                            2237,
                          ],
                          type: "Plus",
                          value: "+",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 101,
                            lnumStartIndex: 2228,
                            range: [
                              2238,
                              2239,
                            ],
                            type: "NumericLiteral",
                            value: "4",
                          },
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 101,
                          lnumStartIndex: 2228,
                          range: [
                            2230,
                            2231,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      BooleanLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 102,
                          lnumStartIndex: 2240,
                          range: [
                            2252,
                            2257,
                          ],
                          type: "BooleanLiteral",
                          value: "false",
                        },
                      },
                    ],
                    variables: [
                      IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 102,
                            lnumStartIndex: 2240,
                            range: [
                              2242,
                              2243,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        index: BooleanLiteral {
                          token: {
                            isKeyword: true,
                            lnum: 102,
                            lnumStartIndex: 2240,
                            range: [
                              2244,
                              2248,
                            ],
                            type: "BooleanLiteral",
                            value: "true",
                          },
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 104,
                lnumStartIndex: 2263,
                range: [
                  2265,
                  2275,
                ],
                type: "StringLiteral",
                value: "'SETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 104,
                lnumStartIndex: 2263,
                range: [
                  2277,
                  2287,
                ],
                type: "StringLiteral",
                value: "'SETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 104,
                lnumStartIndex: 2263,
                range: [
                  2289,
                  2299,
                ],
                type: "StringLiteral",
                value: "'SETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 104,
                lnumStartIndex: 2263,
                range: [
                  2301,
                  2306,
                ],
                type: "StringLiteral",
                value: "'SUB'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 104,
                lnumStartIndex: 2263,
                range: [
                  2308,
                  2313,
                ],
                type: "StringLiteral",
                value: "'DIV'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 104,
                lnumStartIndex: 2263,
                range: [
                  2315,
                  2322,
                ],
                type: "StringLiteral",
                value: "'LOADK'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 105,
                lnumStartIndex: 2324,
                range: [
                  2326,
                  2336,
                ],
                type: "StringLiteral",
                value: "'SETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 105,
                lnumStartIndex: 2324,
                range: [
                  2338,
                  2346,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 94,
              lnumStartIndex: 2141,
              range: [
                2141,
                2146,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionLocalStatement {
        block: Block {
          statements: [
            ReturnStatement {
              arguments: [
                BinaryExpression {
                  left: BinaryExpression {
                    left: BinaryExpression {
                      left: UnaryExpression {
                        argument: GroupingExpression {
                          expression: BinaryExpression {
                            left: GroupingExpression {
                              expression: BinaryExpression {
                                left: BinaryExpression {
                                  left: NumericLiteral {
                                    token: {
                                      isKeyword: false,
                                      lnum: 107,
                                      lnumStartIndex: 2349,
                                      range: [
                                        2378,
                                        2379,
                                      ],
                                      type: "NumericLiteral",
                                      value: "2",
                                    },
                                  },
                                  operator: {
                                    isKeyword: false,
                                    lnum: 107,
                                    lnumStartIndex: 2349,
                                    range: [
                                      2380,
                                      2381,
                                    ],
                                    type: "Carrot",
                                    value: "^",
                                  },
                                  right: NumericLiteral {
                                    token: {
                                      isKeyword: false,
                                      lnum: 107,
                                      lnumStartIndex: 2349,
                                      range: [
                                        2382,
                                        2383,
                                      ],
                                      type: "NumericLiteral",
                                      value: "8",
                                    },
                                  },
                                },
                                operator: {
                                  isKeyword: false,
                                  lnum: 107,
                                  lnumStartIndex: 2349,
                                  range: [
                                    2384,
                                    2385,
                                  ],
                                  type: "Plus",
                                  value: "+",
                                },
                                right: UnaryExpression {
                                  argument: GroupingExpression {
                                    expression: UnaryExpression {
                                      argument: NumericLiteral {
                                        token: {
                                          isKeyword: false,
                                          lnum: 107,
                                          lnumStartIndex: 2349,
                                          range: [
                                            2389,
                                            2390,
                                          ],
                                          type: "NumericLiteral",
                                          value: "1",
                                        },
                                      },
                                      operator: {
                                        isKeyword: false,
                                        lnum: 107,
                                        lnumStartIndex: 2349,
                                        range: [
                                          2388,
                                          2389,
                                        ],
                                        type: "Minus",
                                        value: "-",
                                      },
                                    },
                                  },
                                  operator: {
                                    isKeyword: false,
                                    lnum: 107,
                                    lnumStartIndex: 2349,
                                    range: [
                                      2386,
                                      2387,
                                    ],
                                    type: "Minus",
                                    value: "-",
                                  },
                                },
                              },
                            },
                            operator: {
                              isKeyword: false,
                              lnum: 107,
                              lnumStartIndex: 2349,
                              range: [
                                2393,
                                2394,
                              ],
                              type: "Percentage",
                              value: "%",
                            },
                            right: NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 107,
                                lnumStartIndex: 2349,
                                range: [
                                  2395,
                                  2396,
                                ],
                                type: "NumericLiteral",
                                value: "8",
                              },
                            },
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 107,
                          lnumStartIndex: 2349,
                          range: [
                            2375,
                            2376,
                          ],
                          type: "Minus",
                          value: "-",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 2349,
                        range: [
                          2398,
                          2399,
                        ],
                        type: "Divide",
                        value: "/",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 107,
                          lnumStartIndex: 2349,
                          range: [
                            2400,
                            2401,
                          ],
                          type: "NumericLiteral",
                          value: "2",
                        },
                      },
                    },
                    operator: {
                      isKeyword: false,
                      lnum: 107,
                      lnumStartIndex: 2349,
                      range: [
                        2402,
                        2403,
                      ],
                      type: "Star",
                      value: "*",
                    },
                    right: NumericLiteral {
                      token: {
                        isKeyword: false,
                        lnum: 107,
                        lnumStartIndex: 2349,
                        range: [
                          2404,
                          2405,
                        ],
                        type: "NumericLiteral",
                        value: "4",
                      },
                    },
                  },
                  operator: {
                    isKeyword: false,
                    lnum: 107,
                    lnumStartIndex: 2349,
                    range: [
                      2406,
                      2407,
                    ],
                    type: "Minus",
                    value: "-",
                  },
                  right: NumericLiteral {
                    token: {
                      isKeyword: false,
                      lnum: 107,
                      lnumStartIndex: 2349,
                      range: [
                        2408,
                        2409,
                      ],
                      type: "NumericLiteral",
                      value: "3",
                    },
                  },
                },
              ],
            },
          ],
        },
        funcname: Identifier {
          token: {
            isKeyword: false,
            lnum: 107,
            lnumStartIndex: 2349,
            range: [
              2364,
              2365,
            ],
            type: "Identifier",
            value: "f",
          },
        },
        parlist: [
        ],
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 109,
                lnumStartIndex: 2415,
                range: [
                  2421,
                  2422,
                ],
                type: "Identifier",
                value: "f",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 109,
                lnumStartIndex: 2415,
                range: [
                  2424,
                  2431,
                ],
                type: "StringLiteral",
                value: "'LOADK'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 109,
                lnumStartIndex: 2415,
                range: [
                  2433,
                  2441,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 109,
              lnumStartIndex: 2415,
              range: [
                2415,
                2420,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            BinaryExpression {
              left: FunctionCallExpression {
                args: [
                ],
                base: Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 110,
                    lnumStartIndex: 2443,
                    range: [
                      2450,
                      2451,
                    ],
                    type: "Identifier",
                    value: "f",
                  },
                },
              },
              operator: {
                isKeyword: false,
                lnum: 110,
                lnumStartIndex: 2443,
                range: [
                  2454,
                  2456,
                ],
                type: "DoubleEqual",
                value: "==",
              },
              right: UnaryExpression {
                argument: NumericLiteral {
                  token: {
                    isKeyword: false,
                    lnum: 110,
                    lnumStartIndex: 2443,
                    range: [
                      2458,
                      2459,
                    ],
                    type: "NumericLiteral",
                    value: "5",
                  },
                },
                operator: {
                  isKeyword: false,
                  lnum: 110,
                  lnumStartIndex: 2443,
                  range: [
                    2457,
                    2458,
                  ],
                  type: "Minus",
                  value: "-",
                },
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 110,
              lnumStartIndex: 2443,
              range: [
                2443,
                2449,
              ],
              type: "Identifier",
              value: "assert",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 113,
                          lnumStartIndex: 2479,
                          range: [
                            2487,
                            2488,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 113,
                          lnumStartIndex: 2479,
                          range: [
                            2490,
                            2491,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 113,
                          lnumStartIndex: 2479,
                          range: [
                            2493,
                            2494,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 114,
                          lnumStartIndex: 2495,
                          range: [
                            2507,
                            2508,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 114,
                          lnumStartIndex: 2495,
                          range: [
                            2510,
                            2511,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                    variables: [
                      IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 114,
                            lnumStartIndex: 2495,
                            range: [
                              2497,
                              2498,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        index: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 114,
                            lnumStartIndex: 2495,
                            range: [
                              2499,
                              2500,
                            ],
                            type: "Identifier",
                            value: "c",
                          },
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 114,
                          lnumStartIndex: 2495,
                          range: [
                            2503,
                            2504,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 115,
                          lnumStartIndex: 2512,
                          range: [
                            2524,
                            2525,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 115,
                          lnumStartIndex: 2512,
                          range: [
                            2527,
                            2528,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                    variables: [
                      IndexExpression {
                        base: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 115,
                            lnumStartIndex: 2512,
                            range: [
                              2514,
                              2515,
                            ],
                            type: "Identifier",
                            value: "b",
                          },
                        },
                        index: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 115,
                            lnumStartIndex: 2512,
                            range: [
                              2516,
                              2517,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 115,
                          lnumStartIndex: 2512,
                          range: [
                            2520,
                            2521,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 116,
                          lnumStartIndex: 2529,
                          range: [
                            2538,
                            2539,
                          ],
                          type: "Identifier",
                          value: "c",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 116,
                          lnumStartIndex: 2529,
                          range: [
                            2541,
                            2542,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 116,
                          lnumStartIndex: 2529,
                          range: [
                            2531,
                            2532,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 116,
                          lnumStartIndex: 2529,
                          range: [
                            2534,
                            2535,
                          ],
                          type: "Identifier",
                          value: "b",
                        },
                      },
                    ],
                  },
                  AssignmentStatement {
                    init: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 117,
                          lnumStartIndex: 2543,
                          range: [
                            2549,
                            2550,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 117,
                          lnumStartIndex: 2543,
                          range: [
                            2545,
                            2546,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 119,
                lnumStartIndex: 2556,
                range: [
                  2558,
                  2564,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 119,
                lnumStartIndex: 2556,
                range: [
                  2566,
                  2572,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 119,
                lnumStartIndex: 2556,
                range: [
                  2574,
                  2584,
                ],
                type: "StringLiteral",
                value: "'SETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 120,
                lnumStartIndex: 2586,
                range: [
                  2588,
                  2594,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 120,
                lnumStartIndex: 2586,
                range: [
                  2596,
                  2602,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 120,
                lnumStartIndex: 2586,
                range: [
                  2604,
                  2610,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 120,
                lnumStartIndex: 2586,
                range: [
                  2612,
                  2622,
                ],
                type: "StringLiteral",
                value: "'SETTABLE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 121,
                lnumStartIndex: 2624,
                range: [
                  2626,
                  2632,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 121,
                lnumStartIndex: 2624,
                range: [
                  2634,
                  2640,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 121,
                lnumStartIndex: 2624,
                range: [
                  2642,
                  2648,
                ],
                type: "StringLiteral",
                value: "'MOVE'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 123,
                lnumStartIndex: 2673,
                range: [
                  2675,
                  2683,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 112,
              lnumStartIndex: 2462,
              range: [
                2462,
                2467,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  IfStatement {
                    elseBlock: null,
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 127,
                                lnumStartIndex: 2710,
                                range: [
                                  2755,
                                  2756,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 127,
                                lnumStartIndex: 2710,
                                range: [
                                  2751,
                                  2752,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 127,
                            lnumStartIndex: 2710,
                            range: [
                              2736,
                              2737,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 127,
                          lnumStartIndex: 2710,
                          range: [
                            2738,
                            2740,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NilLiteral {
                          token: {
                            isKeyword: true,
                            lnum: 127,
                            lnumStartIndex: 2710,
                            range: [
                              2741,
                              2744,
                            ],
                            type: "NilLiteral",
                            value: "nil",
                          },
                        },
                      },
                    },
                  },
                  IfStatement {
                    elseBlock: null,
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 127,
                                lnumStartIndex: 2710,
                                range: [
                                  2783,
                                  2784,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 127,
                                lnumStartIndex: 2710,
                                range: [
                                  2779,
                                  2780,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 127,
                          lnumStartIndex: 2710,
                          range: [
                            2765,
                            2766,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 127,
                        lnumStartIndex: 2710,
                        range: [
                          2767,
                          2769,
                        ],
                        type: "TildaEqual",
                        value: "~=",
                      },
                      right: NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 127,
                          lnumStartIndex: 2710,
                          range: [
                            2770,
                            2773,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            FunctionExpression {
              block: Block {
                statements: [
                  IfStatement {
                    elseBlock: null,
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 128,
                                lnumStartIndex: 2794,
                                range: [
                                  2828,
                                  2829,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 128,
                                lnumStartIndex: 2794,
                                range: [
                                  2824,
                                  2825,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: GroupingExpression {
                      expression: BinaryExpression {
                        left: Identifier {
                          token: {
                            isKeyword: false,
                            lnum: 128,
                            lnumStartIndex: 2794,
                            range: [
                              2811,
                              2812,
                            ],
                            type: "Identifier",
                            value: "a",
                          },
                        },
                        operator: {
                          isKeyword: false,
                          lnum: 128,
                          lnumStartIndex: 2794,
                          range: [
                            2813,
                            2815,
                          ],
                          type: "DoubleEqual",
                          value: "==",
                        },
                        right: NumericLiteral {
                          token: {
                            isKeyword: false,
                            lnum: 128,
                            lnumStartIndex: 2794,
                            range: [
                              2816,
                              2817,
                            ],
                            type: "NumericLiteral",
                            value: "9",
                          },
                        },
                      },
                    },
                  },
                  IfStatement {
                    elseBlock: null,
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 128,
                                lnumStartIndex: 2794,
                                range: [
                                  2854,
                                  2855,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 128,
                                lnumStartIndex: 2794,
                                range: [
                                  2850,
                                  2851,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 128,
                          lnumStartIndex: 2794,
                          range: [
                            2838,
                            2839,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 128,
                        lnumStartIndex: 2794,
                        range: [
                          2840,
                          2842,
                        ],
                        type: "TildaEqual",
                        value: "~=",
                      },
                      right: NumericLiteral {
                        token: {
                          isKeyword: false,
                          lnum: 128,
                          lnumStartIndex: 2794,
                          range: [
                            2843,
                            2844,
                          ],
                          type: "NumericLiteral",
                          value: "9",
                        },
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 127,
              lnumStartIndex: 2710,
              range: [
                2710,
                2720,
              ],
              type: "Identifier",
              value: "checkequal",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  IfStatement {
                    elseBlock: null,
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            NumericLiteral {
                              token: {
                                isKeyword: false,
                                lnum: 130,
                                lnumStartIndex: 2866,
                                range: [
                                  2904,
                                  2905,
                                ],
                                type: "NumericLiteral",
                                value: "1",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 130,
                                lnumStartIndex: 2866,
                                range: [
                                  2900,
                                  2901,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: BinaryExpression {
                      left: Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 130,
                          lnumStartIndex: 2866,
                          range: [
                            2886,
                            2887,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                      operator: {
                        isKeyword: false,
                        lnum: 130,
                        lnumStartIndex: 2866,
                        range: [
                          2888,
                          2890,
                        ],
                        type: "DoubleEqual",
                        value: "==",
                      },
                      right: NilLiteral {
                        token: {
                          isKeyword: true,
                          lnum: 130,
                          lnumStartIndex: 2866,
                          range: [
                            2891,
                            2894,
                          ],
                          type: "NilLiteral",
                          value: "nil",
                        },
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 131,
                lnumStartIndex: 2915,
                range: [
                  2917,
                  2928,
                ],
                type: "StringLiteral",
                value: "'GETGLOBAL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 131,
                lnumStartIndex: 2915,
                range: [
                  2930,
                  2934,
                ],
                type: "StringLiteral",
                value: "'EQ'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 131,
                lnumStartIndex: 2915,
                range: [
                  2936,
                  2941,
                ],
                type: "StringLiteral",
                value: "'JMP'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 131,
                lnumStartIndex: 2915,
                range: [
                  2943,
                  2950,
                ],
                type: "StringLiteral",
                value: "'LOADK'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 131,
                lnumStartIndex: 2915,
                range: [
                  2952,
                  2963,
                ],
                type: "StringLiteral",
                value: "'SETGLOBAL'",
              },
            },
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 131,
                lnumStartIndex: 2915,
                range: [
                  2965,
                  2973,
                ],
                type: "StringLiteral",
                value: "'RETURN'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 130,
              lnumStartIndex: 2866,
              range: [
                2866,
                2871,
              ],
              type: "Identifier",
              value: "check",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 134,
                          lnumStartIndex: 2989,
                          range: [
                            3017,
                            3018,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  IfStatement {
                    elseBlock: null,
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 134,
                                lnumStartIndex: 2989,
                                range: [
                                  3045,
                                  3046,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 134,
                                lnumStartIndex: 2989,
                                range: [
                                  3041,
                                  3042,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: UnaryExpression {
                      argument: GroupingExpression {
                        expression: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 134,
                              lnumStartIndex: 2989,
                              range: [
                                3028,
                                3029,
                              ],
                              type: "Identifier",
                              value: "a",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 134,
                            lnumStartIndex: 2989,
                            range: [
                              3030,
                              3032,
                            ],
                            type: "Or",
                            value: "or",
                          },
                          right: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 134,
                              lnumStartIndex: 2989,
                              range: [
                                3033,
                                3034,
                              ],
                              type: "Identifier",
                              value: "b",
                            },
                          },
                        },
                      },
                      operator: {
                        isKeyword: true,
                        lnum: 134,
                        lnumStartIndex: 2989,
                        range: [
                          3023,
                          3026,
                        ],
                        type: "Not",
                        value: "not",
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
            FunctionExpression {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 135,
                          lnumStartIndex: 3056,
                          range: [
                            3075,
                            3076,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  IfStatement {
                    elseBlock: null,
                    elseifBlocks: [
                    ],
                    elseifConditions: [
                    ],
                    ifBlock: Block {
                      statements: [
                        AssignmentStatement {
                          init: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 135,
                                lnumStartIndex: 3056,
                                range: [
                                  3108,
                                  3109,
                                ],
                                type: "Identifier",
                                value: "a",
                              },
                            },
                          ],
                          variables: [
                            Identifier {
                              token: {
                                isKeyword: false,
                                lnum: 135,
                                lnumStartIndex: 3056,
                                range: [
                                  3104,
                                  3105,
                                ],
                                type: "Identifier",
                                value: "b",
                              },
                            },
                          ],
                        },
                      ],
                    },
                    ifCondition: GroupingExpression {
                      expression: BinaryExpression {
                        left: UnaryExpression {
                          argument: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 135,
                              lnumStartIndex: 3056,
                              range: [
                                3086,
                                3087,
                              ],
                              type: "Identifier",
                              value: "a",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 135,
                            lnumStartIndex: 3056,
                            range: [
                              3082,
                              3085,
                            ],
                            type: "Not",
                            value: "not",
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 135,
                          lnumStartIndex: 3056,
                          range: [
                            3088,
                            3091,
                          ],
                          type: "And",
                          value: "and",
                        },
                        right: UnaryExpression {
                          argument: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 135,
                              lnumStartIndex: 3056,
                              range: [
                                3096,
                                3097,
                              ],
                              type: "Identifier",
                              value: "b",
                            },
                          },
                          operator: {
                            isKeyword: true,
                            lnum: 135,
                            lnumStartIndex: 3056,
                            range: [
                              3092,
                              3095,
                            ],
                            type: "Not",
                            value: "not",
                          },
                        },
                      },
                    },
                  },
                ],
              },
              parlist: [
              ],
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 134,
              lnumStartIndex: 2989,
              range: [
                2989,
                2999,
              ],
              type: "Identifier",
              value: "checkequal",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            FunctionExpression {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 137,
                          lnumStartIndex: 3120,
                          range: [
                            3149,
                            3150,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  ReturnStatement {
                    arguments: [
                      BinaryExpression {
                        left: BinaryExpression {
                          left: NumericLiteral {
                            token: {
                              isKeyword: false,
                              lnum: 137,
                              lnumStartIndex: 3120,
                              range: [
                                3159,
                                3160,
                              ],
                              type: "NumericLiteral",
                              value: "0",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 137,
                            lnumStartIndex: 3120,
                            range: [
                              3161,
                              3163,
                            ],
                            type: "LessThanEqual",
                            value: "<=",
                          },
                          right: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 137,
                              lnumStartIndex: 3120,
                              range: [
                                3164,
                                3165,
                              ],
                              type: "Identifier",
                              value: "a",
                            },
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 137,
                          lnumStartIndex: 3120,
                          range: [
                            3166,
                            3169,
                          ],
                          type: "And",
                          value: "and",
                        },
                        right: BinaryExpression {
                          left: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 137,
                              lnumStartIndex: 3120,
                              range: [
                                3170,
                                3171,
                              ],
                              type: "Identifier",
                              value: "a",
                            },
                          },
                          operator: {
                            isKeyword: false,
                            lnum: 137,
                            lnumStartIndex: 3120,
                            range: [
                              3172,
                              3174,
                            ],
                            type: "LessThanEqual",
                            value: "<=",
                          },
                          right: Identifier {
                            token: {
                              isKeyword: false,
                              lnum: 137,
                              lnumStartIndex: 3120,
                              range: [
                                3175,
                                3176,
                              ],
                              type: "Identifier",
                              value: "l",
                            },
                          },
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 137,
                    lnumStartIndex: 3120,
                    range: [
                      3140,
                      3141,
                    ],
                    type: "Identifier",
                    value: "l",
                  },
                },
              ],
            },
            FunctionExpression {
              block: Block {
                statements: [
                  LocalStatement {
                    init: [
                    ],
                    variables: [
                      Identifier {
                        token: {
                          isKeyword: false,
                          lnum: 138,
                          lnumStartIndex: 3182,
                          range: [
                            3202,
                            3203,
                          ],
                          type: "Identifier",
                          value: "a",
                        },
                      },
                    ],
                  },
                  ReturnStatement {
                    arguments: [
                      UnaryExpression {
                        argument: GroupingExpression {
                          expression: BinaryExpression {
                            left: UnaryExpression {
                              argument: GroupingExpression {
                                expression: BinaryExpression {
                                  left: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 138,
                                      lnumStartIndex: 3182,
                                      range: [
                                        3222,
                                        3223,
                                      ],
                                      type: "Identifier",
                                      value: "a",
                                    },
                                  },
                                  operator: {
                                    isKeyword: false,
                                    lnum: 138,
                                    lnumStartIndex: 3182,
                                    range: [
                                      3224,
                                      3226,
                                    ],
                                    type: "GreaterThanEqual",
                                    value: ">=",
                                  },
                                  right: NumericLiteral {
                                    token: {
                                      isKeyword: false,
                                      lnum: 138,
                                      lnumStartIndex: 3182,
                                      range: [
                                        3227,
                                        3228,
                                      ],
                                      type: "NumericLiteral",
                                      value: "0",
                                    },
                                  },
                                },
                              },
                              operator: {
                                isKeyword: true,
                                lnum: 138,
                                lnumStartIndex: 3182,
                                range: [
                                  3217,
                                  3220,
                                ],
                                type: "Not",
                                value: "not",
                              },
                            },
                            operator: {
                              isKeyword: true,
                              lnum: 138,
                              lnumStartIndex: 3182,
                              range: [
                                3230,
                                3232,
                              ],
                              type: "Or",
                              value: "or",
                            },
                            right: UnaryExpression {
                              argument: GroupingExpression {
                                expression: BinaryExpression {
                                  left: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 138,
                                      lnumStartIndex: 3182,
                                      range: [
                                        3238,
                                        3239,
                                      ],
                                      type: "Identifier",
                                      value: "a",
                                    },
                                  },
                                  operator: {
                                    isKeyword: false,
                                    lnum: 138,
                                    lnumStartIndex: 3182,
                                    range: [
                                      3240,
                                      3242,
                                    ],
                                    type: "LessThanEqual",
                                    value: "<=",
                                  },
                                  right: Identifier {
                                    token: {
                                      isKeyword: false,
                                      lnum: 138,
                                      lnumStartIndex: 3182,
                                      range: [
                                        3243,
                                        3244,
                                      ],
                                      type: "Identifier",
                                      value: "l",
                                    },
                                  },
                                },
                              },
                              operator: {
                                isKeyword: true,
                                lnum: 138,
                                lnumStartIndex: 3182,
                                range: [
                                  3233,
                                  3236,
                                ],
                                type: "Not",
                                value: "not",
                              },
                            },
                          },
                        },
                        operator: {
                          isKeyword: true,
                          lnum: 138,
                          lnumStartIndex: 3182,
                          range: [
                            3212,
                            3215,
                          ],
                          type: "Not",
                          value: "not",
                        },
                      },
                    ],
                  },
                ],
              },
              parlist: [
                Identifier {
                  token: {
                    isKeyword: false,
                    lnum: 138,
                    lnumStartIndex: 3182,
                    range: [
                      3193,
                      3194,
                    ],
                    type: "Identifier",
                    value: "l",
                  },
                },
              ],
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 137,
              lnumStartIndex: 3120,
              range: [
                3120,
                3130,
              ],
              type: "Identifier",
              value: "checkequal",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 141,
                lnumStartIndex: 3254,
                range: [
                  3260,
                  3264,
                ],
                type: "StringLiteral",
                value: "'OK'",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 141,
              lnumStartIndex: 3254,
              range: [
                3254,
                3259,
              ],
              type: "Identifier",
              value: "print",
            },
          },
        },
      },
    ],
  },
}
`;
