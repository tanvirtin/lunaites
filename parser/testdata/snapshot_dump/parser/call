export const snapshot = {};

snapshot[`call 1`] = `
Chunk {
  block: Block {
    statements: [
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 1,
              lnumStartIndex: 0,
              range: [
                0,
                4,
              ],
              type: "Identifier",
              value: "call",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 2,
                lnumStartIndex: 7,
                range: [
                  12,
                  13,
                ],
                type: "NumericLiteral",
                value: "1",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 2,
              lnumStartIndex: 7,
              range: [
                7,
                11,
              ],
              type: "Identifier",
              value: "call",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 3,
                lnumStartIndex: 15,
                range: [
                  20,
                  21,
                ],
                type: "NumericLiteral",
                value: "1",
              },
            },
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 3,
                lnumStartIndex: 15,
                range: [
                  23,
                  24,
                ],
                type: "NumericLiteral",
                value: "2",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 3,
              lnumStartIndex: 15,
              range: [
                15,
                19,
              ],
              type: "Identifier",
              value: "call",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 4,
                lnumStartIndex: 26,
                range: [
                  31,
                  32,
                ],
                type: "NumericLiteral",
                value: "1",
              },
            },
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 4,
                lnumStartIndex: 26,
                range: [
                  34,
                  35,
                ],
                type: "NumericLiteral",
                value: "2",
              },
            },
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 4,
                lnumStartIndex: 26,
                range: [
                  37,
                  38,
                ],
                type: "NumericLiteral",
                value: "3",
              },
            },
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 4,
                lnumStartIndex: 26,
                range: [
                  40,
                  41,
                ],
                type: "NumericLiteral",
                value: "4",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 4,
              lnumStartIndex: 26,
              range: [
                26,
                30,
              ],
              type: "Identifier",
              value: "call",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            Identifier {
              token: {
                isKeyword: false,
                lnum: 5,
                lnumStartIndex: 43,
                range: [
                  48,
                  49,
                ],
                type: "Identifier",
                value: "a",
              },
            },
            Identifier {
              token: {
                isKeyword: false,
                lnum: 5,
                lnumStartIndex: 43,
                range: [
                  51,
                  52,
                ],
                type: "Identifier",
                value: "b",
              },
            },
            Identifier {
              token: {
                isKeyword: false,
                lnum: 5,
                lnumStartIndex: 43,
                range: [
                  54,
                  55,
                ],
                type: "Identifier",
                value: "c",
              },
            },
            Identifier {
              token: {
                isKeyword: false,
                lnum: 5,
                lnumStartIndex: 43,
                range: [
                  57,
                  58,
                ],
                type: "Identifier",
                value: "d",
              },
            },
            Identifier {
              token: {
                isKeyword: false,
                lnum: 5,
                lnumStartIndex: 43,
                range: [
                  60,
                  61,
                ],
                type: "Identifier",
                value: "e",
              },
            },
          ],
          base: Identifier {
            token: {
              isKeyword: false,
              lnum: 5,
              lnumStartIndex: 43,
              range: [
                43,
                47,
              ],
              type: "Identifier",
              value: "call",
            },
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 6,
                lnumStartIndex: 63,
                range: [
                  67,
                  70,
                ],
                type: "StringLiteral",
                value: '"a"',
              },
            },
          ],
          base: MemberExpression {
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 6,
                lnumStartIndex: 63,
                range: [
                  63,
                  64,
                ],
                type: "Identifier",
                value: "a",
              },
            },
            identifier: Identifier {
              token: {
                isKeyword: false,
                lnum: 6,
                lnumStartIndex: 63,
                range: [
                  65,
                  66,
                ],
                type: "Identifier",
                value: "a",
              },
            },
            indexer: ".",
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            NumericLiteral {
              token: {
                isKeyword: false,
                lnum: 7,
                lnumStartIndex: 72,
                range: [
                  78,
                  79,
                ],
                type: "NumericLiteral",
                value: "3",
              },
            },
          ],
          base: MemberExpression {
            base: MemberExpression {
              base: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 7,
                  lnumStartIndex: 72,
                  range: [
                    72,
                    73,
                  ],
                  type: "Identifier",
                  value: "a",
                },
              },
              identifier: Identifier {
                token: {
                  isKeyword: false,
                  lnum: 7,
                  lnumStartIndex: 72,
                  range: [
                    74,
                    75,
                  ],
                  type: "Identifier",
                  value: "b",
                },
              },
              indexer: ".",
            },
            identifier: Identifier {
              token: {
                isKeyword: false,
                lnum: 7,
                lnumStartIndex: 72,
                range: [
                  76,
                  77,
                ],
                type: "Identifier",
                value: "c",
              },
            },
            indexer: ".",
          },
        },
      },
      FunctionCallStatement {
        expression: FunctionCallExpression {
          args: [
            StringLiteral {
              token: {
                isKeyword: false,
                lnum: 8,
                lnumStartIndex: 81,
                range: [
                  89,
                  92,
                ],
                type: "StringLiteral",
                value: '"b"',
              },
            },
          ],
          base: MemberExpression {
            base: Identifier {
              token: {
                isKeyword: false,
                lnum: 8,
                lnumStartIndex: 81,
                range: [
                  81,
                  84,
                ],
                type: "Identifier",
                value: "sup",
              },
            },
            identifier: Identifier {
              token: {
                isKeyword: false,
                lnum: 8,
                lnumStartIndex: 81,
                range: [
                  85,
                  88,
                ],
                type: "Identifier",
                value: "man",
              },
            },
            indexer: ":",
          },
        },
      },
    ],
  },
}
`;
